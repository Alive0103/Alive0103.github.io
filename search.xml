<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/09/12/shumo/24%E5%9B%BD%E8%B5%9BB/"/>
      <url>/2024/09/12/shumo/24%E5%9B%BD%E8%B5%9BB/</url>
      
        <content type="html"><![CDATA[<h1>摘  要</h1><p>随着科技的快速发展，我国电子产品的市场需求持续增长，消费者对于电子产品的质量要求不断提高。如何高效地保证配件和成品的合格率并控制成本，成为了企业运营面临的重要挑战。本文建立成本效益模型、整数规划模型从而提出多工序生产过程中的决策方案。</p><p>针对问题一，考虑到平衡置信水平、总体次品率和检测结果误差范围，本文设计了基于单边假设检验的零配件抽样检测方案，根据置信度设定接受或拒绝假设的临界条件。在此基础上，本文根据二项分布概率函数计算给定置信度下允许的最大次品数，并基于次品数量的二项分布正态近似公式，求解得到不同误差范围下的最佳样本容量（详见图1）。结果表明，当抽样检测的极限误差期望值为5%时，情形(1)和(2)的样本容量应该分别设置为98和59，可接受的次品数量分别为15和9。</p><p>针对问题二，本文基于成本效益分析法，建立了以各阶段成本与销售额为约束条件的净收益最大化目标函数，通过遍历16种决策方案，以净利润为指标，得到了假设零配件数量均为1000个时6种情形下的最大利润。求解得到的最优方案为（详见表5），情形1、2、3、5不对零配件或成品进行检测，只拆解不合格成品；情形4只检测两款零配配件；情形6不检测任何元件、不拆解不合格成品。</p><p>针对问题三，在问题二的基础之上，由于问题更为复杂，涉及多阶段决策优化问题，本文建立整数规划模型进行优化加速，建立各环节的成本方程，以净利润最大化为目标， 建立复杂生产工艺中的决策模型，从而得到各部件的决策方案（详见表7）。结果显示应该对零件2、7、半成品2和成品进行检测，拆解半成品3和成品，所获单个商品的期望利润最高为73.14元。</p><p>针对问题四，本文采用问题一制定的方案，计算95%置信度下允许的最大次品数和最小抽样数，将其比值作为模拟抽样的次品率。对二、三问的模型重新求解，发现在次品率扰动时总体方案的制定策略不变。同时在次品率10%~15%时，成本效益模型较为敏感，方案需加入零件的检测，随着工艺的复杂化对扰动的变化更不敏感。</p><p>关键词：假设检验   成本效益分析      整数规划       模拟规划</p><h1>问题重述</h1><h2 id="问题的背景">问题的背景</h2><p>在竞争激烈的科技产品市场中，某企业通过高效采购与精准生产来满足消费者的需求。该产品的核心在于向外采购的两款零件的完美结合。然而，零配件的质量直接关联到最终产品的合格率，任何一个零配件的缺陷都会导致成品不合格；即便零配件均合格，成品也可能因装配过程中的其他因素而未能达标。面对这一挑战，企业需要在采购阶段设计有效的质量检测方案，以确保零配件的质量符合标准，同时还需制定一套全面的生产管理策略，包括零配件的检测、成品的检测与不合格品的处理，以最大化成品合格率并实现成本效益最大化。</p><h2 id="问题的提出">问题的提出</h2><p>根据所给的企业自身条件，制定切实可行的采购与生产方案，确保企业在电子产品市场中的竞争力，解决以下问题：</p><p>（1）基于供应商次品率承诺，设计高效抽样检测方案，以最小成本验证零配件质量，确保在95%置信度下拒收超标批次，90%置信度下接收合格批次。</p><p>（2）利用已知次品率，制定多阶段生产流程的质量控制决策，包括零配件检测、成品检测、不合格品处理及售后管理，以优化生产效益。</p><p>（3）针对m道工序、n个零配件的复杂生产环境，基于次品率数据，优化质量控制决策，确保在多工序背景下实现高效生产。</p><p>（4）优化基于抽样检测方法的全面质量控制策略，考虑数据波动，确保决策在不确定性下依然稳健有效。</p><h1>问题分析</h1><h2 id="问题一的分析">问题一的分析</h2><p>问题一已知企业需要验证供应商提供的零配件次品率是否超过标称值，要求寻求最优化的抽样检测策略，旨在以较少的检测次数达到所需的置信度标准。由于产品的次品率检测服从二项分布，可以运用统计学原理，根据次品率标称值、置信度要求来确定样本量，并采用假设检验的方法设计抽样检测方案，将供应商声称的次品率作为原假设，根据置信水平要求设定拒绝或接受零配件的临界条件，最后根据抽样检测结果进行验证。</p><h2 id="问题二的分析">问题二的分析</h2><p>问题二已知企业在该款电子产品的生产过程中涉及零配件及成品的检测、不合格品的拆解与用户调换等多个环节，六种情况下的具体参数已经给出，要求对企业生产过程的各个阶段做出最优决策，属于多阶段决策过程。可以利用成本效益分析法[1]，将零配件与成品的不同决策间的关联综合考虑，平衡检测成本、拆解花费与调换损失之间的关系，通过比较不同决策下的成本与预期收益，为不同的情况选择净利润最大的方案。</p><h2 id="问题三的分析">问题三的分析</h2><p>基于问题二的规划思想，求解多工序多零件的决策方案，传统规划模型求解多阶段模型的时间复杂度较高，进一步优化模型，核心在于对生产过程中的多个工序和零配件进行优化决策以获得最大化利润，建立整数规划模型求解。 通过构造是否检测的决策变量，基于购买成本、检测成本、装配成本 、拆解成本、调换损失、销售收益构建需要最大化的利益目标函数，利用决策变量的0-1性质并使用Matlab进行求解。</p><h2 id="问题四的分析">问题四的分析</h2><p>问题四要求做出基于抽样检测结果的全过程生产控制回顾。根据问题一设定的抽样方案，在题中表一、二所给的次品率的基础上，选择问题一中的某种情形作为判定条件，在满足判定条件的情况下记录实际得到的各零配件、半成品、成品的次品率，并以这些新的次品率替换掉原先题目表中一、二中的次品率标称值，再重复问题二、三的解决步骤，观察最优方案的变化并分析原因和表现，分别在不同工艺流程模式中给出适合不同类型企业的最优决策。</p><h1>模型假设</h1><ul><li>假设抽样检测中每个零配件的检测结果相互独立，单个样品的次品率可以用二项分布描述</li><li>假设装配过程中两种零配件满足数量1:1配对</li><li>假设企业生产过程中的决策一旦制定，不会中途发生改变，即不会受其他因素影响</li><li>假设每种零配件均专用于单一半成品的装配，每种半成品则专门用于构造唯一的成品</li></ul><h1>符号说明</h1><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">说明</th><th style="text-align:center">单位</th></tr></thead><tbody><tr><td style="text-align:center">( alpha )​</td><td style="text-align:center">置信度</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">( P )</td><td style="text-align:center">零配件的次品率</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">( N )</td><td style="text-align:center">零配件的购买数量</td><td style="text-align:center">个</td></tr><tr><td style="text-align:center">( $P_0 $)</td><td style="text-align:center">零件次品率标称值</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">( E )</td><td style="text-align:center">抽样检测的极限误差的期望值</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">( M)</td><td style="text-align:center">成品销售额</td><td style="text-align:center">元</td></tr><tr><td style="text-align:center">Profit</td><td style="text-align:center">企业净收益</td><td style="text-align:center">元</td></tr></tbody></table><h1>问题一模型的建立与求解</h1><p>基于单边假设检验的检测方案制定</p><p>本文假设使用二项分布进行抽样且零配件总量足够大，因此可以认为次品数量服从正态分布。两种情形下待检验的假设[2]如表1所示。</p><p><strong>表 1 次品率不超过 0.1 的假设检验</strong></p><table><thead><tr><th style="text-align:center">情形</th><th style="text-align:center">原假设 (H_0 )</th><th style="text-align:center">备择假设 (H_1)</th><th style="text-align:center">显著性水平 ( \alpha​ )</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">( P\leq0.10 )</td><td style="text-align:center">( P &gt; 0.10 )</td><td style="text-align:center">0.05</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">( P &gt; 0.10 )</td><td style="text-align:center">($ P \leq 0.10 $)</td><td style="text-align:center">0.10</td></tr></tbody></table><p>抽样检测方案的具体步骤如下所示：</p><p>Step<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="bold">1</mn></mrow><annotation encoding="application/x-tex">\mathbf{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathbf">1</span></span></span></span>：进行抽样检测</p><p>基于企业能接受的误差范围，从总体中随机抽取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>个样本，并记录下次品的数量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>，可得样本的次品率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>p</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">p</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>p</mi><mo>^</mo></mover><mo>=</mo><mfrac><mi>X</mi><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">\hat{p}=\frac{X}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">p</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>Step<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="bold">2</mn></mrow><annotation encoding="application/x-tex">\mathbf{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathbf">2</span></span></span></span>：计算置信度下允许的最大次品数</p><p>根据二项分布概率质量函数，计算在n次实验中发现k个次品的概率：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mrow><mo fence="true">(</mo><mi>X</mi><mo>=</mo><mi>k</mi><mo fence="true">)</mo></mrow><mo>=</mo><msubsup><mi>C</mi><mi>n</mi><mi>k</mi></msubsup><msubsup><mi>p</mi><mn>0</mn><mi>k</mi></msubsup><msup><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mn>0</mn></msub><mo fence="true">)</mo></mrow><mrow><mi>n</mi><mo>−</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">P\left(X=k\right)=C_n^kp_0^k\left(1-p_0\right)^{n-k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.239em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.989em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>Step<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="bold">3</mn></mrow><annotation encoding="application/x-tex">\mathbf{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathbf">3</span></span></span></span>：做出决策</p><p>企业在一定允许误差E下对计算得出的最小抽样检测样本进行检测，当累计分布函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mrow><mo fence="true">(</mo><mi>X</mi><mo>≤</mo><mi>k</mi><mo fence="true">)</mo></mrow><mo>≥</mo><mn>1</mn><mo>−</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">P\left(X\le k\right)\geq1-\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>时，此时的次品个数为在当前置信度下允许的最大值。当检验样本中的次品个数超标时，立即拒绝原假设。对于情形1，若检测出多于k个次品，则认为次品率显著大于10%，企业拒收供应商的零配件，否则接受原假设；对于情形2，若检测出不超过k个次品，说明次品率显著低于10%，企业接收供应商的零配件，否则接受原假设。</p><h2 id="基于次品率标称值的样本容量估计">基于次品率标称值的样本容量估计</h2><p>制定抽样检测方案首先应该确定样本容量，如果样本容量过大，抽样误差较小但检测的工作量增大，耗费的时间和成本过多，不符合企业高效采购的要求；若样本容量过小，耗费少但抽样误差太大，抽样检测的结果不具有代表性。因此，抽样设计的重点是确定必要的样本容量，即估计值与真实值较为接近且满足预定的置信度。</p><p>要满足给定的置信度，首先需要计算标准化统计量，即使用Z统计量进行正态近似，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>0</mn></msub><mo>=</mo><mn>0.1</mn></mrow><annotation encoding="application/x-tex">P_0=0.1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.1</span></span></span></span>是供应商提供的次品率标称值</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Z</mi><mo>=</mo><mfrac><mrow><mover accent="true"><mi>p</mi><mo>^</mo></mover><mo>−</mo><msub><mi>P</mi><mn>0</mn></msub></mrow><msqrt><mfrac><mrow><msub><mi>P</mi><mn>0</mn></msub><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>P</mi><mn>0</mn></msub><mo fence="true">)</mo></mrow></mrow><mi>n</mi></mfrac></msqrt></mfrac></mrow><annotation encoding="application/x-tex">Z=\frac{\hat{p}-P_0}{\sqrt{\frac{P_0\left(1-P_0\right)}{n}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1014em;vertical-align:-1.73em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.3175em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3175em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.2775em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.88em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.88em" viewBox="0 0 400000 1944" preserveAspectRatio="xMinYMin slice"><path d="M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5225em;"><span></span></span></span></span></span></span></span><span style="top:-3.5475em;"><span class="pstrut" style="height:3.3175em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.9945em;"><span class="pstrut" style="height:3.3175em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">p</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.73em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其次需要确定拒绝域，以95%置信度为例进行考虑，认定次品率是否超过标称值从而决定是否拒收，由于只关心次品率是否比标称值大而非是否与标称值不同，故选择进行单侧检验。在单侧检验中，情形1的拒绝域为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo>&gt;</mo><msub><mi>Z</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">Z&gt;Z_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Z</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">Z_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是标准正态分布在\alpha水平下的临界值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Z</mi><mn>0.05</mn></msub><mo>=</mo><mn>1.645</mn></mrow><annotation encoding="application/x-tex">Z_{0.05}=1.645</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0.05</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.645</span></span></span></span>；对于情形2，单侧检验的方向相反，拒绝域为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo>&lt;</mo><msub><mi>Z</mi><mrow><mn>1</mn><mo>−</mo><mi>α</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Z&lt;Z_{1-\alpha}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>，此时使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">1-\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>查找临界值，因此<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Z</mi><mn>0.1</mn></msub><mo>≈</mo><mn>1.282</mn></mrow><annotation encoding="application/x-tex">Z_{0.1}\approx1.282</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0.1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.282</span></span></span></span>。</p><p>根据本文假设，零配件中的次品数服从二项分布B(n,P)，其中n是抽样检测的样本数量，P是零配件总体中的次品率，即供应商保证的10%。设置信水平为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">1-\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>时，与总体次品率相联系的极限误差为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">E_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，则有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>E</mi><mi>p</mi></msub><mo>=</mo><msub><mi>Z</mi><mi>α</mi></msub><mo>⋅</mo><msqrt><mfrac><mrow><mi>P</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><mi>P</mi><mo fence="true">)</mo></mrow></mrow><mi>n</mi></mfrac></msqrt></mrow><annotation encoding="application/x-tex">E_p=Z_\alpha\cdot\sqrt{\frac{P\left(1-P\right)}{n}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.7356em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7044em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.6644em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="2.48em" viewBox="0 0 400000 2592" preserveAspectRatio="xMinYMin slice"><path d="M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7356em;"><span></span></span></span></span></span></span></span></span></span></p><p>其中Z_\alpha是标准正态分布下的临界值，取决于设定的置信水平（95%置信度对应的Z=1.645，90%置信度对应的Z=1.28），在处理大样本且总体分布未知的情况下，本文将二项分布近似为正态分布，可以在减少样本量的同时保证所需的置信水平。设E为允许的极限误差E_p的期望值，化简可得总体次品率区间估计的样本容量为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>n</mi><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>Z</mi><mi>α</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mi>P</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><msup><mi>E</mi><mn>2</mn></msup></mfrac></mrow><annotation encoding="application/x-tex">n=\frac{(Z_\alpha)^2P(1-P)}{E^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1771em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中E直接影响样本量的大小，在其他条件不变的情况下，极限误差增大则必要的样本容量减少，可以节约成本但准确度偏低；反之若缩小极限误差，就要扩大必要的样本容量。结合相关文献[3]，电子产品的E值通常在2%~5%之间取值，且大多数情况下其值不超过10%，同时为满足该企业尽可能少地进行样本抽测，本文选取E=5%；P(1-P)反映了次品率的变化对样本量的影响，可以确保在过高或过低的次品率情况下，将对样本量相应调整，避免过多的样本检测。</p><p>利用Python仿真求解得到的不同置信水平下所需的最小样本容量和最大允许次品数如表2所示。</p><p><strong>表 2 5% 的极限误差下各情形样本与次品量</strong></p><table><thead><tr><th style="text-align:center">置信度</th><th style="text-align:center">情形</th><th style="text-align:center">样本量/个</th><th style="text-align:center">最大次品量/个</th></tr></thead><tbody><tr><td style="text-align:center">95%</td><td style="text-align:center">( p &gt; 10% ) 则拒收</td><td style="text-align:center">98</td><td style="text-align:center">15</td></tr><tr><td style="text-align:center">90%</td><td style="text-align:center">(  P \leq 0.10 % ) 则接受</td><td style="text-align:center">59</td><td style="text-align:center">9</td></tr></tbody></table><p>结果表明，如果企业希望以95%的把握认定零配件的次品率是否超过供应商声明的10%，那么至少需要检测98个样本，当有15个次品产生时则可以立即停止检测，认为标称值超过10%，拒收产品。这个样本量既考虑了检测的准确性，也兼顾了检测成本。</p><p>图1展示了不同误差范围下的样本容量和最大次品数变化情况，具体数值详见附录B(2)。从中可以看出，通过增加样本量，能够使企业更准确地估计总体次品率，减少因样本误差导致的误判风险。然而，较大的样本量也意味着更高的检测成本，因此在实际操作中需要权衡利弊。在90%的置信水平下，我们计算得到的样本容量为59个，当有9个次品产生时，立即停止检测且认为标称值超过10%，拒收产品。与95%置信水平相比，降低置信水平显著减少了所需的样本量。这表明，如果企业愿意接受稍低的置信度，可以通过减少检测样本数量来降低成本。</p><p><img src="https://pic.imgdb.cn/item/66e2f95dd9c307b7e945fc97.png" alt="图1 多种E取值下的样本容量与最大次品数"></p><p>综上所述，本文设计的抽样检测方案通过平衡置信水平、误差范围和总体次品率，为企业提供了在不同情境下选择最小样本容量的科学方法。企业可以根据实际情况和需求，灵活调整置信水平和样本量，以达到最佳的检测效果和成本控制。</p><h1>问题二模型的建立与求解</h1><p>为企业运营的各阶段做出决策属于多阶段决策过程，企业的最终目标是实现收益最大化，因此本文以企业净收益（包含企业信誉）为目标函数，根据每个阶段的决策能否为企业带来利益决定生产过程中的决策方案。</p><p>站在企业的角度考虑，净利润最大时的方案即为最优方案，每个生产阶段的决策会影响后续阶段的状态，即全局最优决策包括了每个阶段的最优决策[4]，因此本文采用成本效益分析模型和整数规划的思想进行模拟求解，当企业总利润不再增加时停止各阶段的循环，此时收益最大。由于该企业为热门电子企业，故零件数目必然巨大，考虑实际工作场景，拆解后的零件会回流至总零件库，次品率是零件的固有属性。不同于零件次品率表示次品零件占所有零件的比率，成品次品率是指对于合格的零件1、2装配完成后依旧出现不合格成品的概率。</p><h2 id="各阶段成本的计算">各阶段成本的计算</h2><p>企业的生产过程可以分为三个阶段：零件检测、成品装配检测和商品售卖与回收。本文分别将购买零件成本、零件检测成本、装配成本、成品检测成本、拆解成本、调换成本和丢弃成本进行量化，计算该产品从零件购买到售后花费的成本。</p><p>假设零配件1和2的购买数量均为N，购买单价分别为a_1和a_2，则两款零件的采购成本为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub><mo>=</mo><mi>N</mi><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><mi>N</mi><msub><mi>a</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">M_1=Na_1+Na_2 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>设零配件1和2的单个检测成本分别为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">b_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">b_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则其总共的检测成本为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>M</mi><mn>2</mn></msub><mo>=</mo><mi>N</mi><msub><mi>b</mi><mn>1</mn></msub><msub><mi>E</mi><mn>1</mn></msub><mo>+</mo><mi>N</mi><msub><mi>b</mi><mn>2</mn></msub><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">M_2=Nb_1E_1+Nb_2E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>均为二元变量，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub><mo>∈</mo><mrow><mo fence="true">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">E_1,E_2\in\left\{0,1\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span>，表示零配件1和2是否需要检测，其取值为0代表不检测、为1代表需要检测。未经检测的不合格零配件进入装配环节将直接导致成品不合格，设两款零配件的次品率分别为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup></mrow><annotation encoding="application/x-tex">P_0^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mn>0</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">P_0^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span>，则以零配件1为例，其是否合格的数量可表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>N</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>,合格</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>N</mi><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>,不合格</mtext></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}N(1-P_0^1)&amp;\text{,合格}\\NP_0^1&amp;\text{,不合格}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">,</span><span class="mord cjk_fallback">合格</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">,</span><span class="mord cjk_fallback">不合格</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>成品装配检测阶段受第一阶段进入第二阶段的零配件数量的影响，故需分别考虑前序零件的检测情况，可根据两种零件是否检测分为4类，本文将以零配件1需要检测、零配件2无需检测的方案作为只检测一款零件时的代表，讨论以下三种情况的决策过程：</p><p><strong>情况1：零配件1检测、零配件2不检测</strong></p><p>由于成品的装配依赖两款零配件1:1的结合，不合格的配件1被丢弃，此时能与配件2相配的只有配件1的检测合格部分，其数量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">N\left(1-P_0^1\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span>。设经过零配件检测阶段后装配的合格成品数量的最大可能取值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">N^\prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span>，此时有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>N</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>N</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">N^\prime=N\left(1-P_0^1\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2141em;vertical-align:-0.35em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></p><p>此情况下<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">N^\prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span>中的次品来源如图2所示</p><p><img src="https://pic.imgdb.cn/item/66e2fe44d9c307b7e94cc727.png" alt="图2 成品中的次品来源示意图"></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mn>1</mn><mo mathvariant="normal">′</mo></msubsup></mrow><annotation encoding="application/x-tex">P_1^\prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span>表示由两款合格配件组装的成品<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">N^\prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span>的次品率。设此时由两款合格零件装配的成品数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>N</mi><mn>1</mn></msub><mo>=</mo><mi>k</mi><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mrow><msubsup><mi>C</mi><mrow><mi>N</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>2</mn></msubsup><mo stretchy="false">)</mo></mrow><mi>k</mi></msubsup><msubsup><mi>C</mi><mrow><mi>N</mi><msubsup><mi>P</mi><mn>0</mn><mn>2</mn></msubsup></mrow><mrow><mi>N</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo fence="true">)</mo></mrow><mo>−</mo><mi>k</mi></mrow></msubsup></mrow><msubsup><mi>C</mi><mi>N</mi><mrow><mi>N</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo fence="true">)</mo></mrow></mrow></msubsup></mfrac><mo separator="true">,</mo><mtext>     </mtext><mi>k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mi>N</mi><msubsup><mi>P</mi><mn>0</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">P\left(N_1=k\right)=\frac{C_{N(1-P_0^2)}^kC_{NP_0^2}^{N\left(1-P_0^1\right)-k}}{C_N^{N\left(1-P_0^1\right)}},\ \ \ \ \ k=0,1,2···NP_0^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.86em;vertical-align:-1.5283em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3316em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.3448em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3448em;"><span style="top:-2.7065em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.6473em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">(</span></span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1885em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3115em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">)</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.5748em;"><span class="pstrut" style="height:3.3448em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.3316em;"><span class="pstrut" style="height:3.3448em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.3394em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1885em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3115em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5786em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3448em;"><span style="top:-2.6212em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1885em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3115em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.6473em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">(</span></span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">)</span></span></span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5968em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">⋅⋅⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>因此在此种情况下，由两款合格零件组装的成品数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和含非合格零件组成的成品数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">N_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中次品数的期望值可表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>E</mi><msub><mi>N</mi><mn>1</mn></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><msup><mi>N</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>−</mo><msup><mi>N</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msubsup><mi>P</mi><mn>0</mn><mn>2</mn></msubsup></mrow><msup><mi>N</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup><mi>k</mi><mi>P</mi><mo stretchy="false">(</mo><msub><mi>N</mi><mn>1</mn></msub><mo>=</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>E</mi><msub><mi>N</mi><mn>2</mn></msub><mo>=</mo><msup><mi>N</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>−</mo><mi>E</mi><msub><mi>N</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}EN_1=\sum_{k=N^{\prime}-N^{\prime}P_0^2}^{N^{\prime}}kP(N_1=k)\\EN_2=N^{\prime}-EN_1\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0402em;vertical-align:-1.2701em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7701em;"><span style="top:-3.7701em;"><span class="pstrut" style="height:3.0824em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0824em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1885em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3115em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5178em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span><span style="top:-2.2443em;"><span class="pstrut" style="height:3.0824em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2701em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>零件1不检测，零件2检测的情况与情况1类似，故此处不再赘述。</p><p><strong>情况<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="bold">2</mn></mrow><annotation encoding="application/x-tex">\mathbf{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathbf">2</span></span></span></span>：零配件<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="bold">1</mn></mrow><annotation encoding="application/x-tex">\mathbf{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathbf">1</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="bold">2</mn></mrow><annotation encoding="application/x-tex">\mathbf{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathbf">2</span></span></span></span>均检测</strong></p><p>此时两款零配件只有检测合格的产品才能进入装配环节，因此有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>N</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo fence="true">{</mo><mtext> </mtext><mi>N</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mtext> </mtext><mi>N</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>2</mn></msubsup><mo fence="true">)</mo></mrow><mtext> </mtext><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">N^\prime=min\left\{\ N\left(1-P_0^1\right),\ N\left(1-P_0^2\right)\ \right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2141em;vertical-align:-0.35em;"></span><span class="mord mathnormal">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace"> </span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">}</span></span></span></span></span></span></span></p><p>成品均由合格零配件装配而成，因此其次品率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mn>1</mn><mo mathvariant="normal">′</mo></msubsup></mrow><annotation encoding="application/x-tex">P_1^\prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span>为企业已知的次品率。</p><p><strong>情况<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="bold">3</mn></mrow><annotation encoding="application/x-tex">\mathbf{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathbf">3</span></span></span></span>：零配件<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="bold">1</mn></mrow><annotation encoding="application/x-tex">\mathbf{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathbf">1</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="bold">2</mn></mrow><annotation encoding="application/x-tex">\mathbf{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathbf">2</span></span></span></span>均不检测</strong></p><p>两款零配件全部进入装配阶段，此时</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>N</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">N^\prime=N </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">N^\prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span>中的次品来源与表3所示相同。不妨设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo stretchy="false">)</mo><mo>&lt;</mo><mi>N</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>2</mn></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(1-P_0^1)&lt;N(1-P_0^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的最大可能取值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(1-P_0^1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，最小值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo stretchy="false">)</mo><mo>−</mo><mi>N</mi><msubsup><mi>P</mi><mn>0</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">N(1-P_0^1)-NP_0^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span>。则有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>N</mi><mn>1</mn></msub><mo>=</mo><mi>k</mi><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mrow><msubsup><mi>C</mi><mrow><mi>N</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>2</mn></msubsup><mo fence="true">)</mo></mrow></mrow><mi>k</mi></msubsup><msubsup><mi>C</mi><mrow><mi>N</mi><msubsup><mi>P</mi><mn>0</mn><mn>2</mn></msubsup></mrow><mrow><mi>N</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo fence="true">)</mo></mrow><mo>−</mo><mi>k</mi></mrow></msubsup></mrow><msubsup><mi>C</mi><mi>N</mi><mrow><mi>N</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo fence="true">)</mo></mrow></mrow></msubsup></mfrac></mrow><annotation encoding="application/x-tex">P\left(N_1=k\right)=\frac{C_{N\left(1-P_0^2\right)}^kC_{NP_0^2}^{N\left(1-P_0^1\right)-k}}{C_N^{N\left(1-P_0^1\right)}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.0601em;vertical-align:-1.5283em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5318em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.3448em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3448em;"><span style="top:-2.7065em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.6473em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">(</span></span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1885em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3115em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">)</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.5748em;"><span class="pstrut" style="height:3.3448em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.5318em;"><span class="pstrut" style="height:3.3448em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.5055em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">(</span></span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1885em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3115em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">)</span></span></span></span></span></span><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.797em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3448em;"><span style="top:-2.6212em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1885em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3115em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.6473em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">(</span></span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">)</span></span></span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5968em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">N_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的期望可表示</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>E</mi><msub><mi>N</mi><mn>1</mn></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mi>N</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo stretchy="false">)</mo><mo>−</mo><mi>N</mi><msubsup><mi>P</mi><mn>0</mn><mn>2</mn></msubsup></mrow><mrow><mi>N</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mn>1</mn></msubsup><mo stretchy="false">)</mo></mrow></msubsup><mi>k</mi><mi>P</mi><mo stretchy="false">(</mo><msub><mi>N</mi><mn>1</mn></msub><mo>=</mo><mi>k</mi><mtext>）</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>E</mi><msub><mi>N</mi><mn>2</mn></msub><mo>=</mo><msup><mi>N</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>−</mo><mi>E</mi><msub><mi>N</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}EN_1=\sum_{k=N(1-P_0^1)-NP_0^2}^{N(1-P_0^1)}kP(N_1=k）\\ EN_2=N^{\prime}-EN_1\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.2058em;vertical-align:-1.3529em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8529em;"><span style="top:-3.8529em;"><span class="pstrut" style="height:3.1689em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1689em;"><span style="top:-2.3212em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1885em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3115em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1885em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3115em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.245em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5968em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord cjk_fallback">）</span></span></span><span style="top:-2.248em;"><span class="pstrut" style="height:3.1689em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3529em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="基于成本与售价的利润函数构建">基于成本与售价的利润函数构建</h2><p>将生产过程中所有涉及的成本为约束条件，其与总销售额M构成的方程组如下</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>M</mi><mn>1</mn></msub><mo>=</mo><mi>N</mi><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><mi>N</mi><msub><mi>a</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>M</mi><mn>2</mn></msub><mo>=</mo><mi>N</mi><msub><mi>b</mi><mn>1</mn></msub><msub><mi>E</mi><mn>1</mn></msub><mo>+</mo><mi>N</mi><msub><mi>b</mi><mn>2</mn></msub><msub><mi>E</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>M</mi><mn>3</mn></msub><mo>=</mo><msup><mi>N</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>C</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>M</mi><mn>4</mn></msub><mo>=</mo><msup><mi>N</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>d</mi><msub><mi>E</mi><mn>3</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>M</mi><mn>5</mn></msub><mo>=</mo><msup><mi>N</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mi>e</mi><msub><mi>E</mi><mn>4</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>M</mi><mn>6</mn></msub><mo>=</mo><msup><mi>N</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mi>f</mi><mo>+</mo><msup><mi>N</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mi>E</mi><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>M</mi><mn>7</mn></msub><mo>=</mo><msup><mi>N</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo>⋅</mo><mi>E</mi><mi>X</mi><mo>⋅</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mn>4</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>M</mi><mo>=</mo><mo stretchy="false">[</mo><msup><mi>N</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>−</mo><msup><mi>N</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mi>g</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases} &amp; M_1=Na_1+Na_2\\  &amp; M_2=Nb_1E_1+Nb_2E_2\\  &amp; M_3=N^{\prime}C\\  &amp; M_4=N^{\prime}dE_3\\  &amp; M_5=N^{\prime\prime}eE_4\\  &amp; M_6=N^{\prime\prime}(1-E_3)f+N^{\prime\prime}(1-E_3)EX\\  &amp; M_7=N^{\prime\prime}\cdot EX\cdot(1-E_4)\\  &amp; M=[N^{\prime}-N^{\prime\prime}(1-E_3)]g\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:11.52em;vertical-align:-5.51em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.95em;"><span style="top:-1.366em;"><span class="pstrut" style="height:5.916em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:5.916em;"></span><span style="height:3.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="3.916em" style="width:0.8889em" viewBox="0 0 888.89 3916" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V3916 H384z M384 0 H504 V3916 H384z"/></svg></span></span><span style="top:-5.916em;"><span class="pstrut" style="height:5.916em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-7.058em;"><span class="pstrut" style="height:5.916em;"></span><span style="height:3.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="3.916em" style="width:0.8889em" viewBox="0 0 888.89 3916" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V3916 H384z M384 0 H504 V3916 H384z"/></svg></span></span><span style="top:-10.966em;"><span class="pstrut" style="height:5.916em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.01em;"><span style="top:-8.01em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-6.57em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-5.13em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-0.81em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:0.63em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:2.07em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.51em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.01em;"><span style="top:-8.01em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-6.57em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-5.13em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.81em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.07847em;">EX</span></span></span><span style="top:0.63em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">EX</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:2.07em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.51em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">M_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">M_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示成品的装配成本和检测成本， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">M_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">M_6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别表示不合格成品的拆解成本和调换成本，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>7</mn></msub></mrow><annotation encoding="application/x-tex">M_7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示不合格成品直接丢弃造成的损失，c、d、e、f分别为单件装配成本、成品检测成本、拆解成本和调换成本，g为成品的单件市场售价。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>4</mn></msub><mo>∈</mo><mrow><mo fence="true">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">E_3,E_4\in\left\{0,1\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span>，分别表示成品是否需要检测以及不合格成品是否进行拆解，其取值为0代表不检测或直接丢弃、为1代表需要检测或进行拆解。条件(6)中的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">(</mo><msub><mrow><mn>1</mn><mo>−</mo><mi>E</mi></mrow><mn>3</mn></msub><mo stretchy="false">)</mo><mi>E</mi><mi>X</mi></mrow><annotation encoding="application/x-tex">N^{\prime\prime}({1-E}_3)EX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.07847em;">EX</span></span></span></span>表示由于不合格品流入市场，企业需要额外生产一件产品补给顾客的期望成本。</p><p>针对任意情形下的生产过程，可以设置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi><mi>l</mi></mrow></msub><mrow><mo fence="true">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>k</mi><mo separator="true">,</mo><mi>l</mi><mo>∈</mo><mrow><mo fence="true">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo fence="true">}</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">A_{ijkl}\left(i,j,k,l\in\left\{0,1\right\}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ijk</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>共16种决策方案，其具体含义如表4所示。</p><p><strong>表 4 决策方案的下标含义</strong></p><table><thead><tr><th style="text-align:center">下标</th><th style="text-align:left">取值内容</th></tr></thead><tbody><tr><td style="text-align:center">( i )</td><td style="text-align:left">取 1 代表零件 1 检测，取 0 代表零件 1 不检测</td></tr><tr><td style="text-align:center">( j )</td><td style="text-align:left">取 1 代表零件 2 检测，取 0 代表零件 2 不检测</td></tr><tr><td style="text-align:center">( k )</td><td style="text-align:left">取 1 代表成品检测，取 0 代表成品不检测</td></tr><tr><td style="text-align:center">( l )</td><td style="text-align:left">取 1 代表不合格成品拆解，取 0 代表直接丢弃</td></tr></tbody></table><p>公式(17)中的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><annotation encoding="application/x-tex">N^{\prime\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span></span></span></span>表示第二阶段成品总数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">N^\prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span>中的次品数量，包含次品零件装配的成品和均由合格零件装配的成品中变为的次品两部分，且有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>N</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo>=</mo><mi>P</mi><mi>E</mi><msub><mi>N</mi><mn>1</mn></msub><mo>+</mo><mi>E</mi><msub><mi>N</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">N^{\prime\prime}=PEN_1+EN_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">PE</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>生产一件合格成品所需的费用最小值和最大值可表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>C</mi><mi>o</mi><mi>s</mi><msub><mi>t</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><mo>+</mo><mi>c</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>C</mi><mi>o</mi><mi>s</mi><msub><mi>t</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mo>+</mo><mi>c</mi><mo>+</mo><mi>d</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}Cost_{min}=a_1+a_2+c\\Cost_{max}=a_1+a_2+b_1+b_2+c+d\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">os</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">c</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">os</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ma</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>为简化问题，本文将公式(17)中的条件(4)和(5)中的EX取生产费用的均值，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>X</mi><mo>=</mo><mfrac><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><mo>+</mo><mi>c</mi><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mo>+</mo><mi>c</mi><mo>+</mo><mi>d</mi></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">EX=\frac{a_1+a_2+c+a_1+a_2+b_1+b_2+c+d}{2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">EX</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>目标函数，即企业净利润可表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mi>r</mi><mi>o</mi><mi>f</mi><mi>i</mi><mi>t</mi><mo>=</mo><mi>M</mi><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>7</mn></munderover><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Profit=M-\sum_{i=1}^7M_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">ro</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.0788em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><h2 id="模型的求解与分析">模型的求解与分析</h2><p>由于零件1和2为1:1结合，故企业在购买原料时的比例以1：1为宜，本文假设各取零件1000个，零件到成品被售卖的过程只和概率有关，零件总量的取值不会影响最优方案的制定。本文对于生产过程中的每一阶段建立E_1~E_4的决策函数，建立包含决策函数的成本——收益函数方程组，以净利润最大为目标函数，按照图3所示的流程进行迭代，比较各决策过程的结果，确定每个情况的具体方案。</p><p><img src="https://pic.imgdb.cn/item/66e300c5d9c307b7e9505d59.png" alt="图3 具体决策流程图"></p><p>如上图所示，对于每一种情况，依序计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub><mtext> </mtext><msub><mi>M</mi><mn>7</mn></msub></mrow><annotation encoding="application/x-tex">M_1~M_7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，依照题目要求遍历不同的决策向量，将被检测出的不合格品和被退回的不合格品放回拆解步骤，将拆解后的零件放回零件检测环节，当累计利润开始下降或零件全被卖完停止迭代，取净利润最大的决策作为方案。由此得出的六种情况下的具体决策方案如表5所示。</p><p><strong>表 5 问题 2 的具体决策方案</strong></p><table><thead><tr><th style="text-align:center">情况</th><th style="text-align:center">选代次数</th><th style="text-align:center">最大利润/元</th><th style="text-align:center">零件 1</th><th style="text-align:center">零件 2</th><th style="text-align:center">成品</th><th style="text-align:center">不合格成品</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">10</td><td style="text-align:center">39521</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">拆解</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">16</td><td style="text-align:center">45339</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">检测</td><td style="text-align:center">拆解</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">3</td><td style="text-align:center">18535</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">检测</td><td style="text-align:center">拆解</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">3</td><td style="text-align:center">11123</td><td style="text-align:center">检测</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">拆解</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">17</td><td style="text-align:center">37538</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">检测</td><td style="text-align:center">拆解</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">1</td><td style="text-align:center">19564</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">不拆解</td></tr></tbody></table><p>结合需要计算的情况分析结果，细致观察每种情况的最优决策组合的迭代轮次（详见支撑材料）易知：</p><p>（1）除了情况3、4外其余情形最优决策均选择不对成品进行检测，而是让成品直接流入市场，增加交易额和流通率</p><p>在循环加工的流水线生产模式下，对于成品中不合格品调换除了明显会对对企业造成损失，都不进行检验。这是因为加大产品的流通率可以显著增加成品流向市场的数量，一定基数下的零件经历相同工序后，回流比直接丢弃有更多的复用价值。这也符合当今各大厂商回收，以旧换新，只换不退，以换代修的经营模式，证明模型具有很高的现实可靠性。</p><p>（2）除了情况6，其他情形均选择对于不合格成品不拆解<br>对于企业而言，在情况6中拆解不合格产品带来的损失远超过直接丢弃带来的损失。而其余情况，企业让这些零配件回流可以增加市场流通率，这么做是符合经济学原理的。</p><p>（3）每一环节所需的成本互相影响，若其中某些项过大则不可接受其开销，转而采用其他环节以避免进入开销极大的阶段。</p><p>对于情况1和2，后者的两款零配件和成品的次品率为前者的两倍，较高的次品率会导致调换更加频繁，但在频繁调换下情况2的总利润仍旧远高于情况1，这是由于在该流水线成本设置下的流通效益更加明显，情况2可将1000个零件流通16轮，情况1则只能流通10轮，是因为大部分成品直接卖掉不会退回，此现象证明拆解的必要性以及原件回流的巨大效益。此种情况对应于市场的经典现象——“劣币驱逐良币”，这也是为何部分商家即使遭遇频繁退货和口碑损耗，却依旧赚得盆满钵满的原因。</p><p>对于情况5，零件检测成本呈现不相称情况，零件1的检测性价比较低，为加速回流，经计算零件2不进行检测会促使更多的零件回收利用，以制造出较多的合格成品。对比情形1，接近两倍的调换损失和更高的调换数量可能会导致利润的较大下降，但从利润来看每个产品仅少赚2元，这和流水线的零件回流效益有关。<br>可以进一步对每种情况的迭代过程绘制雷达图进行分析，以情况4第一轮迭代结果为例：</p><p><img src="https://pic.imgdb.cn/item/66e2f95ed9c307b7e945fce3.png" alt="图4  情况4成本与利润雷达图 "></p><p>上图中的e组合代表每组决策向量的尝试结果。从中可以发现，本文选定的最优策略的e组合（1，1，0，1）在一开始的总利润并未有明显优势，因为较少次数的迭代内会受到调换损失较大的制约，但其极低的零件检测成本以及尽可能让成品流向市场的理念避免了调换损失不可控的局面，同时结合情况2的分析结果，此情况具有“劣币”的特性，可以较好地进行产品回流，因此只要将调换费用通过前期的零件检测将退换率控制得当，以促进其在市场流通，可获得相对较多的利润。</p><p>综上所述，对于复杂的市场情况和企业生产流水线的性质，本文的模型具有良好的决策定制效果。</p><h1>问题三模型的建立与求解</h1><h2 id="整数规划模型">整数规划模型</h2><p>问题三在问题二思想的基础上进行模型优化，由于涉及m道工序和n个零件，采用第六节中枚举规划的方法时间复杂度过高，难以计算和应用，此问题属于多阶段的复杂决策问题[5]，所做的决策可以用0-1整数变量表示，因此适合使用整数规划进行求解。本节基于问题二分析的目标函数——求净利润的最大值建立整数规划模型，通过求解离散变量和复杂的约束条件进而得到全局最优解，可以在保证结果准确的情况下快速得到最优策略。相关的决策变量如表6所示。</p><p><strong>表 6 决策变量的设置说明</strong></p><table><thead><tr><th style="text-align:center">决策变量</th><th style="text-align:center">解释</th><th style="text-align:center">取 0 时的含义</th></tr></thead><tbody><tr><td style="text-align:center">( a_i \in {0,1}, i \in {1,2,…,n} )</td><td style="text-align:center">零配件 ( i ) 是否进行检测</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">( b_j \in {0,1}, j \in {1,2,3} )</td><td style="text-align:center">半成品 ( j ) 是否进行检测</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">( c_j \in {0,1}, j \in {1,2,3} )</td><td style="text-align:center">半成品 ( j ) 是否拆解</td><td style="text-align:center">否</td></tr><tr><td style="text-align:center">( d_f )</td><td style="text-align:center">成品是否检测</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">( e_f )</td><td style="text-align:center">不合格成品是否拆解</td><td style="text-align:center"></td></tr></tbody></table><p>由于零部件、半成品与成品在检测前是否为次品可视为未观测的随机变量，具有随机性，为了消除随机性对决策带来的影响，下面对企业生产一个成品所经历的各个环节的期望成本与期望收益进行分析。</p><p><strong>购买费用、检测费用与装配费用分</strong>析：无论零配件检测与否，企业都需要指出零配件的购买费用，用Pur表示，有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mi>u</mi><mi>r</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mtext> </mtext><msubsup><mi>C</mi><mrow><mi>b</mi><mi>u</mi><mi>y</mi></mrow><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">Pur=\sum_{i=1}^{n}\ C_{buy}^i </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>若企业选择对零部件进行检测，则须支付检测费用，用Dec表示，则</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mtext> </mtext><msub><mi>a</mi><mi>i</mi></msub><msubsup><mi>C</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mi>e</mi><mi>c</mi><msub><mi>t</mi><mi>p</mi></msub></mrow><mi>i</mi></msubsup><mo>+</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msup><mi>n</mi><mo mathvariant="normal">′</mo></msup></munderover><mtext> </mtext><msub><mi>b</mi><mi>j</mi></msub><msubsup><mi>C</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mi>e</mi><mi>c</mi><msub><mi>t</mi><mi>h</mi></msub></mrow><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">Dec=\sum_{i=1}^{n}\ a_iC_{detect_p}^i+\sum_{j=1}^{n^\prime}\ b_jC_{detect_h}^j </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">Dec</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">ec</span><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4443em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.3433em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9295em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.3987em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">ec</span><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4072em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mi>e</mi><mi>c</mi><msub><mi>t</mi><mi>p</mi></msub></mrow><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">C_{detect_p}^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3051em;vertical-align:-0.4804em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-2.4169em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">ec</span><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4804em;"><span></span></span></span></span></span></span></span></span></span>为零配件i的检测费用，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mi>e</mi><mi>c</mi><msub><mi>t</mi><mi>h</mi></msub></mrow><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">C_{detect_h}^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3497em;vertical-align:-0.4072em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.3987em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">ec</span><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4072em;"><span></span></span></span></span></span></span></span></span></span>为半成品j的检测费用, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">n^\prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span>为半成品的数量。无论企业如何决策，装配费用始终需要支出，生产一个成品的装配费用记为Ass，则有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>s</mi><mi>s</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msup><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></munderover><msub><mi>b</mi><mi>j</mi></msub><msubsup><mi>C</mi><mrow><mi>a</mi><mi>s</mi><mi>s</mi><mi>e</mi><mi>m</mi><mi>b</mi><mi>l</mi><msub><mi>e</mi><mi>h</mi></msub></mrow><mi>j</mi></msubsup><mo>+</mo><msub><mi>C</mi><mrow><mi>a</mi><mi>s</mi><mi>s</mi><mi>e</mi><mi>m</mi><mi>b</mi><mi>l</mi><msub><mi>e</mi><mi>f</mi></msub></mrow></msub></mrow><annotation encoding="application/x-tex">Ass=\sum_{j=1}^{n&#x27;}b_jC_{assemble_h}^j+C_{assemble_f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">ss</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.3433em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9295em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.3987em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">sse</span><span class="mord mathnormal mtight">mb</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4072em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0364em;vertical-align:-0.3531em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">sse</span><span class="mord mathnormal mtight">mb</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2901em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3531em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mrow><mi mathvariant="normal">a</mi><mi mathvariant="normal">s</mi><mi mathvariant="normal">s</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">b</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">e</mi></mrow><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">C_{\mathrm{assemble}}^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2439em;vertical-align:-0.3013em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.3987em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">assemble</span></span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span></span></span></span>为半成品j的装配费用，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>a</mi><mi>s</mi><mi>s</mi><mi>e</mi><mi>m</mi><mi>b</mi><mi>l</mi><msub><mi>e</mi><mi>f</mi></msub></mrow></msub></mrow><annotation encoding="application/x-tex">C_{assemble_f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0364em;vertical-align:-0.3531em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">sse</span><span class="mord mathnormal mtight">mb</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2901em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3531em;"><span></span></span></span></span></span></span></span></span></span>为成品装配费用。</p><p><strong>拆解费用期望计算</strong>：半成品或成品装配完成后，企业若对半成品或成品进行检测，且检测出不合格半成品或成品，则需选择是否拆解，并产生可能的拆解费用。拆解费用期望可表示为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mi>i</mi><mi>s</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msup><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></munderover><msub><mi>q</mi><mi>j</mi></msub><msub><mi>b</mi><mi>j</mi></msub><msub><mi>c</mi><mi>j</mi></msub><msubsup><mi>C</mi><mrow><mi>r</mi><mi>e</mi><mi>c</mi><mi>y</mi><mi>c</mi><mi>l</mi><msub><mi>e</mi><mi>h</mi></msub></mrow><mi>j</mi></msubsup><mo>+</mo><msub><mi>e</mi><mi>f</mi></msub><msub><mi>d</mi><mi>f</mi></msub><msub><mi>r</mi><mi>f</mi></msub><msub><mi>C</mi><mrow><mi>r</mi><mi>e</mi><mi>c</mi><mi>y</mi><mi>c</mi><mi>l</mi><msub><mi>e</mi><mi>f</mi></msub></mrow></msub></mrow><annotation encoding="application/x-tex">Dis=\sum_{j=1}^{n&#x27;}q_jb_jc_jC_{recycle_h}^j+e_fd_fr_fC_{recycle_f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.3433em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9295em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.3987em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">recyc</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4374em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0475em;vertical-align:-0.3531em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">recyc</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2901em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3531em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">q_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>为半成品j的不合格率，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mrow><mi>r</mi><mi>e</mi><mi>c</mi><mi>y</mi><mi>c</mi><mi>l</mi><msub><mi>e</mi><mi>h</mi></msub></mrow><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">C_{recycle_h}^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.38em;vertical-align:-0.4374em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.3987em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">recyc</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4374em;"><span></span></span></span></span></span></span></span></span></span>为第i件半成品的拆解费用。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">r_f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>为成品次品率，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>r</mi><mi>e</mi><mi>c</mi><mi>y</mi><mi>c</mi><mi>l</mi><msub><mi>e</mi><mi>f</mi></msub></mrow></msub></mrow><annotation encoding="application/x-tex">C_{recycle_f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0364em;vertical-align:-0.3531em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">recyc</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2901em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3531em;"><span></span></span></span></span></span></span></span></span></span>为成品拆解费用。可以看出，拆解费用与次品率以及企业决策都有关。</p><p><strong>调换损失期望计算</strong>：若企业不合格产品未经检测流入市场，企业将无条件予以调换，并产生一定的调换损失。调换损失只有企业未作任何检测才可能产生，且只要零配件、半成品、成品生产过程中任何一个环节出现次品就会产生调换损失。考虑到零配件、半成品和成品的不合格率，调换损失期望可表示为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mi>e</mi><mi>p</mi><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo>−</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow><mo>⋅</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo>−</mo><munderover><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msup><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></munderover><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>b</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">(</mo><mn>1</mn><mo>−</mo><msub><mi>q</mi><mi>j</mi></msub><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">)</mo><mo fence="true">]</mo></mrow><mo>⋅</mo><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">(</mo><mn>1</mn><mo>−</mo><msub><mi>d</mi><mi>f</mi></msub><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">)</mo><msub><mi>C</mi><mtext>replace</mtext></msub></mrow><annotation encoding="application/x-tex">Rep=\left[1-\prod_{i=1}^n (1-a_i)(1-p_i)\right]\cdot\left[1-\prod_{j=1}^{n&#x27;} (1-b_i)\big(1-q_j\big)\right]\cdot\big(1-d_f\big)C_\text{replace}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0277em;vertical-align:-1.2777em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.6em;vertical-align:-1.55em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="3.600em" viewBox="0 0 667 3600"><path d="M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v0 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9295em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size1">)</span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="3.600em" viewBox="0 0 667 3600"><path d="M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v0 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size1">)</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">replace</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant="normal">r</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">c</mi><mi mathvariant="normal">e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{\mathrm{replace}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">replace</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>表示成品调换损失。</p><p><strong>出售成品收益分析</strong>：企业在出售合格成品后，会获得收益，记为M，可表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mo>=</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>⋅</mo><munderover><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msup><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></munderover><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>q</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>r</mi><mi>f</mi></msub><mo stretchy="false">)</mo><mo>⋅</mo><mi>p</mi><mi>r</mi><mi>i</mi><mi>c</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">M=\prod_{i=1}^n (1-p_i)\cdot\prod_{j=1}^{n^{\prime}} (1-q_j)\cdot(1-r_f)\cdot price</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.3433em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9295em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ce</span></span></span></span></span></p><p>其中price为产品售价。目标函数为企业生产一个产品的期望利润，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mi>r</mi><mi>o</mi><mi>f</mi><mi>i</mi><mi>t</mi><mo>=</mo><mi>M</mi><mo>−</mo><mi>R</mi><mi>e</mi><mi>p</mi><mo>−</mo><mi>D</mi><mi>i</mi><mi>s</mi><mo>−</mo><mi>A</mi><mi>s</mi><mi>s</mi><mo>−</mo><mi>D</mi><mi>e</mi><mi>c</mi><mo>−</mo><mi>P</mi><mi>u</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">Profit=M-Rep-Dis-Ass-Dec-Pur </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">ro</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">ss</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">Dec</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span></span></p><p>由于必须要检测不合格才能进行拆解，因此本文有约束</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>c</mi><mi>j</mi></msub><mo>≤</mo><msub><mi>b</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>j</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>e</mi><mi>f</mi></msub><mo>≤</mo><msub><mi>d</mi><mi>f</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}c_j\leq b_j,j\in\{1,2,...,n&#x27;\}\\e_f\leq d_f\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>综上，优化模型可表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mspace width="1em"/><mi>P</mi><mi>r</mi><mi>o</mi><mi>f</mi><mi>i</mi><mi>t</mi><mspace linebreak="newline"></mspace><mtext>s.t.</mtext><mspace width="1em"/><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>b</mi><mi>j</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>j</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>c</mi><mi>j</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>j</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>d</mi><mi>f</mi></msub><mo separator="true">,</mo><msub><mi>e</mi><mi>f</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>c</mi><mi>j</mi></msub><mo>≤</mo><msub><mi>b</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>j</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>e</mi><mi>f</mi></msub><mo>≤</mo><msub><mi>d</mi><mi>f</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">max\quad Profit\\\text{s.t.}\quad\begin{cases}a_i\in\{0,1\},i\in\{1,2,...,n\}\\b_j\in\{0,1\},j\in\{1,2,...,n&#x27;\}\\c_j\in\{0,1\},j\in\{1,2,...,n&#x27;\}\\d_f,e_f\in\{0,1\}\\c_j\leq b_j,j\in\{1,2,...,n&#x27;\}\\e_f\leq d_f\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">ro</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:8.64em;vertical-align:-4.07em;"></span><span class="mord text"><span class="mord">s.t.</span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.45em;"><span style="top:-1.366em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.416em" style="width:0.8889em" viewBox="0 0 888.89 2416" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V2416 H384z M384 0 H504 V2416 H384z"/></svg></span></span><span style="top:-4.416em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-5.558em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.416em" style="width:0.8889em" viewBox="0 0 888.89 2416" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V2416 H384z M384 0 H504 V2416 H384z"/></svg></span></span><span style="top:-7.966em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.57em;"><span style="top:-6.57em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">}</span></span></span><span style="top:-5.13em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span><span style="top:-0.81em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span><span style="top:0.63em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.07em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>通过求解该优化模型，可最大化企业单件产品的期望利润，并指导企业在生产过程中做出正确决策。</p><h2 id="模型求解与分析">模型求解与分析</h2><p>使用Matlab的YALMIP求解器进行求解，企业的最优决策计算结果如表7所示</p><p><strong>表7  问题3具体决策方案</strong></p><table><thead><tr><th><strong>零配件</strong></th><th><strong>是否检测</strong></th><th><strong>零配件</strong></th><th><strong>是否检测</strong></th><th><strong>半成品</strong></th><th><strong>是否检测</strong></th><th><strong>不合格品是否拆解</strong></th></tr></thead><tbody><tr><td>1</td><td>不检测</td><td>5</td><td>不检测</td><td>1</td><td>不检测</td><td>不拆解</td></tr><tr><td>2</td><td>检测</td><td>6</td><td>不检测</td><td>2</td><td>检测</td><td>不拆解</td></tr><tr><td>3</td><td>不检测</td><td>7</td><td>检测</td><td>3</td><td>不检测</td><td>拆解</td></tr><tr><td>4</td><td>不检测</td><td>8</td><td>不检测</td><td>成品</td><td>检测</td><td>拆解</td></tr></tbody></table><p>最终结果表明，企业每销售一件成品，期望利润为73.14元。值得注意的是，该利润是期望利润而非实际利润，实际生产中企业所得的利润会在该值上下浮动。分析结果可知，最优方案对于成品需要进行检测和拆解，这是因为当不合格产品流入市场后造成的调换损失超过成品和拆解的成本之和，符合常理。</p><h1>问题四模型的建立与求解</h1><h2 id="基于抽样检测的次品率计算">基于抽样检测的次品率计算</h2><p>如题所述，零配件、半成品和成品的次品率均是通过抽样检测方法得到，参考问题1的求解策略，将给出的次品率视为标称值，对其进行抽样，计算最少抽样个数和置信度下允许的最大次品数，二者比值记为模拟抽样的次品率，而后对于问题二、三带入计算。</p><p>假设根据5.2节的抽样检测方案得到的最小样本容量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">N_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，允许最大次品数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">n_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，由公式(1)可得此时样本中的次品率为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>p</mi><mo>^</mo></mover><mi>i</mi></msub><mo>=</mo><mfrac><msub><mi>n</mi><mi>i</mi></msub><msub><mi>N</mi><mi>i</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">{\hat{p}}_i=\frac{n_i}{N_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9386em;vertical-align:-0.2441em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">p</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2175em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.9436em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>设任意情形下给定的次品率标称值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，根据题目中表1可知其可能取值为5%、10%、20%，用其代入公式(4)可得此时的Z统计量正态近似公式</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Z</mi><mo>=</mo><mfrac><mrow><msub><mover accent="true"><mi>p</mi><mo>^</mo></mover><mi>i</mi></msub><mo>−</mo><msub><mi>P</mi><mi>i</mi></msub></mrow><msqrt><mfrac><mrow><msub><mi>P</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>P</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><msub><mi>N</mi><mi>i</mi></msub></mfrac></msqrt></mfrac></mrow><annotation encoding="application/x-tex">Z=\frac{\hat{p}_i-P_i}{\sqrt{\frac{P_i(1-P_i)}{N_i}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1014em;vertical-align:-1.73em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.2675em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2674em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.2274em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.88em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.88em" viewBox="0 0 400000 1944" preserveAspectRatio="xMinYMin slice"><path d="M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5726em;"><span></span></span></span></span></span></span></span><span style="top:-3.4975em;"><span class="pstrut" style="height:3.2675em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.9445em;"><span class="pstrut" style="height:3.2675em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">p</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.73em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>与次品率标称值相联系的极限误差可表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>E</mi><mi>p</mi></msub><mo>=</mo><msub><mi>Z</mi><mi>α</mi></msub><mo>⋅</mo><msqrt><mfrac><mrow><msub><mi>P</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>P</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><msub><mi>N</mi><mi>i</mi></msub></mfrac></msqrt></mrow><annotation encoding="application/x-tex">E_p=Z_\alpha\cdot\sqrt{\frac{P_i(1-P_i)}{N_i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.04em;vertical-align:-1.1106em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9294em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.8894em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="3.08em" viewBox="0 0 400000 3240" preserveAspectRatio="xMinYMin slice"><path d="M473,2793c339.3,-1799.3,509.3,-2700,510,-2702 l0 -0c3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80h400000v40H1017.7z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1106em;"><span></span></span></span></span></span></span></span></span></span></p><p>仍设E为允许的极限误差E_p的期望值，化简可得总体次品率区间估计的样本容量为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>N</mi><mi>i</mi></msub><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>Z</mi><mi>α</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><msub><mi>P</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>P</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><msup><mi>E</mi><mn>2</mn></msup></mfrac></mrow><annotation encoding="application/x-tex">N_i=\frac{(Z_\alpha)^2P_i(1-P_i)}{E^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1771em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>为保证较高的可置信度，本文取5.1节的较高置信度95%，极限误差的期望值仍取5%。将给出的标称值带入求解，得抽样得出的次品率在不同标称值下的结果，如表8所示</p><p><strong>表 8 95% 置信度下不同标称值的次品率</strong></p><table><thead><tr><th style="text-align:center">标称值</th><th style="text-align:center">样本容量</th><th style="text-align:center">允许最大次品数</th><th style="text-align:center">实际次品率</th></tr></thead><tbody><tr><td style="text-align:center">5%</td><td style="text-align:center">52</td><td style="text-align:center">5</td><td style="text-align:center">9.62%</td></tr><tr><td style="text-align:center">10%</td><td style="text-align:center">98</td><td style="text-align:center">15</td><td style="text-align:center">15.31%</td></tr><tr><td style="text-align:center">20%</td><td style="text-align:center">174</td><td style="text-align:center">44</td><td style="text-align:center">25.29%</td></tr></tbody></table><h2 id="问题二的重新求解">问题二的重新求解</h2><p>基于新求出来的次品率，更新问题二中数据，采用6.3节相同的算法求解，结果如表9所示。</p><p><strong>表 9 重解问题二的具体决策方案</strong></p><table><thead><tr><th style="text-align:center">情况</th><th style="text-align:center">选代次数</th><th style="text-align:center">最大利润/元</th><th style="text-align:center">零件 1</th><th style="text-align:center">零件 2</th><th style="text-align:center">成品</th><th style="text-align:center">不合格成品</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">51</td><td style="text-align:center">73225</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">拆解</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">82</td><td style="text-align:center">93668</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">拆解</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">4</td><td style="text-align:center">11235</td><td style="text-align:center">检测</td><td style="text-align:center">检测</td><td style="text-align:center">检测</td><td style="text-align:center">拆解</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">4</td><td style="text-align:center">6777</td><td style="text-align:center">检测</td><td style="text-align:center">检测</td><td style="text-align:center">检测</td><td style="text-align:center">拆解</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">36</td><td style="text-align:center">45386</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">不检测</td><td style="text-align:center">拆解</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">1</td><td style="text-align:center">13455</td><td style="text-align:center">检测</td><td style="text-align:center">检测</td><td style="text-align:center">不检测</td><td style="text-align:center">不拆解</td></tr></tbody></table><p>将上表与此前问题二的结果对比发现：大部分情况的决策没有变化，说明本文的模型具有一定的稳定性。观察到情况3、6在零件检测的决策有所改变，下面进行详细讨论：</p><ul><li>情况3：当次品率上浮，先前中等的次品率尚能控制较高的调换成本，次品数增多，调换成本急剧增大，故在源头上对零件进行检测更为合适，同时不进行成品检测保持良好的市场交易额。</li><li>情况6：此时的次品率接近10%——原先所有情况中的中等水平，情况6的检测成本较为相称，由于拆解成本过高故该流水线生产的产品均为一次性交易，因此适合先行检测以保证尽可能多的合成成品的一次性产出，在成品处不检测是为了提升本次的交易额，让尽可能多的产品流向市场。</li></ul><p>为进一步分析次品率扰动带来的影响，绘制重解前后迭代次数和最大利润对比图，分析在实际变动情况下零件回流、风险控制和收益的关系：</p><p><img src="https://pic.imgdb.cn/item/66e2f95ed9c307b7e945fd15.png" alt="图5  不同组合下的最大利润与迭代次数"></p><p>从总体轮次上看，在次品率有所上浮的情况下，零件回流的轮次有所增加，企业所获总体利润增加，说明“劣币”在市场生产循环中有一定驱逐“良币”的空间。但对于调换损失较高的企业，上浮的次品率超过了限度，导致调换成本不可控，利润有所下降。</p><p>模型在10%~15%次品率区间附近较为敏感，大于15%较为稳定，这有助于次品率过高或者不合格品处理损失过多的企业抵御风险，同时有助于生产精度较高的企业在流水线产能发生扰动时及时调整策略。</p><p>综上，我们可以合理给出不同企业的策略制定建议：若企业注重信誉与口碑，较高的产品质量和检测才是明智之选；若企业注重商品的流通次数，尽可能降低拆解成本与调换损失即可，可以保持一定的次品率。不论是哪种企业，知名度是企业生存不可或缺的要素，模型也说明良好的市场交易额的潜在价值远高于调换损失带来的负面影响。经商之道在于知名度的提升和合理的风险控制。</p><h2 id="问题三的重新求解">问题三的重新求解</h2><p>类似于问题二，计算最少抽样个数和置信度下允许的最大次品数，二者比值记为模拟抽样的次品率。10%的标称次品率下，95%置信度下实际最大次品率为15.31%。重新求解问题三，可得</p><p><strong>表10重解问题三的具体决策方案</strong></p><table><thead><tr><th style="text-align:center">零配件</th><th style="text-align:center">是否检测</th><th style="text-align:center">零配件</th><th style="text-align:center">是否检测</th><th style="text-align:center">半成品</th><th style="text-align:center">是否检测</th><th style="text-align:center">不合格品是否拆解</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">不检测</td><td style="text-align:center">5</td><td style="text-align:center">不检测</td><td style="text-align:center">1</td><td style="text-align:center">不检测</td><td style="text-align:center">不拆解</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">检测</td><td style="text-align:center">6</td><td style="text-align:center">不检测</td><td style="text-align:center">2</td><td style="text-align:center">检测</td><td style="text-align:center">不拆解</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">不检测</td><td style="text-align:center">7</td><td style="text-align:center">不检测</td><td style="text-align:center">3</td><td style="text-align:center">不检测</td><td style="text-align:center">拆解</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">检测</td><td style="text-align:center">8</td><td style="text-align:center">不检测</td><td style="text-align:center">成品</td><td style="text-align:center">检测</td><td style="text-align:center">拆解</td></tr></tbody></table><p>将上表与此前问题三的结果对比发现，企业的决策方向没有变化，都是对部分零件、半成品2以及成品进行检测。此时，最大期望利润为67.06元，比原先略有下降，这是因为考虑到次品率的变化，企业的检测费用略有增加，但是增加的检测费用避免了更大的调换成本，因此，在问题三所给定的具体场景中，增加检测费用的投入是值得的。同时可以发现检测的零件由原先的2号、7号变为2号、4号，这意味着对于更高的次品率，保证更复杂的工艺合格更为关键。</p><p>同第二问对比发现，当工艺和流程变得更加复杂时，次品率带来的策略改变不明显，稳定性更高，此时劣币的优势会受制于各类成本而无法通过多轮回流获得大量资金反而容易因为较高的次品率产生亏损。因此对于电子产品的大型企业更需要在生产前期增加检测费用，有利于对产品质量进行更严格的把关，维护企业信誉和用户口碑。</p><h1>模型的评价与推广</h1><h2 id="模型的优点">模型的优点</h2><ul><li>结合企业所处市场环境和体量，有针对性地给出不同经验模型下不同企业的决策制定方案，使得流水线的生产销售具有良好的风险控制能力和盈利能力</li><li>本文采用的决策模型能够综合考虑生产过程的各个环节，通过迭代找到全局最优解，所得结果科学准确</li><li>问题三的求解考虑了工艺和零件的泛化情况，加强了模型的通用性，提高了求解速度</li><li>问题四的求解考虑了数据波动，结果证明决策在不确定性下依然稳健有效</li><li>通过模型求解找到了企业确定次品率较快的方法，具有较高的置信度和极低的检测成本</li></ul><h2 id="模型的缺点">模型的缺点</h2><ul><li>模型的计算需保持资源始终处于大基数状态下，更适用于有能力积累资源的大型企业，用于中小型企业的决策可能有较高风险</li><li>模型中难以体现市场环境、供应链波动等外部因素对生产过程造成影响</li></ul><h2 id="模型的推广">模型的推广</h2><ul><li>考虑资源有限的情况，在制定策略和估计次品率时采用动态调整可进一步适用于更多规模的企业</li><li>可以将模型的单一目标扩展为多目标优化，如同时考虑成本最小化、质量最优化等</li></ul><h1>参考文献</h1><p>[1]张清辉.基于成本效益分析的公共交通优化策略应用[J].现代企业,2024,(08):103-105.</p><p>[2]中国财经出版传媒集团. 统计学[M]. 北京：中国财政经济出版社，2007：159.</p><p>[3]茆诗松，程依明，健晓龙. 概率论与数理统计教程 第二版[M]. 3版. 北京：高等教育出版社，2010.</p><p>[4]漆月,石璐.基于动态规划的电子资源采购决策支持模型研究[J].数字图书馆论坛,2020,(11):27-32.</p><p>[5]武瑞清.状态转移方程在突发事件多阶段决策评估中的应用[J].决策探索(中),2020,(07):36-37.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2024年国赛B题——基于成本效益分析的生产决策模型</title>
      <link href="/2024/09/12/shumo/24%E5%9B%BD%E8%B5%9B/"/>
      <url>/2024/09/12/shumo/24%E5%9B%BD%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<p><img src="https://pic.imgdb.cn/item/66e30c91d9c307b7e96961e3.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30c91d9c307b7e969621b.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30c94d9c307b7e96966e7.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30c94d9c307b7e969670e.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30c94d9c307b7e96966c9.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30d1fd9c307b7e96a2dab.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30d1fd9c307b7e96a2de3.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30d20d9c307b7e96a2e2c.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30d20d9c307b7e96a2e72.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30d1fd9c307b7e96a2d7f.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30d7bd9c307b7e96aa55d.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30d7bd9c307b7e96aa585.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30d7cd9c307b7e96aa756.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30d7cd9c307b7e96aa77e.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30d7ad9c307b7e96aa454.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30dbed9c307b7e96b039d.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30dbed9c307b7e96b03c7.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30dbed9c307b7e96b0404.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30dbed9c307b7e96b0429.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30dbdd9c307b7e96b037c.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30deed9c307b7e96b4a56.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30deed9c307b7e96b4a9e.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30defd9c307b7e96b4ac9.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30defd9c307b7e96b4b01.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30deed9c307b7e96b4a32.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30e11d9c307b7e96b7520.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30e11d9c307b7e96b7550.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30e11d9c307b7e96b7577.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30e11d9c307b7e96b759d.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30e10d9c307b7e96b74c8.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30e36d9c307b7e96baaeb.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30e36d9c307b7e96bab14.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30e36d9c307b7e96bab3c.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30e37d9c307b7e96bab5c.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e30e36d9c307b7e96baac0.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 数模 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>图论</title>
      <link href="/2024/08/16/shuju/%E5%9B%BE%E8%AE%BA/"/>
      <url>/2024/08/16/shuju/%E5%9B%BE%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<p>稠密图用邻接矩阵存，稀疏图用邻接表存</p><p>D:\ruanjian\IntelliJ IDEA 2023.2\bin</p><h1>DFS</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//建边</span></span><br><span class="line"><span class="comment">// 对于每个点k，开一个单链表，存储k所有可以走到的点。h[k]存储这个单链表的头结点</span></span><br><span class="line"><span class="type">int</span> h[N], e[N], ne[N], idx;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加一条边a-&gt;b</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b, ne[idx] = h[a], h[a] = idx ++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line">idx = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    st[u] = <span class="literal">true</span>; <span class="comment">// st[u] 表示点u已经被遍历过</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h[u]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = e[i];</span><br><span class="line">        <span class="keyword">if</span> (!st[j]) <span class="built_in">dfs</span>(j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>几个要素：图中的值，各数组下标，边的编号</p><p><code>h[i]</code>:i是图中的值a，h[i]是这个值在e[i]中的下标i</p><p><code>e[i]</code>:i是数组下标，e[i]是图中的值b，由此实现了a-&gt;b</p><p><code>ne[i]</code>:i是数组下标,ne[i]是e[i]对应的下一个数组下标</p><h1>BFS</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">st[<span class="number">1</span>] = <span class="literal">true</span>; <span class="comment">// 表示1号点已经被遍历过</span></span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">    q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = e[i];</span><br><span class="line">        <span class="keyword">if</span> (!st[j])</span><br><span class="line">        &#123;</span><br><span class="line">            st[j] = <span class="literal">true</span>; <span class="comment">// 表示点j已经被遍历过</span></span><br><span class="line">            q.<span class="built_in">push</span>(j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>应用：</p><ul><li><p>拓扑排序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">topsort</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> hh = <span class="number">0</span>, tt = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// d[i] 存储点i的入度</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (!d[i])</span><br><span class="line">            q[ ++ tt] = i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (hh &lt;= tt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = q[hh ++ ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span> (-- d[j] == <span class="number">0</span>)</span><br><span class="line">                q[ ++ tt] = j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果所有点都入队了，说明存在拓扑序列；否则不存在拓扑序列。</span></span><br><span class="line">    <span class="keyword">return</span> tt == n - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><a href="https://www.acwing.com/problem/content/847/">ACWing845. 八数码</a></p><p>有状态转移思想应用（妙啊）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">(string start)</span></span>&#123;</span><br><span class="line">    string end = <span class="string">&quot;12345678x&quot;</span>;<span class="comment">//定义目标状态</span></span><br><span class="line">    queue&lt;string&gt; q;</span><br><span class="line">    unordered_map&lt;string,<span class="type">int</span>&gt; d;<span class="comment">//O(1)</span></span><br><span class="line">    </span><br><span class="line">    q.<span class="built_in">push</span>(start);</span><br><span class="line">    d[start] = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, dy[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(q.<span class="built_in">size</span>())&#123;</span><br><span class="line">        <span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> dis = d[t];</span><br><span class="line">        <span class="keyword">if</span>(t == end) <span class="keyword">return</span> dis;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> k = t.<span class="built_in">find</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">        <span class="type">int</span> x = k / <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> y = k % <span class="number">3</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="type">int</span> a = x + dx[i],b = y + dy[i];</span><br><span class="line">            <span class="keyword">if</span>(a &gt;= <span class="number">0</span> &amp;&amp; a&lt;<span class="number">3</span> &amp;&amp; b &gt;= <span class="number">0</span> &amp;&amp; b &lt; <span class="number">3</span>)&#123;</span><br><span class="line">                <span class="built_in">swap</span>(t[k],t[a*<span class="number">3</span> + b]);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(!d.<span class="built_in">count</span>(t))&#123;</span><br><span class="line">                    d[t] = dis + <span class="number">1</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(t);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">swap</span>(t[k],t[a*<span class="number">3</span> + b]);<span class="comment">//还原状态</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1>朴素dijkstra算法</h1><ol><li><p>初始化距离</p><p>dis[1] = 0，dis[i] = +∞</p></li><li><p>找到当前已经确定最短距离的点，s:当前已经确定最短距离的点</p><p>for(i:1~n)</p><p>t:不在s中的，距离最近的点</p><p>t-&gt;s</p><p>更新距离</p></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">dijsktra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> dist);</span><br><span class="line">    dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="type">int</span> t = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;=n;j++)&#123;<span class="comment">//找到这一轮距离最近的点</span></span><br><span class="line">            <span class="keyword">if</span>(!st[j] &amp;&amp; (t == <span class="number">-1</span> || dist[t] &gt; dist[j]))&#123;</span><br><span class="line">                t = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= n;j++)&#123;<span class="comment">//更新这个点和其他所有点的距离</span></span><br><span class="line">            dist[j] = <span class="built_in">min</span>(dist[j],dist[t] + g[t][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        st[t] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(dist[n] &gt;= <span class="number">10010</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>堆优化</h1><ol><li><p>初始化距离</p><p>dis[1] = 0，dis[i] = +∞</p></li><li><p>找到当前已经确定最短距离的点，s:当前已经确定最短距离的点</p><p>t:不在s中的，距离最近的点</p><p>t-&gt;s（m条边）</p><p>更新距离（堆更新一次是O(logn)）</p></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span>&#123;</span><br><span class="line">    e[idx] = b;</span><br><span class="line">    w[idx] = c;</span><br><span class="line">    ne[idx] = h[a];<span class="comment">//存的是h[a]之前的数的idx,这样可以访问到所有a-&gt;x的边</span></span><br><span class="line">    h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dijkstra</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> dist);</span><br><span class="line">    dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    priority_queue&lt;PII,vector&lt;PII&gt;,greater&lt;PII&gt;&gt; heap;<span class="comment">//默认的是按照pair的第一个元素进行排序</span></span><br><span class="line">    heap.<span class="built_in">push</span>(&#123;<span class="number">0</span>,<span class="number">1</span>&#125;);<span class="comment">// 可以简写成 q.emplace(x, y)</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(heap.<span class="built_in">size</span>())&#123;</span><br><span class="line">        <span class="keyword">auto</span> t = heap.<span class="built_in">top</span>();</span><br><span class="line">        heap.<span class="built_in">pop</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> ver = t.second,distance = t.first;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(st[ver]) <span class="keyword">continue</span>;</span><br><span class="line">        st[ver] = <span class="literal">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = h[ver]; i != <span class="number">-1</span>; i = ne[i])&#123;<span class="comment">//找到和ver相连的边的最小的那一条</span></span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span>(dist[j] &gt; dist[ver] + w[i])&#123;</span><br><span class="line">                dist[j] = dist[ver] + w[i];</span><br><span class="line">                heap.<span class="built_in">push</span>(&#123;dist[j], j&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(dist[n] &gt;= <span class="number">1000000010</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>Bellman-Flord</h1><ol><li><p>建结构体a,b,w</p></li><li><p>for n次（迭代k次：从1号点经过不超过k条边到每个点的最短路的距离，若一次迭代没有点更新可直接结束）</p><p>​for 所有边a,b,w</p><p>​更新距离(松弛)</p></li></ol><blockquote><p>一定满足<code>dis[b] &lt;= dis[a] + w</code></p><p>如果有负权回路——一圈长度和小于0，就不一定有结果；若第n次还在迭代的话就有负环（一般用SPFA找）</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">bellman_ford</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line"></span><br><span class="line">    dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(last, dist, <span class="keyword">sizeof</span> dist);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> e = edges[j];</span><br><span class="line">            dist[e.b] = <span class="built_in">min</span>(dist[e.b], last[e.a] + e.c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>串联：由于这个算法的特性决定，每次更新得到的必然是在多考虑 1 条边之后能得到的全局的最短路。</p><p>而串联指的是一次更新之后考虑了不止一条边：由于使用了松弛，某节点的当前最短路依赖于其所有入度的节点的最短路；</p><p>假如在代码中使用dist[e.b]=min(dist[e.b],dist[e.a] + e.c);，我们无法保证dist[e.a]是否也在本次循环中被更新，如果被更新了，并且dist[e.b] &gt; dist[e.a] + e.c，那么会造成当前节点在事实上**“即考虑了一条从某个节点指向a的边，也考虑了a-&gt;b”，共两条边。**</p><p>而使用dist[e.b]=min(dist[e.b],last[e.a] + e.c);，可以保证a在dist更新后不影响对b的判定，因为后者使用last数组，保存着上一次循环中的dist的值。</p><h1>SPFA</h1><p>要求没有负环</p><p>第一个点入队</p><p>while queue不空</p><p>​t &lt;- q.front;q.pop();</p><p>​更新t的所有出边（t-&gt;b）</p><p>​queue&lt;-b;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line">    dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line">    st[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">    <span class="comment">//队列里都是由起点更新到的点，不存在bellman-ford算法中未更新的点同样被边更新的情况。</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        st[t] = <span class="literal">false</span>;<span class="comment">//曾经加入过队列的点出队后，会再次被加入队列继续更新与它联通的点</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span> (dist[j] &gt; dist[t] + w[i])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[j] = dist[t] + w[i];</span><br><span class="line">                <span class="keyword">if</span> (!st[j])</span><br><span class="line">                <span class="comment">//前面假如出现了可以把二这个点变小的值，那就更新，但不用加入队列</span></span><br><span class="line">                <span class="comment">//因为队列里已经有二这个点了，他肯定会遍历到，然后去更新与他相邻的节点之间的距离，</span></span><br><span class="line">                <span class="comment">//这样就提高了效率，而被淘汰的点之后又会被加入队列是因为此时他的最短距离又被更新了，</span></span><br><span class="line">                <span class="comment">//那么自然和他相连的节点距离也会更新，所以需要把他重新加入队列之中</span></span><br><span class="line">                &#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(j);</span><br><span class="line">                    st[j] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="判断负环">判断负环</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> h[N], w[M], e[M], ne[M], idx;</span><br><span class="line"><span class="type">int</span> dist[N], cnt[N];<span class="comment">//dist严格意义说不是用来存最短距离的。所以dist中元素初始值并不是那么重要。我们就拿dist中元素全部初始化为0来举例分析一下，如果图中全部是正权重，那么if就压根不会执行。cnt也不会更新。如果图中全是负权重，但没有负环，其实就跟求最短路比较类似了，但dist存的也不完全是源点1到各个点的最短距离，这里有这么两种情况(比如1-&gt;2,1-&gt;3,2-&gt;3,这时dist中元素就代表了源点1到各点的最短距离，因为如果这样，2,3开始不入队迟早也会入队，这样就退化成了，只开始入队1，其他点不入队的情况，算的是1到各点的最短距离。另外一种是可能存在1-&gt;3,2-&gt;3,1到不了2，这样此时dist[3]，就代表了1,2分别为起点到3的最短距离。如果存在连通分支的情况其实就是前面两个情况的结合。)第一种情况很显然就跟单源最短路一样，不存在负环的前提下最短路径的长度也就是n-1，一旦大于等于n就说明有负环。第二种情况可以把例如3这个点分别看成以1为源点，以2为源点求最短路。此时cnt代表的就是两个求最短路的过程中dist的更新次数。如果有n个点，1-&gt;n,但到不了2,2-&gt;n，但1可以到其他所有点，这样就变成以1为源点和以2为源点最短路，以1的角度看就是n-1个点的最短路，在这个最短路中cnt最多达到n-2，同样2-&gt;n最短路中cnt最多是1，相加也最对是n-1。类似的分析，如果1到不了很多点，可以看成多个最短路，在每个最短路中看cnt最大值，综合所有cnt更新会发现cnt最大也就是n-1(在没有负回路的前提下)有不同联通分支分析与第二种情况分析类似。</span></span><br><span class="line"><span class="comment">//如果既有负权重，又有正权重，对于dist全初始为0的情况来说，正权重其实就起不到作用，这里可以认为正权重的边不存在。把正权重的边删掉后，就又变成了全部是负权重的情况。回到了上面的分析。综上，如果回路中不存在负回路，那么cnt最多也就是n-1，只有存在负权重，cnt才会大于等于n</span></span><br><span class="line"><span class="comment">//所以结合上述分析，我们可以知道cnt[j]各个起源点到j点的最短长度的和</span></span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b, w[idx] = c, ne[idx] = h[a], h[a] = idx ++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        st[i] = <span class="literal">true</span>;</span><br><span class="line">        q.<span class="built_in">push</span>(i);</span><br><span class="line">    &#125;<span class="comment">//这里是因为如果和正常的spfa一样的话，只能判断从源点1可以到达所有的点的路径中有没有负环。但如果源点有到不了的点，比如不在一个联通分支，这样就会有点不会入队，这样就没法判断这个点到其他点的路径中是否存在负环，即也无法判断图中是否有负环，所以开始让所有点都入队</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        st[t] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span> (dist[j] &gt; dist[t] + w[i])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[j] = dist[t] + w[i];</span><br><span class="line">                cnt[j] = cnt[t] + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (cnt[j] &gt;= n) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (!st[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(j);</span><br><span class="line">                    st[j] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>Floyd</h1><p>for(k =1;k&lt;=n;k++)</p><p>​for(i =1;i&lt;=n;i++)</p><p>​for(j =1;j&lt;=n;j++)</p><p>​d[i,j] = min(d[i,j],d[i,k] + d[k,j]);</p><p>d[i,j]存的就是最短路长度</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">floyd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= n; k ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++ )</span><br><span class="line">                d[i][j] = <span class="built_in">min</span>(d[i][j], d[i][k] + d[k][j]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现横向联邦学习</title>
      <link href="/2024/08/15/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/08/15/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1>实现横向联邦学习</h1><p>横向联邦学习的服务端的主要功能是将被选择的客户端上传的本地模型进行模型聚合。</p><p>首先定义一个服务端类Server，类中的主要函数包括以下几个。</p><ul><li><p>定义构造函数。</p><p>在构造函数中，服务端的工作包括：</p><p>第一，将配置信息拷贝到服务端中；</p><p>第二，按照配置中的模型信息获取模型，使用torchvision 的models模块内置的ResNet-18模型。</p></li><li><p>定义模型聚合函数。</p><p>服务端的主要功能是进行模型的聚合，通过接收客户端上传的模型，使用聚合函数更新全局模型。采用经典的FedAvg 算法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">model_aggregate</span>(<span class="params">self, weight_accumulator</span>):</span><br><span class="line"><span class="keyword">for</span> name, data <span class="keyword">in</span> self.global_model.state_dict().items():</span><br><span class="line">update_per_layer = weight_accumulator[name] * self.conf[<span class="string">&quot;lambda&quot;</span>]</span><br><span class="line"><span class="keyword">if</span> data.<span class="built_in">type</span>() != update_per_layer.<span class="built_in">type</span>():</span><br><span class="line">data.add_(update_per_layer.to(torch.int64))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">data.add_(update_per_layer)</span><br></pre></td></tr></table></figure></li><li><p>定义模型评估函数。</p><p>评估当前的全局模型性能。</p></li></ul><h2 id="客户端">客户端</h2><p>横向联邦学习的客户端主要功能是接收服务端的下发指令和全局模型，利用本地数据进行局部模型训练。定义客户端类Client，类中的主要函数包括以下两种。</p><ul><li><p>定义构造函数。</p><p>在客户端构造函数中，客户端的主要工作包括</p><p>1.将配置信息拷贝到客户端中；</p><p>2.按照配置中的模型信息获取模型，通常由服务端将模型参数传递给客户端，客户端将该全局模型覆盖掉本地模型；</p><p>3.配置本地训练数据，通过torchvision 的datasets 模块获取cifar10 数据集后按客户端ID切分，不同的客户端拥有不同的子数据集，相互之间没有交集。</p></li><li><p>定义模型本地训练函数。</p><p>这是一个图像分类的任务，使用交叉熵作为本地模型的损失函数，利用梯度下降来求解并更新参数值，实现细节如下面代码块所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">local_train</span>(<span class="params">self, model</span>):</span><br><span class="line"><span class="keyword">for</span> name, param <span class="keyword">in</span> model.state_dict().items():</span><br><span class="line">self.local_model.state_dict()[name].copy_(param.clone())</span><br><span class="line">optimizer = torch.optim.SGD(self.local_model.parameters(), lr=self.conf[<span class="string">&#x27;lr&#x27;</span>],</span><br><span class="line">momentum=self.conf[<span class="string">&#x27;momentum&#x27;</span>])</span><br><span class="line">self.local_model.train()</span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="built_in">range</span>(self.conf[<span class="string">&quot;local_epochs&quot;</span>]):</span><br><span class="line"><span class="keyword">for</span> batch_id, batch <span class="keyword">in</span> <span class="built_in">enumerate</span>(self.train_loader):</span><br><span class="line">data, target = batch</span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">data = data.cuda()</span><br><span class="line">target = target.cuda()</span><br><span class="line">optimizer.zero_grad()</span><br><span class="line">output = self.local_model(data)</span><br><span class="line">loss = torch.nn.functional.cross_entropy(output, target)</span><br><span class="line">loss.backward()</span><br><span class="line">optimizer.step()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Epoch %d done.&quot;</span> % e)</span><br><span class="line">        </span><br><span class="line">diff = <span class="built_in">dict</span>()</span><br><span class="line"><span class="keyword">for</span> name, data <span class="keyword">in</span> self.local_model.state_dict().items():</span><br><span class="line">diff[name] = (data - model.state_dict()[name])</span><br><span class="line"><span class="keyword">return</span> diff</span><br></pre></td></tr></table></figure></li></ul><h2 id="整合">整合</h2><p>当配置文件、服务端类和客户端类都定义完毕，我们将这些信息组合起来。</p><p>首先，读取配置文件信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(args.conf, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">conf = json.load(f)</span><br></pre></td></tr></table></figure><p>分别定义一个服务端对象和多个客户端对象，用来模拟横向联邦训练场景。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">train_datasets, eval_datasets = datasets.get_dataset(<span class="string">&quot;./data/&quot;</span>, conf[<span class="string">&quot;type&quot;</span>])</span><br><span class="line">server = Server(conf, eval_datasets)</span><br><span class="line">clients = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(conf[<span class="string">&quot;no_models&quot;</span>]):</span><br><span class="line">clients.append(Client(conf, server.global_model, train_datasets, c))</span><br></pre></td></tr></table></figure><p>每一轮的迭代，服务端会从当前的客户端集合中随机挑选一部分参与本轮迭代训练，被选中的客户端调用本地训练接口local_train进行本地训练，最后服务端调用模型聚合函数model_aggregate来更新全局模型。</p><h2 id="配置信息">配置信息</h2><ul><li>model_name：模型名称</li><li>no_models：客户端数量</li><li>type：数据集信息</li><li>global_epochs：全局迭代次数，即服务端与客户端的通信迭代次数</li><li>local_epochs：本地模型训练迭代次数</li><li>k：每一轮迭代时，服务端会从所有客户端中挑选k个客户端参与训练。</li><li>batch_size：本地训练每一轮的样本数</li><li>lr，momentum，lambda：本地训练的超参数设置</li></ul><h2 id="联邦学习与中心化训练的效果对比">联邦学习与中心化训练的效果对比</h2><p><img src="https://pic.imgdb.cn/item/66bdc36ad9c307b7e949ed6b.jpg" alt="联邦学习与中心化训练的效果对比"></p><ul><li>联邦训练配置：一共10台客户端设备（no_models=10），每一轮任意挑选其中的5台参与训练（k=5）， 每一次本地训练迭代次数为3次（local_epochs=3），全局迭代次数为20次（global_epochs=20）。</li><li>集中式训练配置：我们不需要单独编写集中式训练代码，只需要修改联邦学习配置既可使其等价于集中式训练。具体来说，我们将客户端设备no_models和每一轮挑选的参与训练设备数k都设为1即可。这样只有1台设备参与的联邦训练等价于集中式训练。其余参数配置信息与联邦学习训练一致。图中我们将局部迭代次数分别设置了1，2，3来进行比较。</li></ul><h2 id="3-7-联邦学习在模型推断上的效果对比">3.7 联邦学习在模型推断上的效果对比</h2><p>单点训练只的是在某一个客户端下，利用本地的数据进行模型训练的结果。</p><p><img src="https://pic.imgdb.cn/item/66bdc36bd9c307b7e949eed2.jpg" alt="模型推断上的效果对比"></p><p>我们看到单点训练的模型效果（蓝色条）明显要低于联邦训练 的效果（绿色条和红色条），这也说明了仅仅通过单个客户端的数据，不能够 很好的学习到数据的全局分布特性，模型的泛化能力较差。</p><p>此外，对于每一轮 参与联邦训练的客户端数目（k 值）不同，其性能也会有一定的差别，k 值越大，每一轮参与训练的客户端数目越多，其性能也会越好，但每一轮的完成时间也会相对较长。</p><p>运行原作者代码结果如下：</p><p><img src="https://pic.imgdb.cn/item/66bdc36ad9c307b7e949eddd.jpg" alt="运行结果"></p><p>尝试增大local_epochs,lr,batch_size,单独增加batch_size训练速度会有所提升，发现总体速率和原始保持一致，效果有明显提升：</p><p><img src="https://pic.imgdb.cn/item/66bdc36ad9c307b7e949edb4.jpg" alt="调整后效果"></p><h2 id="参考文献及代码">参考文献及代码</h2><p>1.<a href="https://github.com/FederatedAI/Practicing-Federated-Learning/tree/main/chapter03_Python_image_classification">用Python从零实现横向联邦图像分类</a></p><p>2.<a href="chrome-extension://efaidnbmnnnibpcajpcglclefindmkaj/https://proceedings.mlr.press/v54/mcmahan17a/mcmahan17a.pdf">Communication-Efficient Learning of Deep Networks from Decentralized Data</a></p><p>3.<a href="https://github.com/shaoxiongji/federated-learning">Communication-Efficient Learning of Deep Networks from Decentralized Data(代码)</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记</title>
      <link href="/2024/08/01/JAVA/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/08/01/JAVA/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1>变量</h1><h2 id="Java数据类型">Java数据类型</h2><p><img src="https://pic.imgdb.cn/item/66a4cc76d9c307b7e99c6ebc.png" alt="数据类型"></p><ul><li>整数类型<ul><li>byte——1字节</li><li>short——2字节</li><li>int——4字节（默认）</li><li>long——8字节</li></ul></li><li>浮点类型<ul><li>float——4字节</li><li>double——8字节（默认）</li></ul></li></ul><blockquote><p>浮点数使用陷阱<br>2.7和8.1/3比较，8.1/3的结果接近2.7而非2.7，精度问题</p><span class='p red'>运算结果是小数要注意</span> 应以两个数的差的绝对值在某精度范围内判断</blockquote><h2 id="Java-API-文档">Java API 文档</h2><p>API (Application Programming Interface,应用程序编程接口)是Java提供的基本编程接口(Gava提供的类还有相关的方法)。</p><blockquote><p>中文在线文档：<a href="https://www.matools.com">https://www.matools.com</a></p></blockquote><p>类的组织形式</p><p><img src="https://pic.imgdb.cn/item/66a4d18fd9c307b7e9a240ce.png" alt="类的组织形式"></p><ul><li><p>字符类型(char)</p><p>在java中，char的本质是一个整数，在输出时，是unicode码对应的字符，可参与运算。</p></li><li><p>布尔类型——1字节</p></li></ul><h2 id="基本数据类型转换">基本数据类型转换</h2><h3 id="自动类型转换">自动类型转换</h3><p>当java程序在进行赋值或者运算时，精度小的类型自动转换为<code>精度最大</code>的数据类型。</p><p><img src="https://pic.imgdb.cn/item/66a4d63bd9c307b7e9a776f1.png" alt="自动类型转换"></p><blockquote><p>精度大-&gt;精度小会报错</p><p>byte和char不自动转换</p><p>byte,char,short可以转换为int计算，一运算就成int</p><p>布尔不参与转换</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> <span class="variable">d1</span> <span class="operator">=</span> n1 + <span class="number">1.1</span>;<span class="comment">//错 结果类型是 double</span></span><br><span class="line"><span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> n1 + <span class="number">1.1</span>;<span class="comment">//对 结果类型是 double</span></span><br><span class="line"> d1 = n1 + <span class="number">1.1F</span>;<span class="comment">//对 结果类型是 float</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> n ;<span class="comment">//错,变量间的赋值先判断类型</span></span><br><span class="line"></span><br><span class="line"><span class="type">byte</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">a2</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">a3</span> <span class="operator">=</span> a1 + a2;<span class="comment">//错 一运算就成int</span></span><br></pre></td></tr></table></figure><h3 id="强制类型转换">强制类型转换</h3><p>自动类型转换的逆过程，将容量大的数据类型转换为容量小的数据类型。使用时要加上强制转换符 ( )，但可能造成精度降低或溢出。</p><p><img src="https://pic.imgdb.cn/item/66a4db66d9c307b7e9aaf28f.png" alt="强制类型转换"></p><h3 id="基本数据类型和-String类型转换">基本数据类型和 String类型转换</h3><p>基本类型转String类型：将基本类型的值+“”</p><p>String类型转基本数据类型：通过基本类型的包装类调用parseXX:方法</p><blockquote><p>要确保String类型能够转成有效的数据</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="type">float</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="number">1.1F</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">4.5</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> n1 + <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> Integer.parseInt(s5);</span><br><span class="line"><span class="type">double</span> <span class="variable">num2</span> <span class="operator">=</span> Double.parseDouble(s5);</span><br><span class="line"><span class="type">float</span> <span class="variable">num3</span> <span class="operator">=</span> Float.parseFloat(s5);</span><br><span class="line"><span class="type">long</span> <span class="variable">num4</span> <span class="operator">=</span> Long.parseLong(s5);</span><br><span class="line"><span class="type">byte</span> <span class="variable">num5</span> <span class="operator">=</span> Byte.parseByte(s5);</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> Boolean.parseBoolean(<span class="string">&quot;true&quot;</span>);</span><br><span class="line"><span class="type">short</span> <span class="variable">num6</span> <span class="operator">=</span> Short.parseShort(s5);</span><br></pre></td></tr></table></figure><h1>运算符</h1><h2 id="算术运算符">算术运算符</h2><p>对于除号/，它的整数除和小数除是有区别的：整数之间做除法时，只保留整数部分而舍弃小数部分。例如：intx=10/3,结果是3。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>/<span class="number">3</span>  <span class="comment">//3</span></span><br><span class="line"><span class="type">double</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>/<span class="number">3</span>  <span class="comment">//3.33</span></span><br></pre></td></tr></table></figure><p>%的本质： <code>a%b = a-a/b*b</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10 % -3 = 1</span><br><span class="line">-10 % 3 = -1</span><br><span class="line">-10 % -3 = -1</span><br></pre></td></tr></table></figure><p>i=i++:结果i=1</p><blockquote><p>使用临时变量：(1)temp=i:(2)i=i+1;(3)i=temp</p></blockquote><p>i=++i:结果i=2</p><h2 id="关系运算符">关系运算符</h2><p>都是boolean型</p><h2 id="逻辑运算符">逻辑运算符</h2><ul><li>逻辑与&amp;，逻辑或|，逻辑异或^</li><li>短路与&amp;&amp;，短路或||，取反!</li></ul><p><img src="https://pic.imgdb.cn/item/66a63a0cd9c307b7e9dcc0f3.png" alt="逻辑运算符"></p><blockquote><p>&amp;&amp;和&amp;使用区别(||和|同理)</p><p>&amp;&amp;短路与：如果第一个条件为false,则第二个条件不会判断，最终结果为false,效率高</p><p>&amp;逻辑与：不管第一个条件是否为false,第二个条件都要判断，效率低</p></blockquote><h2 id="赋值运算符">赋值运算符</h2><p>只有单目运算符、赋值运算符是从右向左运算，会进行类型转换。</p><h2 id="三元运算符">三元运算符</h2><blockquote><p>条件表达式 ? 表达式 1:表达式 2</p></blockquote><p>如果条件表达式为rue,运算后的结果是表达式1，如果条件表达式为false,运算后的结果是表达式2。</p><p>表达式 1 和表达式 2 要为可以赋给接收变量的类型(或可以自动转换)。</p><h2 id="标识符">标识符</h2><p>Java对各种变量、方法和类等命名时使用的字符序列称为标识符。</p><p>🎀命名规则</p><ol><li><p>由26个英文字母大小写，0-9，或$组成</p></li><li><p>数字不可以开头。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int3ab=<span class="number">1</span>;<span class="comment">//错误</span></span><br></pre></td></tr></table></figure></li><li><p>不可以使用关键字和保留字，但能包含关键字和保留字。</p></li><li><p>Java中严格区分大小写，长度无限制。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> totalNum=<span class="number">10</span>;intn=<span class="number">90</span>;</span><br></pre></td></tr></table></figure></li><li><p>标识符不能包含空格。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a b=<span class="number">90</span>;</span><br></pre></td></tr></table></figure></li></ol><p>包名：多单词组成时所有字母都小写：aaa.bbb.ccc //比如 com.hsp.crm</p><p>类名、接口名：多单词组成时，所有单词的首字母大写：XxxYyyZzz [大驼峰] 比如： TankShotGame</p><p>变量名、方法名：多单词组成时，第一个单词首字母小写，第二个单词开始每个单词首字母大写：xxxYyyZzz [小 驼峰， 简称 驼峰法] 比如：tankShotGame</p><p>常量名：所有字母都大写。多单词时每个单词用下划线连接：XXX_YYY_ZZZ 比如 ：定义一个所得税率 TAX_RATE</p><h2 id="关键字">关键字</h2><p>被 Java 语言赋予了特殊含义，用做专门用途的字符串（单词），所有字母都为小写。</p><h2 id="保留字">保留字</h2><p>现有 Java 版本尚未使用，但以后版本可能会作为关键字使用。自己命名标识符时要避免使用这些保留 字 byValue、cast、future、 generic、 inner、 operator、 outer、 rest、 var 、 goto 、const</p><h2 id="键盘输入语句">键盘输入语句</h2><p>以使用键盘输入语句来获取。Input.java , 需要一个 扫描器(对象), 就是 Scanner</p><p>🎀步骤：</p><ul><li>导入该类的所在包, java.util.</li><li>创建该类对象（声明变量）</li><li>调用里面的功能</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;<span class="comment">//表示把 java.util 下的 Scanner 类导入</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Input</span> &#123;</span><br><span class="line">    <span class="comment">//编写一个 main 方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//演示接受用户的输入</span></span><br><span class="line">    <span class="comment">//步骤</span></span><br><span class="line">    <span class="comment">//Scanner 类 表示 简单文本扫描器，在 java.util 包</span></span><br><span class="line">    <span class="comment">//1. 引入/导入 Scanner 类所在的包</span></span><br><span class="line">    <span class="comment">//2. 创建 Scanner 对象 , new 创建一个对象,体会</span></span><br><span class="line">    <span class="comment">// myScanner 就是 Scanner 类的对象</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">myScanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="comment">//3. 接收用户输入了， 使用 相关的方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入名字&quot;</span>);</span><br><span class="line">    <span class="comment">//当程序执行到 next 方法时，会等待用户输入~~~</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> myScanner.next(); <span class="comment">//接收用户输入字符串</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入年龄&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> myScanner.nextInt(); <span class="comment">//接收用户输入 int</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入薪水&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">sal</span> <span class="operator">=</span> myScanner.nextDouble(); <span class="comment">//接收用户输入 double</span></span><br><span class="line">        System.out.println(<span class="string">&quot;人的信息如下:&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;名字=&quot;</span> + name</span><br><span class="line">                + <span class="string">&quot; 年龄=&quot;</span> + age + <span class="string">&quot; 薪水=&quot;</span> + sal);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进制">进制</h2><p>Java没有无符号数，计算机运算时都是以补码形式运算</p><h2 id="位运算符">位运算符</h2><p>按位与<code>&amp;</code>、按位或<code>|</code>，按位异或<code>^</code>，按位取反<code>~</code>，算数右移<code>&gt;&gt;</code>，算数左移<code>&lt;&lt;</code>，逻辑右移<code>&gt;&gt;&gt;</code>（低位溢出，高位补 0），没有逻辑左移。</p><h1>程序控制结构</h1><ul><li>顺序控制 前向引用</li><li>分支控制 if-else</li><li>switch 分支结构</li><li>for</li><li>while</li></ul><h1>数组、排序和查找</h1><h2 id="数组">数组</h2><p>数组属引用类型，数组型数据是对象(object)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态初始化</span></span><br><span class="line"><span class="type">int</span> a[] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> b[] = &#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br></pre></td></tr></table></figure><p>数组中的元素可以是任何数据类型，包括基本类型和引用类型，但是不能混用。</p><p>数组创建后，如果没有赋值，有默认值 <code>int 0</code>，<code>short 0</code>, <code>byte 0</code>, <code>long 0</code>, <code>float 0.0</code>,<code>double 0.0</code>，<code>char \u0000</code>，<code>boolean false</code>，<code>String null</code></p><h2 id="赋值机制">赋值机制</h2><p>基本数据类型赋值方式为值拷贝</p><p>数组赋值方式为引用传递，赋的值是地址，赋值方式为引用传达</p><p>若需要拷贝后的数组地址独立，则需要new</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr1 = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;; </span><br><span class="line"><span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span> [arr1.length]</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;arr1.length;i++)&#123;</span><br><span class="line">arr2[i] = arr1[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二维数组">二维数组</h2><h3 id="动态初始化">动态初始化</h3><p><img src="https://pic.imgdb.cn/item/66aa5b52d9c307b7e96f50ea.png" alt="二维数组"></p><blockquote><p>也可以这样创建：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>][]</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    arr[i] = <span class="keyword">new</span> <span class="title class_">int</span>[i + <span class="number">1</span>];</span><br><span class="line">    <span class="comment">//给每个一维数组开空间 new</span></span><br><span class="line"><span class="comment">//如果没有给一维数组 new ,那么 arr[i]就是 null</span></span><br><span class="line"><span class="comment">//遍历一维数组，并给一维数组的每个元素赋值</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">    arr[i][j] = i + <span class="number">1</span>;<span class="comment">//赋值</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><h3 id="静态初始化">静态初始化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[][] arr = &#123;&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;, &#123;<span class="number">8</span>,<span class="number">8</span>,<span class="number">9</span>&#125;, &#123;<span class="number">100</span>&#125;&#125;;</span><br></pre></td></tr></table></figure><h1>面向对象编程</h1><h2 id="类与对象">类与对象</h2><p>类是抽象的，概念的，代表一类事物,比如人类,猫类…, 即它是数据类型</p><p>对象是具体的，实际的，代表一个具体事物, 即是实例</p><p>类是对象的模板，对象是类的一个个体，对应一个实例</p><p><img src="https://pic.imgdb.cn/item/66af0a8bd9c307b7e9124ad3.png" alt="类与对象"></p><p>属性的定义语法同变量，示例：访问修饰符 属性类型 属性名;</p><p>访问修饰符： 控制属性的访问范围 有四种访问修饰符 public, proctected, 默认, private ,</p><p>属性的定义类型可以为任意类型，包含基本类型或引用类型</p><p>属性如果不赋值，有默认值，规则和数组一致。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="number">0</span></span><br><span class="line"><span class="type">short</span> <span class="number">0</span></span><br><span class="line"><span class="type">byte</span> <span class="number">0</span></span><br><span class="line"><span class="type">long</span> <span class="number">0</span></span><br><span class="line"><span class="type">float</span> <span class="number">0.0</span></span><br><span class="line"><span class="type">double</span> <span class="number">0.0</span></span><br><span class="line"><span class="type">char</span> \u0000</span><br><span class="line"><span class="type">boolean</span> <span class="literal">false</span></span><br><span class="line">String nul</span><br></pre></td></tr></table></figure><ul><li>内存分配机制</li></ul><p>栈： 一般存放基本数据类型(局部变量)</p><p>堆： 存放对象(Cat cat , 数组等)</p><p>方法区：常量池(常量，比如字符串)， 类加载信息</p><h2 id="成员方法">成员方法</h2><p>调用机制</p><p><img src="https://pic.imgdb.cn/item/66af10bfd9c307b7e920090d.png" alt="方法调用机制"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">访问修饰符 返回数据类型 方法名（形参列表..） &#123;//方法体</span><br><span class="line">    语句；</span><br><span class="line">    return 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>方法不能嵌套定义</p><p>跨类中的方法A类调用B类方法：需要通过对象名调用。比如对象名，方法名（参数)</p><p>跨类的方法调用和方法的访问修饰符相关</p></blockquote><h3 id="传参机制">传参机制</h3>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javaee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java核心技术卷Ⅰ</title>
      <link href="/2024/08/01/JAVA/Java%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E5%8D%B7%E2%85%A0/"/>
      <url>/2024/08/01/JAVA/Java%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E5%8D%B7%E2%85%A0/</url>
      
        <content type="html"><![CDATA[<h1>对象与类</h1><h2 id="面向对象程序设计概述">面向对象程序设计概述</h2><p>创建实例：类构建对象的过程</p><p>实例字段：对象中的数据；实例字段的值的集合称为状态</p><p>方法：操作数据的过程</p><h3 id="行为、状态、标识">行为、状态、标识</h3><p><img src="https://pic.imgdb.cn/item/66c2dbcdd9c307b7e99ffa0e.png" alt=""></p><h3 id="类之间的关系">类之间的关系</h3><ul><li>依赖</li><li>聚合</li><li>继承</li></ul><h2 id="使用预定义类">使用预定义类</h2><h3 id="对象与对象变量">对象与对象变量</h3><p>使用构造器（constructor）构造新实例，构造器的名字应该与类名相同。</p><blockquote><p>一个对象变量并没有实际包含一个对象，而仅仅引用一个对象。</p></blockquote><p>局部变量不会自动地初始化为null，而必须通过调用new或将它们设置为null进初始化。</p><h3 id="更改器方法与访问器方法">更改器方法与访问器方法</h3><p>只访问对象而不修改对象的方法有时称为访问器方法（accessor method）例如，LocalDate.getYear和GregorianCalendar.get。</p><p>GregorianCalendar.add方法是一个更改器方法（mutator method）。调用这个方法后，someDay对象的状态会改变。</p><h2 id="自定义类">自定义类</h2><h3 id="Employee类">Employee类</h3><p>文件名必须与public类的名字相匹配。在一个源文件中，只能有一个公有类，但可以有任意数目的非公有类。</p><p>类通常包含类类型的实例字段。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure><h3 id="构造器">构造器</h3><p>构造器与类同名，总是伴随着new操作符的执行被调用，而不能对一个已经存在的对象调用构造器来达到重新设置实例域的目的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String n, <span class="type">double</span> s, <span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> day)</span></span><br><span class="line">   &#123;</span><br><span class="line">      name = n;</span><br><span class="line">      salary = s;</span><br><span class="line">      hireDay = LocalDate.of(year, month, day);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">staff[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="string">&quot;Carl Cracker&quot;</span>, <span class="number">75000</span>, <span class="number">1987</span>, <span class="number">12</span>, <span class="number">15</span>);<span class="comment">//正确</span></span><br><span class="line">james.Employee(<span class="string">&quot;Carl Cracker&quot;</span>, <span class="number">75000</span>, <span class="number">1987</span>, <span class="number">12</span>, <span class="number">15</span>);<span class="comment">//错误</span></span><br></pre></td></tr></table></figure><ul><li>构造器与类同名</li><li>每个类可以有一个以上的构造器</li><li>构造器可以有0个、1个或多个参数</li><li>构造器没有返回值</li><li>构造器总是伴随着new操作一起调用</li><li>所有的Java对象都是在堆中构造的</li><li>不要在构造器中定义与实例域重名的局部变量。这些变量只能在构造器内部访问。这些变量屏蔽了同名的实例域。</li></ul><p><strong>var关键字声明局部变量：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">var</span> <span class="variable">harry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="string">&quot;Carl Cracker&quot;</span>, <span class="number">75000</span>, <span class="number">1987</span>, <span class="number">12</span>, <span class="number">15</span>);</span><br></pre></td></tr></table></figure><p>只能用于方法中的局部变量，参数和字段的类型必须声明。</p><p><strong>使用null引用：</strong></p><p>null值应用一个方法，产生NullPointException异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">LocalDate</span> <span class="variable">rightNow</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> rightNow.toString();<span class="comment">//NullPointException</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//解决中断情况</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String n,<span class="type">double</span> s,<span class="type">int</span> year,<span class="type">int</span> monh,<span class="type">int</span> day)</span>&#123;</span><br><span class="line">    name = Object.requireNonNulElse(n,<span class="string">&quot;unknown&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="隐式参数与显式参数">隐式参数与显式参数</h3><p>第一个参数称为隐式（implicit）参数，是出现在方法名前的Employee类对象。第二个参数位于方法名后面括号中的数值，这是一个显式（explicit）参数。在每一个方法中，关键字this表示隐式参数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">raiseSalary</span><span class="params">(<span class="type">double</span> byPercent)</span>&#123;</span><br><span class="line">    <span class="type">double</span> <span class="variable">raise</span> <span class="operator">=</span> <span class="built_in">this</span>.salary * byPercent/<span class="number">100</span>;</span><br><span class="line">    <span class="built_in">this</span>.salary += raise;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="封装的优点">封装的优点</h3><p>需要获得或设置实例域的值。因此，应该提供下面三项内容：</p><ul><li><p>一个私有的数据域</p></li><li><p>一个公有的域访问器方法</p></li><li><p>一个公有的域更改器方法。</p></li></ul><blockquote><p>不要编写返回引用可变对象的访问器方法</p><p>如果需要返回一个可变数据域的拷贝，就应该使用clone</p></blockquote><h3 id="基于类的访问权限">基于类的访问权限</h3><p>方法可以访问所属类的私有特性（feature），而不仅限于访问隐式参数的私有特性。</p><h3 id="final实例字段">final实例字段</h3><p>可以将实例字段定义为final。构建对象时必须初始化这样的字段。必须确保在每一个构造器执行之后，这个字段的值被设置，并且在后面的操作中，不能够再对它进行修改。</p><p>但对于可变的类，使用final修饰符可能会造成混乱：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> StringBulider evaluations;</span><br></pre></td></tr></table></figure><p>final关键字只是表示存储在evaluations变量中的对象引用不会再指示其他StringBuilder对象。不过这个对象可以更改。</p><h2 id="静态字段和静态方法">静态字段和静态方法</h2><h3 id="静态字段">静态字段</h3><p>如果将字段定义为static，这个字段不出现在每个类的对象中，每个静态字段只有一个副本，静态字段属于类，但不属于单个对象。</p><p>可以用来构造静态常量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pubilc <span class="keyword">class</span> <span class="title class_">Math</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">double</span> <span class="variable">PI</span> <span class="operator">=</span> <span class="number">3.1415926</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态方法">静态方法</h3><p>静态方法是一种不能向对象实施操作的方法。没有this参数，不能访问实例字段。</p><p>可用类名.静态方法名/对象.静态方法名调用。</p><h3 id="工厂方法">工厂方法</h3><p>继承子类</p><h3 id="main方法">main方法</h3><p>静态方法，不对任何对象进行操作</p><h2 id="方法参数">方法参数</h2><p>一个方法可以修改<strong>传递引用</strong>所对应的变量值，而不能修改传递<strong>值调用</strong>所对应的变量值。</p><p>Java程序设计语言总是采用按值调用。也就是说，方法得到的是所有参数值的一个拷贝，特别是，方法不能修改传递给它的任何参数变量的内容。</p><p><img src="https://pic.imgdb.cn/item/66c42efbd9c307b7e9412403.png" alt="按值调用"></p><p>对于对象来说可行：<br><img src="https://pic.imgdb.cn/item/66c42f77d9c307b7e941840f.png" alt="对象"></p><p>Java程序设计语言对对象采用的不是引用调用，实际上，对象引用是按值传递的。</p><ul><li>一个方法不能修改一个基本数据类型的参数（即数值型或布尔型）。</li><li>一个方法可以改变一个对象参数的状态。</li><li>一个方法不能让对象参数引用一个新的对象。</li></ul><h2 id="对象构造">对象构造</h2><h3 id="重载">重载</h3><p>如果多个方法（比如，StringBuilder构造器方法）有相同的名字、不同的参数，便产生了重载。</p><blockquote><p>Java允许重载任何方法，而不只是构造器方法。因此，要完整地描述一个方法，需要指出方法名以及参数类型。这叫做方法的签名（signature）。</p><p>不能有两个名字相同、参数类型也相同却返回不同类型值的方法。</p></blockquote><h3 id="默认字段初始化">默认字段初始化</h3><p>必须明确地初始化方法中的局部变量。但是，如果没有初始化类中的字段，将会被自动初始化为默认值（0、false或null）。</p><h3 id="无参数构造">无参数构造</h3><p>一个类时没有编写构造器，那么系统就会提供一个无参数构造器。如果类中提供了至少一个构造器，但是没有提供无参数的构造器，则在构造对象时如果没有提供参数就会被视为不合法。</p><h3 id="参数名技巧">参数名技巧</h3><p>参数变量会遮蔽同名的实例字段。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String aName,<span class="type">double</span> aSalary)</span>&#123;</span><br><span class="line">    name = aName;</span><br><span class="line">    salary = aSalary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String name,<span class="type">double</span> salary)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.salary = salary;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用另一个构造器">调用另一个构造器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(<span class="type">double</span> s)</span>&#123;</span><br><span class="line"><span class="comment">//调用Employee(String name,double salary)</span></span><br><span class="line">    <span class="built_in">this</span>(<span class="string">&quot;Employee #&quot;</span> + nextId,s);</span><br><span class="line">    nextId++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="初始化块">初始化块</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="comment">// set nextId to a random number between 0 and 9999</span></span><br><span class="line">      nextId = generator.nextInt(<span class="number">10000</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="对象析构">对象析构</h3><p>由于Java有自动的垃圾回收器，不需要人工回收内存，所以Java不支持析构器。</p><ul><li>一旦用完就关闭，close方法</li><li>等到虚拟机退出再关闭，Euntime.addShutdownHook</li></ul><h2 id="记录">记录</h2><p>是特殊的类，状态不可改变，公共可读。</p><p>组件：一个记录的实例字段。</p><ul><li>toString</li><li>equals</li><li>hashCode</li></ul><p>不能为记录增加实例字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">record</span> <span class="title class_">Piont</span><span class="params">(<span class="type">double</span> x,<span class="type">double</span> y)</span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="type">double</span> r;<span class="comment">//错误</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>记录的实例字段自动为final字段（可变），可自己设置不可变类型。</p><p>标准构造器：自动定义地设置所有实例字段的构造器。</p><p>自定义构造器：第一句必须调用另一个构造器，最终会调用标准构造器。</p><p>不能在简洁构造器主体中读取或修改实例字段。</p><h2 id="包">包</h2><h3 id="类的导入">类的导入</h3><p>类可以使用所属包中的所有类和其他包的公共类。</p><p>访问其他包的公共类：</p><ul><li>完全限定类名</li><li>import java.time*(只能导入一个包)</li></ul><h3 id="在包中增加类">在包中增加类</h3><p>要想将一个类放入包中，就必须将包的名字放在源文件的开头，包中定义类的代码之前。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.horstmann.corejava;</span><br></pre></td></tr></table></figure><p>如果没有在源文件中放置package语句，这个源文件中的类就被放置在一个无名包中。无名包是一个没有名字的包。</p><p>子目录：com\horstmann\corejava</p><blockquote><p>编译器处理文件（不检查目录结构），解释器加载类</p></blockquote><h3 id="包访问">包访问</h3><p>如果没有指定public或private，这个部分（类、方法或变量）可以被同一个包中的所有方法访问。</p><h3 id="文档注释">文档注释</h3><p>javadoc——HTML文档，<code>/**...*/</code>在标记之后紧跟着自由格式文本（free-form text）。标记由@开始，如@author或@param。自由格式文本的第一句应该是一个概要性的句子。javadoc实用程序自动地将这些句子抽取出来形成概要页。</p><blockquote><p>要键入等宽代码，需使用{@code …}而不是&lt;code&gt;…&lt;/code&gt;</p><p>果文档中有到其他文件的链接，例如，图像文件（用户界面的组件的图表或图像等），就应该将这些文件放到子目录doc-files中。javadoc实用程序将从源目录拷贝这些目录及其中的文件到文档目录中。在链接中需要使用doc-files目录，例如：&lt;img src=“doc-files/uml.png”alt=“UML diagram”&gt;。</p></blockquote><ul><li><p>类注释 类注释必须放在import语句之后，类定义之前。</p></li><li><p>方法注释 每一个方法注释必须放在所描述的方法之前。</p><ul><li><p>@param变量描述</p><p>这个标记将对当前方法的“param”（参数）部分添加一个条目。这个描述可以占据多行，并可以使用HTML标记。一个方法的所有@param标记必须放在一起。</p></li><li><p>@return描述</p><p>这个标记将对当前方法添加“return”（返回）部分。这个描述可以跨越多行，并可以使用HTML标记。</p></li><li><p>@throws类描述</p><p>这个标记将添加一个注释，用于表示这个方法有可能抛出异常。</p></li></ul></li><li><p>字段注释 只需要对公有字段（通常指的是静态常量）的注释</p></li><li><p>通用注释</p><ul><li><p>@author姓名</p></li><li><p>@version文本</p></li><li><p>@since文本</p></li><li><p>@see引用</p><p>建立一个链接到com.horstmann.corejava.Employee类的raiseSalary(double)方法的超链接。</p><p>@see标记后面有一个&lt;字符，就需要指定一个超链接。</p></li><li><p>@deprecated文本</p></li></ul></li><li><p>包注释</p><ul><li>提供一个以package.html命名的HTML文件。在标记&lt;body&gt;…&lt;/body&gt;之间的所有文本都会被抽取出来。</li><li>提供一个以package-info.java命名的Java文件。这个文件必须包含一个初始的以/*<em>和</em>/界定的Javadoc注释，跟随在一个包语句之后。它不应该包含更多的代码或注释。</li></ul></li><li><p>注释提取</p><ul><li><p>切换到包含想要生成文档的源文件目录。</p></li><li><pre><code class="language-java">javadoc -d docDirectory nameOfPackage//包javadoc -d docDirectory nameOfPackagenameOfPackage...//多个包的文档    javadoc -d docDirectory *java//文件在默认包<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 类设计技巧</span><br><span class="line"></span><br><span class="line">  - 一定要保证数据私有</span><br><span class="line">  - 一定要对数据初始化</span><br><span class="line">  - 不要在类中使用过多的基本类型</span><br><span class="line">  - 不是所有的字段都需要独立的字段访问器和字段更改器</span><br><span class="line">  - 将职责过多的类进行分解</span><br><span class="line">  - 类名和方法名要能够体现它们的职责</span><br><span class="line">  - 优先使用不可变的类</span><br><span class="line"></span><br><span class="line"># 继承</span><br><span class="line"></span><br><span class="line">## 类、超类和子类</span><br><span class="line"></span><br><span class="line">“is-a”关系是继承的特征</span><br><span class="line"></span><br><span class="line">### 定义子类</span><br><span class="line"></span><br><span class="line">所有继承都是公共继承</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">public class Manger extends Employee&#123;</span><br><span class="line">    added methods and fields</span><br><span class="line">&#125;//Employee超类，基类，父类</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><blockquote><p>声明为私有的类成员不会被这个类的子类继承，因为子类不能直接访问私有字段。但子类创建的对象有这些字段。</p></blockquote><h3 id="覆盖方法">覆盖方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">double</span> <span class="variable">baseSalary</span> <span class="operator">=</span> <span class="built_in">super</span>.getSalary();</span><br><span class="line">    <span class="keyword">return</span> baseSalary + bonus;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>super不是对象的引用，是指示编译器调用超类方法的特殊关键字。继承不会删除任何字段或方法。</p></blockquote><h3 id="子类构造器">子类构造器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">Manager</span><span class="params">(String name, <span class="type">double</span> salary, <span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> day)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">super</span>(name, salary, year, month, day);</span><br><span class="line">    <span class="comment">//调用Employee类的name, salary, year, month, day参数的构造器</span></span><br><span class="line">    bonus = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果子类的构造器没有显式地调用超类的构造器，则将自动地调用超类默认（没有参数）的构造器。</p><ul><li>this<ul><li>引用隐式参数</li><li>调用该类其他的构造器</li></ul></li><li>super<ul><li>调用超类的方法</li><li>调用超类的构造器</li></ul></li></ul><h3 id="继承层次结构">继承层次结构</h3><p><img src="https://pic.imgdb.cn/item/66c848f9d9c307b7e93f49a6.png" alt="层次结构"></p><p>由一个公共超类派生出来的所有类的集合被称为继承层次（inheritance hierarchy)，继承层次中，从某个特定的类到其祖先的路径被称为该类的继承链（inheritance chain）。</p><blockquote><p>Java不支持多继承。</p></blockquote><h3 id="多态">多态</h3><p>“is-a”规则的另一种表述法是置换法则。可以将一个子类的对象赋给超类变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> inheritance;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This program demonstrates inheritance.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.21 2004-02-21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Cay Horstmann</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ManagerTest</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="type">var</span> <span class="variable">boss</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Manager</span>(<span class="string">&quot;Carl Cracker&quot;</span>, <span class="number">80000</span>, <span class="number">1987</span>, <span class="number">12</span>, <span class="number">15</span>);</span><br><span class="line">      boss.setBonus(<span class="number">5000</span>);</span><br><span class="line"></span><br><span class="line">      <span class="type">var</span> <span class="variable">staff</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">      staff[<span class="number">0</span>] = boss;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">boss.setBonus(<span class="number">5000</span>) <span class="comment">//对</span></span><br><span class="line">staff[<span class="number">0</span>].setBonus(<span class="number">5000</span>) <span class="comment">//错</span></span><br><span class="line"><span class="type">Manager</span> <span class="variable">m</span> <span class="operator">=</span> staff[i] <span class="comment">//不能将超类的引用赋值给类变量</span></span><br></pre></td></tr></table></figure><p>staff[0]的声明类型是Employee</p><h3 id="理解方法调用">理解方法调用</h3><ol><li>编译器查看对象的声明类型和方法名。</li><li>查看调用方法时提供的参数类型。如果在所有名为f的方法中存在一个与提供的参数类型完全匹配，就选择这个方法，这个过程被称为<strong>重载解析</strong>。</li><li>如果是private方法、static方法、final方法（有关final修饰符的含义将在下一节讲述）或者构造器，那么编译器将可以准确地知道应该调用哪个方法，我们将这种调用方式称为<strong>静态绑定</strong>（static binding）。与此对应的是，调用的方法依赖于隐式参数的实际类型，并且在运行时实现<strong>动态绑定</strong>。</li><li>当程序运行，并且采用动态绑定调用方法时，虚拟机一定调用与x所引用对象的实际类型最合适的那个类的方法。假设x的实际类型是D，它是C类的子类。如果D类定义了方法f(String)，就直接调用它；否则，将在D类的超类中寻找f(String)，以此类推。</li></ol><p>虚拟机预先为每个类创建了一个方法表（method table），</p><blockquote><p>在覆盖一个方法的时候，子类方法不能低于超类方法的可见性。特别是，如果超类方法是public，子类方法一定要声明为public。</p></blockquote><h3 id="阻止继承：final类和方法">阻止继承：final类和方法</h3><p>不允许扩展的类被称为final类，使用final修饰符，final类中的所有方法自动地成为final方法。</p><p>如果一个方法没有被覆盖并且很短，编译器就能够对它进行优化处理，这个过程为称为<strong>内联</strong>（inlining）。</p><blockquote><p>枚举和记录总是final,它们不允许扩展。</p></blockquote><h3 id="强制类型转换✨">强制类型转换✨</h3><p>如果试图在继承链上进行向下的类型转换，并且“谎报”有关对象包含的内容，会报错</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Manager</span> <span class="variable">boss</span> <span class="operator">=</span> (Manager) staff[<span class="number">1</span>];</span><br></pre></td></tr></table></figure><p>在进行类型转换之前，先查看一下是否能够成功地转换。这个过程简单地使用instanceof操作符就可以实现。如果这个类型转换不可能成功，编译器就不会进行这个转换。</p><p><img src="https://pic.imgdb.cn/item/66c8a73bd9c307b7e9d9714a.png" alt="instanceof"></p><ul><li>只能在继承层次内进行类型转换。</li><li>在将超类转换成子类之前，应该使用instanceof进行检查。</li></ul><h3 id="instanceof模式匹配✨">instanceof模式匹配✨</h3><p>Java16:直接在测试中声明子变量：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (staff[i] <span class="keyword">instanceof</span> Manager boss)&#123;</span><br><span class="line">boss.setBonus(<span class="number">5000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>staff[i]是Manager类的实体，boss变为staff[i]；否则，不会设置boss，生成false值。</p><p>引入一个变量时，可以立即在同一个表达式中使用这个变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Employee e;</span><br><span class="line"><span class="keyword">if</span> (e <span class="keyword">instanceof</span> Manager m &amp;&amp; m.getBonus() &gt; <span class="number">10000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//只有&amp;&amp;左边true才计算右边，若计算右边，则m必为一个Manager实例</span></span><br></pre></td></tr></table></figure><p>instanceof模式定义的局部变量会遮蔽字段。</p><h3 id="受保护访问">受保护访问</h3><p>希望超类中的某些方法允许被子类访问，或允许子类的方法访问超类的某个字段。为此，需要将这些方法或域声明为<strong>protected</strong>。受保护的字段只能由同一个包的类访问</p><p>🎀Java用于控制可见性的4个访问修饰符</p><ul><li>仅对本类可见——private</li><li>对所有类可见——public</li><li>对本包和所有子类可见——protected</li><li>对本包可见——默认（很遗憾），不需要修饰符</li></ul><h2 id="Object：所有类的超类">Object：所有类的超类</h2><p>可以使用Object类型的变量引用任何类型的对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object obj <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="string">&quot;Harry Hacker&quot;</span>,<span class="number">35000</span>);</span><br></pre></td></tr></table></figure><p>Object类型的变量只能用于作为各种值的泛型容器。要想对其中的内容进行具体的操作，还需要清楚对象的原始类型，并进行相应的类型转换。</p><p>只有基本类型（primitive types）不是对象，例如，数值、字符和布尔类型的值都不是对象。<strong>所有的数组类型，不管是对象数组还是基本类型的数组都扩展了Object类。</strong></p><h3 id="equals方法">equals方法</h3><p>只有在两个对象属于同一个类时，才有可能相等。</p><p>在子类中定义equals方法时，首先调用超类的equals。如果检测失败，对象就不可能相等。如果超类中的字段都相等，就需要比较子类中的实例字段。</p><h3 id="相等测试与继承">相等测试与继承</h3><p>如果发现类不匹配，equals方法就返回false。但是，许多程序员却喜欢使用instanceof进行检测：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!(otherObject <span class="keyword">instanceof</span> Employee)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p>特性:</p><ol><li>自反性：对于任何非空引用x, x.equals(x)应该返回true。</li><li>对称性：对于任何引用x和y，当且仅当y.equals(x)返回true,x.equals(y)也应该返回true。</li><li>传递性：对于任何引用x、y和z，如果x.equals(y)返回true,y.equals(z)返回true, x.equals(z)也应该返回true。</li><li>一致性：如果x和y引用的对象没有发生变化，反复调用x.equals(y)应该返回同样的结果。</li><li>对于任意非空引用x, x.equals(null)应该返回false。</li></ol><p>注意：</p><ul><li>如果子类能够拥有自己的相等概念，则对称性需求将强制采用getClass进行检测。</li><li>如果由超类决定相等的概念，那么就可以使用instanceof进行检测，这样可以在不同子类的对象之间进行相等的比较。</li></ul><h3 id="hashCode方法">hashCode方法</h3><p>要考虑这个散列码是基于数值还是地址计算的</p><h3 id="toString方法">toString方法</h3><p>最好给每个类都搞一个toString方法。</p><p>Object类定义了toString方法，用来打印输出对象所属的类名和散列码。</p><h2 id="泛型数组列表">泛型数组列表</h2><p>在运行时确定数组大小——ArrayList，一个采用<strong>类型参数</strong>（type parameter）的泛型类（generic class）。</p><h3 id="声明数组列表">声明数组列表</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;Employee&gt; staff = <span class="keyword">new</span> <span class="title class_">ArryList</span>&lt;Employee&gt;(<span class="number">100</span>);<span class="comment">//初始容量100</span></span><br><span class="line">    </span><br><span class="line"><span class="type">var</span> <span class="variable">staff</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArryList</span>&lt;Employee&gt;();</span><br><span class="line"></span><br><span class="line">ArrayList&lt;Employee&gt; staff = <span class="keyword">new</span> <span class="title class_">ArryList</span>&lt;&gt;();</span><br></pre></td></tr></table></figure><blockquote><p>分配数组列表 != 分配数组元素</p></blockquote><p>确定数组大小不再变化后可使用trimToSize方法，需移动内存块。</p><h3 id="访问数组元素">访问数组元素</h3><p>只有i小于或等于数组列表的大小时，才能够调用list.set(i, x)，要得到一个数组列表的元素，可以使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Employee</span> <span class="variable">e</span> <span class="operator">=</span> staff.get(i); </span><br><span class="line"><span class="comment">//只有i小于或等于数组列表的大小时，才能够调用list.set(i, x)。</span></span><br><span class="line"></span><br><span class="line"><span class="type">Employee</span> <span class="variable">e</span> <span class="operator">=</span> (Employee) staff.get(i); </span><br><span class="line"><span class="comment">//get方法的调用者必须对返回值进行类型转换</span></span><br></pre></td></tr></table></figure><p>更为保险的方法是想创建一个数组列表，而后将其转换为数组元素（toArray方法）。</p><h3 id="类型化与原始数组列表的兼容性">类型化与原始数组列表的兼容性</h3><p>鉴于兼容性的考虑，编译器在对类型转换进行检查之后，如果没有发现违反规则的现象，就将所有的类型化数组列表转换成原始ArrayList对象。在程序运行时，所有的数组列表都是一样的，即没有虚拟机中的类型参数。因此，类型转换（ArrayList）和（ArrayList<Employee>）将执行相同的运行时检查。</p><p>只要在与遗留的代码进行交叉操作时，研究一下编译器的警告性提示，并确保这些警告不会造成太严重的后果就行了。</p><h3 id="对象包装器与自动装箱">对象包装器与自动装箱</h3><p>对象包装器类是不可变的，即一旦构造了包装器，就不允许更改包装在其中的值。</p><p>对象包装器类还是final，因此不能定义它们的子类。</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">var</span> <span class="variable">List</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line">list.add(<span class="number">3</span>);<span class="comment">//自动装箱</span></span><br><span class="line"><span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> list.get(i);<span class="comment">//自动拆箱</span></span><br></pre></td></tr></table></figure><blockquote><p>绝对不要依赖包装器对象的同一性。不要用<code>==</code>比较包装器对象（这是依据存储位置进行比较），可以用equals()比较，也不要将包装器对象作为锁。</p></blockquote><p>装箱和拆箱是编译器的工作，不是虚拟机。</p><p>Integer对象是不可变的，在方法内部对这个拷贝所做的任何修改都不会影响到原始变量。这就是所谓的“<strong>按值传递</strong>”。</p><h2 id="参数个数可变的方法">参数个数可变的方法</h2><p>可以将已经存在且最后一个参数是数组的方法重新定义为可变参数的方法，而不会破坏任何已经存在的代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String...args)</span></span><br></pre></td></tr></table></figure><h2 id="抽象类">抽象类</h2><p>包含一个或多个抽象方法的类本身必须被声明为抽象的，抽象方法相当于子类中实现的具体方法的占位符。</p><blockquote><p>抽象类不能实例化，仍可以创建一个抽象类的对象变量，但只能引用非抽象子类的对象。</p><p>编译器只允许调用在类中声明的方法。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> acstract <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line"><span class="keyword">public</span> acstract String <span class="title function_">getDescription</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="枚举类">枚举类</h2><p>枚举的构造器总是私有的，所有枚举类型都是抽象类Enum的子类，</p><ul><li>ordinal方法返回enum声明中枚举常量的位置，位置从0开始计数。</li><li>每个枚举类型都有一个静态的values方法，它将返回一个包含全部枚举值的数组。</li><li>toString，这个方法能够返回枚举常量名。</li></ul><h2 id="密封类">密封类</h2><p>acstract sealsd声明为密封类，控制哪些类可以继承它。</p><p>一个密封类允许的子类必须是可访问的，不能是嵌套在另一个类中的私有类，也不能是位于另一个包中的包可见的类。</p><blockquote><p>记录和枚举可以实现接口但不能扩展类</p></blockquote><h2 id="反射（待补充）">反射（待补充）</h2><p>能够分析类能力的程序称为<strong>反射</strong>。</p><h1>接口、lambda表达式和内部类</h1><p>接口（interface）技术，这种技术主要用来描述类具有什么功能，而并不给出每个功能的具体实现。</p><p>使用lambda表达式，可以用一种精巧而简洁的方式表示使用回调或变量行为的代码。</p><p>内部类（inner class）机制，内部类定义在另外一个类的内部，其中的方法可以访问包含它们的外部类的字段。内部类技术主要用于设计具有相互协作关系的类集合。</p><p>代理是一种非常专业的构造工具，它可以用来构建系统级的工具。</p><h2 id="接口">接口</h2><h3 id="接口概念">接口概念</h3>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javaee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于主题的潜在bug</title>
      <link href="/2024/07/29/anzhiyu/%E5%85%B3%E4%BA%8E%E4%B8%BB%E9%A2%98%E7%9A%84%E6%BD%9C%E5%9C%A8bug/"/>
      <url>/2024/07/29/anzhiyu/%E5%85%B3%E4%BA%8E%E4%B8%BB%E9%A2%98%E7%9A%84%E6%BD%9C%E5%9C%A8bug/</url>
      
        <content type="html"><![CDATA[<p>这个可真是太劲爆了，不知道是不是只有我一个人遇到了，原来用的Shokax主题可能因为我node的版本不太对，还有一个插件作者以放弃维护导致不兼容，主题传不上去。。。遂换主题，然后历经整整一个月，遇到各种配置的bug，换过wordpress，租了服务器，买了域名，发现不好用，主题也不是很貌美（自己改不了太多。。。）而后某天一行一行对代码终于找出这个主题的小问题，也是给还在用上了哈哈。写给新手，希望能有效解决，别轻易放弃这么美貌的主题~</p><h1>github服务器样式渲染错误问题</h1><p>先是用了和安知鱼很像的另一个主题，蓝色鹿头的，发现传上去about页不能居中显示（本地测试正常），找不到解决方法，遂入坑安知鱼，如果你想用同款的其他作者的主题建议谨慎考虑。</p><p>某次本地测试没问题，上传后发现github上的css样式丢失，尝试各种方法无果，一点点改，问题在这里：</p><p><img src="https://pic.imgdb.cn/item/66bdbae0d9c307b7e942f8c3.png" alt="问题"></p><p class='p red'>这里的url不能改，随便改成自己的会导致css渲染不出来，保持原样即可，切记切记！！！</p><h1>本地测试样式丢失问题</h1><p>在初版配置过程中头部会出现配置了图片但显示出来是很多雪花小人，但<code>hexo d</code>上去没问题，后来随着解决样式渲错误问题一并消失。</p><p><img src="https://pic.imgdb.cn/item/66bdbae0d9c307b7e942f8e8.png" alt=""></p><p>绿框部分可能存在不显示图片或者显示的都是同一张图片（经测试大概20张图片就解决这个问题），左边那部分的雪花小人你把URL改成默认就行。</p><p>但这个本地的样式和传上去的不影响，不修复也行，不知道为啥。</p><p>另外弱弱吐槽一句，现在博客对音乐方面的API支持这么弱吗？找API要跨越各种客户端搞半天我真的谢……</p>]]></content>
      
      
      <categories>
          
          <category> anzhiyu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> anzhiyu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB基本使用</title>
      <link href="/2024/07/14/shumo/%E3%80%8AMATLAB%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E3%80%8B%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/07/14/shumo/%E3%80%8AMATLAB%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E3%80%8B%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1>向量</h1><h2 id="基础运算">基础运算</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">0</span>:<span class="number">0.1</span>:<span class="number">50</span>; <span class="comment">%冒号法：0-50相信间隔值组成的向量x,间隔值为0.1</span></span><br><span class="line">x=[<span class="number">2</span> <span class="number">4</span> <span class="number">6</span> <span class="number">8</span>]<span class="comment">%行向量</span></span><br><span class="line">x=[<span class="number">1</span>;<span class="number">2</span>;<span class="number">3</span>]<span class="comment">%列向量</span></span><br><span class="line">x=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">10</span>,<span class="number">6</span>)<span class="comment">%linspace(first_value,last_value,number)平均取值</span></span><br><span class="line">x=<span class="built_in">logspace</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>)<span class="comment">%logspace(first_value,last_value,number)从10^first_value-10^last_value,包含number个</span></span><br><span class="line"><span class="comment">%向量元素引用</span></span><br><span class="line">x(n)<span class="comment">%x中第x个元素</span></span><br><span class="line">x(n1:n2)<span class="comment">%x中n1-n2的元素</span></span><br><span class="line">.* <span class="comment">%点积运算</span></span><br><span class="line"><span class="built_in">cross</span>()<span class="comment">%叉积运算cross(a,b)a,b必为长为3的向量</span></span><br><span class="line">poly2sym(p)<span class="comment">%多项式构造</span></span><br><span class="line">conv(p1,p2)<span class="comment">%卷积运算，乘法运算</span></span><br><span class="line">[k,r]=deconv(p1,p2)<span class="comment">%除法运算,k-商,r-余数</span></span><br><span class="line">poly(root)<span class="comment">%求以root为解的多项式系数</span></span><br><span class="line">polyder(p)<span class="comment">%求p的导数的系数</span></span><br></pre></td></tr></table></figure><h2 id="特殊变量">特殊变量</h2><h3 id="单元型变量">单元型变量</h3><h4 id="赋值语句定义">赋值语句定义</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A=[<span class="number">1</span> <span class="number">2</span>;<span class="number">3</span> <span class="number">4</span>];</span><br><span class="line">B=<span class="number">3</span>+<span class="number">2</span>*<span class="built_in">i</span>;</span><br><span class="line">C=<span class="string">&#x27;efg&#x27;</span>;</span><br><span class="line">D=<span class="number">2</span>;</span><br><span class="line">E=&#123;A,B;C,D&#125;</span><br></pre></td></tr></table></figure><h4 id="对单元语句逐个赋值——cell">对单元语句逐个赋值——cell()</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">E=cell(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">E&#123;<span class="number">1</span>,<span class="number">1</span>&#125;=[<span class="number">1</span>:<span class="number">4</span>];</span><br><span class="line">E&#123;<span class="number">1</span>,<span class="number">2</span>&#125;=<span class="number">3</span>+<span class="number">2</span>*<span class="built_in">i</span>;</span><br><span class="line">E&#123;<span class="number">1</span>,<span class="number">3</span>&#125;=<span class="number">2</span>;</span><br><span class="line">E</span><br><span class="line">E&#123;<span class="number">1</span>&#125;</span><br><span class="line">E(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><blockquote><p>cell(size(A)):生成与A相同形式的单元型置空矩阵</p></blockquote><h4 id="引用">引用</h4><ul><li>大括号显示单元具体的值</li><li>小括号显示单元压缩值</li></ul><h4 id="常用函数">常用函数</h4><p>1.celldisp()显示内容</p><p>2.cedllplot()用图形显示</p><h3 id="结构型变量">结构型变量</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mn=struct(<span class="string">&#x27;color&#x27;</span>,&#123;<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;black&#x27;</span>&#125;,<span class="string">&#x27;number&#x27;</span>,&#123;<span class="number">1</span>,<span class="number">2</span>&#125;)</span><br><span class="line">mn(<span class="number">1</span>)</span><br><span class="line">mn(<span class="number">2</span>) </span><br><span class="line">mn(<span class="number">2</span>).color</span><br></pre></td></tr></table></figure><h1>矩阵运算</h1><h2 id="矩阵生成">矩阵生成</h2><h3 id="利用M文件创建">利用M文件创建</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% sample.m</span></span><br><span class="line"><span class="comment">% 创建一个M文件，用以输入大规模矩阵</span></span><br><span class="line">gmatrix=[<span class="number">378</span> <span class="number">89</span> <span class="number">90</span>  <span class="number">83</span> <span class="number">382</span> <span class="number">92</span> <span class="number">29</span>;</span><br><span class="line"><span class="number">3829</span> <span class="number">32</span> <span class="number">9283</span> <span class="number">2938</span> <span class="number">378</span> <span class="number">839</span> <span class="number">29</span>;</span><br><span class="line"><span class="number">388</span> <span class="number">389</span> <span class="number">200</span> <span class="number">923</span> <span class="number">920</span> <span class="number">92</span> <span class="number">7478</span>;</span><br><span class="line"><span class="number">3829</span> <span class="number">892</span> <span class="number">66</span> <span class="number">89</span> <span class="number">90</span> <span class="number">56</span> <span class="number">8980</span>;</span><br><span class="line"><span class="number">7827</span> <span class="number">67</span> <span class="number">890</span> <span class="number">6557</span> <span class="number">45</span>  <span class="number">123</span> <span class="number">35</span>]</span><br></pre></td></tr></table></figure><h3 id="利用文本文件创建">利用文本文件创建</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load goods.txt</span><br><span class="line">goods</span><br></pre></td></tr></table></figure><h3 id="创建特殊矩阵">创建特殊矩阵</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">zeros</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">ones</span>(<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">ones</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">rand</span>(<span class="number">3</span>)<span class="comment">%3*3随机数矩阵，值在(0,1)之间</span></span><br><span class="line"><span class="built_in">rand</span>(<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">magic</span>(<span class="number">3</span>)<span class="comment">%3阶魔方矩阵</span></span><br><span class="line"><span class="built_in">hilb</span>(<span class="number">3</span>)<span class="comment">%3阶Hilbert矩阵</span></span><br><span class="line"><span class="built_in">invhilb</span>(<span class="number">3</span>)<span class="comment">%3阶Hilbert矩阵的逆</span></span><br></pre></td></tr></table></figure><h3 id="矩阵元素的运算">矩阵元素的运算</h3><h4 id="元素的修改">元素的修改</h4><ul><li>D=[A,B C],A- 原矩阵，B C-包含要扩充的元素，D-扩充后的矩阵</li><li>A=(m,),A的m行</li></ul><h4 id="矩阵的变维">矩阵的变维</h4><p>reshape(X,m,n)——将已知矩阵变成m行n列的矩阵</p><p>:法</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A=<span class="number">1</span>:<span class="number">12</span></span><br><span class="line">B=<span class="built_in">reshape</span>(A,<span class="number">2</span>,<span class="number">6</span>)</span><br><span class="line">C=<span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">4</span>); </span><br><span class="line">C(:)=A(:)</span><br></pre></td></tr></table></figure><h4 id="矩阵的变向">矩阵的变向</h4><ul><li>rot90(A):A逆时针旋转90°</li><li>rot90(A,k):A逆时针旋转90°*k</li><li>fliplr(X):X左右翻转</li><li>flipud(X):X上下翻转</li><li>flipdim(X,dim):dim=1——行翻转；dim=2——列翻转</li></ul><h4 id="矩阵的提取">矩阵的提取</h4><h2 id="矩阵数学运算">矩阵数学运算</h2><h3 id="加减法">加减法</h3><h3 id="乘法">乘法</h3><ul><li>叉乘：一行乘一列</li><li>点乘：相同位置的进行乘法运算</li></ul><h3 id="除法">除法</h3><ul><li>左除 B.\A：B的相应位置除A的相应位置</li><li>右除 B/A:A的相应位置除B的相应位置</li></ul><h2 id="基本运算">基本运算</h2><ul><li>幂函数 A.^2</li><li>逆 inv(X)</li><li>逆条件数 rcond(A)</li><li>逆的更新 updateinv(A)</li><li>2-范数 norm(A)</li><li>2-范数估计值 normest(A)</li><li>行列式 det(A)</li></ul><h2 id="矩阵分解">矩阵分解</h2><h3 id="楚列斯基分解-正定矩阵">楚列斯基分解(正定矩阵)</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">A=[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span>;<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>;<span class="number">1</span> <span class="number">3</span> <span class="number">6</span> <span class="number">10</span>;<span class="number">1</span> <span class="number">4</span> <span class="number">10</span> <span class="number">20</span>];<span class="comment">%创建正定矩阵A</span></span><br><span class="line">R=chol(A)<span class="comment">%求正定矩阵A的楚列斯基分解因子</span></span><br><span class="line"></span><br><span class="line">R =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">6</span>    <span class="number">10</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">4</span>    <span class="number">10</span>    <span class="number">20</span></span><br></pre></td></tr></table></figure><h3 id="LU分解-三角分解">LU分解(三角分解)</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">A=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>;<span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span>;<span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">1</span>;<span class="number">7</span> <span class="number">8</span> <span class="number">5</span> <span class="number">6</span>];</span><br><span class="line">[L,U]=lu(A)<span class="comment">%返回下三角矩阵L，上三角矩阵U</span></span><br><span class="line"></span><br><span class="line">L =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.1429</span>    <span class="number">1.0000</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.7143</span>    <span class="number">0.3333</span>    <span class="number">1.0000</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.2857</span>    <span class="number">0.8333</span>    <span class="number">0.2500</span>    <span class="number">1.0000</span></span><br><span class="line">    <span class="number">1.0000</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">U =</span><br><span class="line"></span><br><span class="line">    <span class="number">7.0000</span>    <span class="number">8.0000</span>    <span class="number">5.0000</span>    <span class="number">6.0000</span></span><br><span class="line">         <span class="number">0</span>    <span class="number">0.8571</span>    <span class="number">2.2857</span>    <span class="number">3.1429</span></span><br><span class="line">         <span class="number">0</span>         <span class="number">0</span>    <span class="number">2.6667</span>    <span class="number">2.6667</span></span><br><span class="line">         <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span>   <span class="number">-4.0000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">L =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.1429</span>    <span class="number">1.0000</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.7143</span>    <span class="number">0.3333</span>    <span class="number">1.0000</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.2857</span>    <span class="number">0.8333</span>    <span class="number">0.2500</span>    <span class="number">1.0000</span></span><br><span class="line"></span><br><span class="line">[L,U,P]=lu(A)<span class="comment">%返回下三角矩阵L，上三角矩阵U，置换矩阵P，PA=LU</span></span><br><span class="line">U =</span><br><span class="line"></span><br><span class="line">    <span class="number">7.0000</span>    <span class="number">8.0000</span>    <span class="number">5.0000</span>    <span class="number">6.0000</span></span><br><span class="line">         <span class="number">0</span>    <span class="number">0.8571</span>    <span class="number">2.2857</span>    <span class="number">3.1429</span></span><br><span class="line">         <span class="number">0</span>         <span class="number">0</span>    <span class="number">2.6667</span>    <span class="number">2.6667</span></span><br><span class="line">         <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span>   <span class="number">-4.0000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">P =</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="LDM-T和-LDL-T分解"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow><mi>L</mi><mi>D</mi><mi>M</mi></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">{LDM}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9146em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9146em;"><span style="top:-3.1362em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow><mi>L</mi><mi>D</mi><mi>L</mi></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">{LDL}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9146em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">L</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9146em;"><span style="top:-3.1362em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>分解</h3><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow><mi>L</mi><mi>D</mi><mi>M</mi></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">{LDM}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9146em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9146em;"><span style="top:-3.1362em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>分解</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[L,D,M]</span>=<span class="title">ldm</span><span class="params">(A)</span></span></span><br><span class="line"><span class="comment">%此函数用来求解矩阵A的LDM&#x27;分解</span></span><br><span class="line"><span class="comment">%其中L，M均为单位下三角矩阵，D为对角矩阵</span></span><br><span class="line">[m,n]=<span class="built_in">size</span>(A);</span><br><span class="line"><span class="keyword">if</span> m~=n</span><br><span class="line">    error(<span class="string">&#x27;输入矩阵不是方阵，请正确输入矩阵!&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">D(<span class="number">1</span>,<span class="number">1</span>)=A(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">    L(<span class="built_in">i</span>,<span class="built_in">i</span>)=<span class="number">1</span>;</span><br><span class="line">    M(<span class="built_in">i</span>,<span class="built_in">i</span>)=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">L(<span class="number">2</span>:n,<span class="number">1</span>)=A(<span class="number">2</span>:n,<span class="number">1</span>)/D(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">M(<span class="number">2</span>:n,<span class="number">1</span>)=A(<span class="number">1</span>,<span class="number">2</span>:n)&#x27;/D(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">2</span>:n</span><br><span class="line">    v(<span class="number">1</span>)=A(<span class="number">1</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:<span class="built_in">j</span></span><br><span class="line">        v(<span class="built_in">i</span>)=A(<span class="built_in">i</span>,<span class="built_in">j</span>)-L(<span class="built_in">i</span>,<span class="number">1</span>:<span class="built_in">i</span><span class="number">-1</span>)*v(<span class="number">1</span>:<span class="built_in">i</span><span class="number">-1</span>)&#x27;;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">j</span><span class="number">-1</span></span><br><span class="line">        M(<span class="built_in">j</span>,<span class="built_in">i</span>)=v(<span class="built_in">i</span>)/D(<span class="built_in">i</span>,<span class="built_in">i</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    D(<span class="built_in">j</span>,<span class="built_in">j</span>)=v(<span class="built_in">j</span>);</span><br><span class="line">    L(<span class="built_in">j</span>+<span class="number">1</span>:n,<span class="built_in">j</span>)=(A(<span class="built_in">j</span>+<span class="number">1</span>:n,<span class="built_in">j</span>)-L(<span class="built_in">j</span>+<span class="number">1</span>:n,<span class="number">1</span>:<span class="built_in">j</span><span class="number">-1</span>)*v(<span class="number">1</span>:<span class="built_in">j</span><span class="number">-1</span>)&#x27;)/v(<span class="built_in">j</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>;<span class="number">4</span> <span class="number">6</span> <span class="number">10</span> <span class="number">2</span>;<span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">3</span>];</span><br><span class="line">[L,D,M]=ldm(A)</span><br><span class="line">L*D*M&#x27;</span><br></pre></td></tr></table></figure><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow><mi>L</mi><mi>D</mi><mi>L</mi></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">{LDL}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9146em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">L</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9146em;"><span style="top:-3.1362em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>分解</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[L,D]</span>=<span class="title">ldlt</span><span class="params">(A)</span></span></span><br><span class="line"><span class="comment">%此函数用来求解实对称矩阵A的LDL&#x27;分解</span></span><br><span class="line"><span class="comment">%其中L为单位下三角矩阵，D为对角矩阵</span></span><br><span class="line"></span><br><span class="line">[m,n]=<span class="built_in">size</span>(A);</span><br><span class="line"><span class="keyword">if</span> m~=n | ~<span class="built_in">isequal</span>(A,A&#x27;)</span><br><span class="line">    error(<span class="string">&#x27;请正确输入矩阵!&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">D(<span class="number">1</span>,<span class="number">1</span>)=A(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">    L(<span class="built_in">i</span>,<span class="built_in">i</span>)=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">L(<span class="number">2</span>:n,<span class="number">1</span>)=A(<span class="number">2</span>:n,<span class="number">1</span>)/D(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">2</span>:n</span><br><span class="line">    v(<span class="number">1</span>)=A(<span class="number">1</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">j</span><span class="number">-1</span></span><br><span class="line">        v(<span class="built_in">i</span>)=L(<span class="built_in">j</span>,<span class="built_in">i</span>)*D(<span class="built_in">i</span>,<span class="built_in">i</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    v(<span class="built_in">j</span>)=A(<span class="built_in">j</span>,<span class="built_in">j</span>)-L(<span class="built_in">j</span>,<span class="number">1</span>:<span class="built_in">j</span><span class="number">-1</span>)*v(<span class="number">1</span>:<span class="built_in">j</span><span class="number">-1</span>)&#x27;;</span><br><span class="line">    D(<span class="built_in">j</span>,<span class="built_in">j</span>)=v(<span class="built_in">j</span>);</span><br><span class="line">    L(<span class="built_in">j</span>+<span class="number">1</span>:n,<span class="built_in">j</span>)=(A(<span class="built_in">j</span>+<span class="number">1</span>:n,<span class="built_in">j</span>)-L(<span class="built_in">j</span>+<span class="number">1</span>:n,<span class="number">1</span>:<span class="built_in">j</span><span class="number">-1</span>)*v(<span class="number">1</span>:<span class="built_in">j</span><span class="number">-1</span>)&#x27;)/v(<span class="built_in">j</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>;<span class="number">2</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span>;<span class="number">3</span> <span class="number">7</span> <span class="number">6</span> <span class="number">9</span>;<span class="number">4</span> <span class="number">8</span> <span class="number">9</span> <span class="number">1</span>];</span><br><span class="line">[L,D]=ldlt(A)</span><br><span class="line">L*D*L&#x27;</span><br></pre></td></tr></table></figure><h3 id="QR分解-正交三角形分解">QR分解(正交三角形分解)</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">A=<span class="built_in">rand</span>(<span class="number">4</span>)</span><br><span class="line">[Q,R] =qr(A)</span><br><span class="line">A =</span><br><span class="line">    <span class="number">0.4218</span>    <span class="number">0.6557</span>    <span class="number">0.6787</span>    <span class="number">0.6555</span></span><br><span class="line">    <span class="number">0.9157</span>    <span class="number">0.0357</span>    <span class="number">0.7577</span>    <span class="number">0.1712</span></span><br><span class="line">    <span class="number">0.7922</span>    <span class="number">0.8491</span>    <span class="number">0.7431</span>    <span class="number">0.7060</span></span><br><span class="line">    <span class="number">0.9595</span>    <span class="number">0.9340</span>    <span class="number">0.3922</span>    <span class="number">0.0318</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Q =</span><br><span class="line">   <span class="number">-0.2634</span>    <span class="number">0.4305</span>    <span class="number">0.6535</span>    <span class="number">0.5641</span></span><br><span class="line">   <span class="number">-0.5718</span>   <span class="number">-0.7879</span>    <span class="number">0.2092</span>    <span class="number">0.0919</span></span><br><span class="line">   <span class="number">-0.4947</span>    <span class="number">0.3338</span>    <span class="number">0.2413</span>   <span class="number">-0.7653</span></span><br><span class="line">   <span class="number">-0.5991</span>    <span class="number">0.2871</span>   <span class="number">-0.6862</span>    <span class="number">0.2962</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">R =</span><br><span class="line">   <span class="number">-1.6015</span>   <span class="number">-1.1728</span>   <span class="number">-1.2146</span>   <span class="number">-0.6389</span></span><br><span class="line">         <span class="number">0</span>    <span class="number">0.8058</span>    <span class="number">0.0559</span>    <span class="number">0.3921</span></span><br><span class="line">         <span class="number">0</span>         <span class="number">0</span>    <span class="number">0.5123</span>    <span class="number">0.6127</span></span><br><span class="line">         <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span>   <span class="number">-0.1454</span></span><br></pre></td></tr></table></figure><p>qrdelete &amp; qrinsert</p><h3 id="SVD分解">SVD分解</h3><p>[U,S,V]=svd(A)</p><p>m*m矩阵U，对角矩阵S，n*n矩阵V</p><h3 id="舒尔分解">舒尔分解</h3><h3 id="海森伯格分解">海森伯格分解</h3><h1>二维绘图</h1><h2 id="plot">plot</h2><ul><li>plot(x,y)</li><li>subplot(m,n,p) m*n个视图区域，当前为第p个(按行排列)</li><li>tiledlayout(m,n)+nexttile</li><li>tiledlayout(2,2) 布局为2*2的区域</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">10</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">y1=<span class="built_in">sin</span>(x);</span><br><span class="line">y2=<span class="built_in">cos</span>(x);</span><br><span class="line">y3=x;</span><br><span class="line">y4=x.^<span class="number">2</span>;<span class="comment">%输入以x为自变量的4个函数表达式</span></span><br><span class="line"><span class="built_in">hold</span> on<span class="comment">%在此画布上进行绘制</span></span><br><span class="line"><span class="built_in">plot</span>(x,y1,<span class="string">&#x27;r*&#x27;</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,y2,<span class="string">&#x27;kp&#x27;</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,y3,<span class="string">&#x27;bd&#x27;</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,y4,<span class="string">&#x27;m--&#x27;</span>)</span><br><span class="line"><span class="built_in">hold</span> off</span><br></pre></td></tr></table></figure><ul><li>fplot 一元函数图像</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="built_in">linspace</span>(<span class="number">0.01</span>,<span class="number">0.02</span>,<span class="number">50</span>);</span><br><span class="line">y=<span class="built_in">sin</span>(<span class="number">1.</span>/x);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>),<span class="built_in">plot</span>(x,y)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>),fplot(@(x)<span class="built_in">sin</span>(<span class="number">1.</span>/x),[<span class="number">0.01</span>,<span class="number">0.02</span>])</span><br><span class="line"><span class="comment">%(x)sin(1./x)是定义的匿名函数。</span></span><br></pre></td></tr></table></figure><h2 id="不同坐标系下的绘图命令">不同坐标系下的绘图命令</h2><h3 id="极坐标系——polarplot">极坐标系——polarplot</h3><ul><li>polarplot(thera,rho) thera——弧度，rho——半径</li><li>polarplot(thera,rho,LineSpace)  LineSpace——样式</li><li>pol2cart(t,r) 极坐标下的数据点换到直角坐标系下</li></ul><h3 id="半对数坐标系——semilogx-semilogy">半对数坐标系——semilogx/semilogy</h3><h3 id="双对数坐标系——loglog">双对数坐标系——loglog</h3><h3 id="双y轴坐标——yyaxis">双y轴坐标——yyaxis</h3><ul><li>yyaxis left</li><li>yyaxis right</li></ul><h2 id="图形窗口">图形窗口</h2><ul><li>finger——创建图形窗口</li><li>set(n)——返回图像属性名称和所有属性值</li><li>get(n)——返回图像属性名称和当前属性值</li></ul><h1>图形标注</h1><h2 id="属性设置">属性设置</h2><h3 id="坐标系与坐标轴">坐标系与坐标轴</h3><p>axis(xmin,xmax,ymin,ymax,zmin,zmax)——设置坐标系</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">t=<span class="number">0</span>:<span class="number">2</span>*<span class="built_in">pi</span>/<span class="number">99</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">x=<span class="number">1.15</span>*<span class="built_in">cos</span>(t);y=<span class="number">3.25</span>*<span class="built_in">sin</span>(t);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>),<span class="built_in">plot</span>(x,y),axis normal,grid on,</span><br><span class="line">title(<span class="string">&#x27;Normal and Grid on&#x27;</span>)<span class="comment">%grid on显示分割线</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>),<span class="built_in">plot</span>(x,y),axis equal,grid on,title(<span class="string">&#x27;Equal&#x27;</span>)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>),<span class="built_in">plot</span>(x,y),axis square,grid on,title(<span class="string">&#x27;Square&#x27;</span>)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>),<span class="built_in">plot</span>(x,y),axis image,box off,title(<span class="string">&#x27;Image and Box off&#x27;</span>)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>),<span class="built_in">plot</span>(x,y),axis image fill,box off</span><br><span class="line">title(<span class="string">&#x27;Image and Fill&#x27;</span>)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>),<span class="built_in">plot</span>(x,y),axis tight,box off,title(<span class="string">&#x27;Tight&#x27;</span>)</span><br></pre></td></tr></table></figure><p>fill(X,Y,C) X,Y——创建的图形，C——颜色</p><p>title——标题</p><p>x/ylabel——轴注释</p><p>text(x,y,string)——在图中(x,y)位置显示string</p><p>gtext——鼠标在任意位置进行标注</p><p>legend——添加图例</p><h2 id="特殊图形">特殊图形</h2><h3 id="统计图形">统计图形</h3><ul><li>条形图<ul><li>二维：bar——竖直条形图；barh——水平条形图</li><li>三维：bar3——竖直条形图；bar3h——水平条形图</li></ul></li><li>面积图：area(Y)</li><li>饼图：pie/pie3</li><li>柱状图<ul><li>直角坐标系：histogram</li><li>极坐标系：ploarhistogram</li></ul></li></ul><h3 id="离散数据图形">离散数据图形</h3><ul><li>误差棒图：errorbar(y,err)</li><li>火柴杆图：stem(Y)</li><li>阶梯图：stairs(Y)</li></ul><h3 id="向量图形">向量图形</h3><ul><li><p>罗盘图：compass(U,V)</p></li><li><p>羽毛图：feather(U,V)</p></li><li><p>箭头图：quiver(U,V)/quiver3</p><p>返回数值梯度：gradient(Z,2,2)</p></li></ul><h1>三维绘图</h1><h2 id="绘图命令">绘图命令</h2><ul><li><p>plot3/fplot3</p></li><li><p>三维网格命令</p><ul><li>mesh(X,Y,Z) 网线面</li><li>mesh(X,Y) x-y为底，y对应的值为z轴</li><li>meshc 加基本等高线</li><li>meshz 网格线与零平面连起来</li><li>fmesh(f)</li></ul></li><li><p>三维曲面命令</p><ul><li>surf<ul><li>surfc 加基本等高线</li><li>surfl 有亮度的曲面</li></ul></li><li>fsurf</li></ul></li><li><p>柱面与球面</p><ul><li><p>[X,Y,Z]=cylinder 返回对应函数的x,y,z坐标值</p><p>cylinder(2,6) 正六边形，半径为2的棱柱</p></li><li><p>sphere 生成球面</p><p>[X,Y,Z]=cylinder(n) 绘制n*n个面的球面，返回球面坐标</p></li></ul></li><li><p>三维图形等值线</p><ul><li><p>contour3(x,y,z)</p></li><li><p>contourf 填充颜色的二维等值图</p><p>colormap gray 应用灰度颜色图</p></li><li><p>C=contourc(Z) 计算等值线矩阵C</p></li><li><p>clabel 在二维等值图中添加高度标签</p></li><li><p>fcontour 符号函数等值线图</p></li></ul></li></ul><h2 id="三维图形修饰处理">三维图形修饰处理</h2><h3 id="视角处理">视角处理</h3><p>view(az,el) az——方位角，el——仰角</p><h3 id="颜色处理">颜色处理</h3><ul><li><p>brighten(beat) 明暗处理0&lt;beat&lt;1</p></li><li><p>caxi([cmin,cmax]) 色轴刻度</p><p>colorbar 显示垂直色轴</p></li><li><p>shading 颜色渲染设置</p></li><li><p>colormap(M) 将M作为当前窗口颜色映像</p></li></ul><h3 id="光照处理">光照处理</h3><ul><li>surfl 带光照模式</li><li>light/lightangle 确定光源位置</li></ul><h2 id="图像处理">图像处理</h2><ul><li>imread 图像读入</li><li>imwrite 图像写入</li><li>image/imageesc/imshow 图像显示</li><li>imfinfo 图像信息查询</li></ul><h1>程序设计</h1><h2 id="M文件">M文件</h2><ul><li><p>命令文件</p></li><li><p>函数文件</p><p>function开始</p></li></ul><h2 id="程序设计">程序设计</h2><ul><li>程序结构<ul><li>顺序结构</li><li>循环结构</li><li>分支结构</li></ul></li><li>流程控制<ul><li>break</li><li>pause(10) 暂停10秒</li><li>continue</li><li>return</li><li>echo on 显示执行过程中每一行语句的执行过程</li><li>waring(massage) 不影响正常运行</li><li>error(massage) 终止运行</li></ul></li><li>交互式输入<ul><li>input(massage)</li><li>keyboard 暂停程序，使用键盘调用命令</li><li>menu</li></ul></li><li>程序调试<ul><li>系统提示</li><li>断点</li></ul></li></ul><h2 id="函数句柄">函数句柄</h2><p>1.创建</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fun_handle=@save <span class="comment">%创建函数save()的句柄</span></span><br><span class="line"></span><br><span class="line">fun_handle =</span><br><span class="line">  包含以下值的 function_handle:</span><br><span class="line">    @save</span><br></pre></td></tr></table></figure><p>2.调用——feval()</p><h1>矩阵分析</h1><h2 id="特征值与特征向量">特征值与特征向量</h2><ul><li><p>[V,D]=eig(A,balanceOption) 求矩阵A的特征值和特征向量</p><p>balanceOption:默认平衡处理</p></li><li><p>[T,B]=balance(A) 求相似变换矩阵T，平衡矩阵B</p><p>[S,P,B]=balance(A) 缩放向量S，置换向量P</p></li><li><p>c=ploy(A) 求特征多项式</p></li><li><p>r=roots© 求特征多项式的根</p></li><li><p>eigs 部分特征值</p></li><li><p>eig(A,B) 求广义特征值</p></li></ul><h2 id="矩阵对角化">矩阵对角化</h2><p>判断矩阵能否对角化</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span>=<span class="title">isdiag1</span><span class="params">(A)</span></span></span><br><span class="line"><span class="comment">%该函数用来判断矩阵A是否可以对角化</span></span><br><span class="line"><span class="comment">%若返回值为1，则说明A可以对角化；若返回值为0，则说明A不可以对角化</span></span><br><span class="line"></span><br><span class="line">[m,n]=<span class="built_in">size</span>(A); <span class="comment">%求矩阵A的阶数</span></span><br><span class="line"><span class="keyword">if</span> m~=n<span class="comment">%若A不是方阵，则肯定不能对角化</span></span><br><span class="line">    y=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    [V,D]=eig(A);</span><br><span class="line">    <span class="keyword">if</span> rank(V)==n <span class="comment">%判断A的特征向量是否线性无关</span></span><br><span class="line">        y=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        y=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>矩阵对角化</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span><span class="params">[P,D]</span>=<span class="title">reduce_diag</span><span class="params">(A)</span></span></span><br><span class="line"><span class="keyword">if</span> ~isdiag(A)</span><br><span class="line">error(<span class="string">&#x27;该矩阵不能对角化&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;将下面的矩阵P乘以任意非零整数所得矩阵仍满足inv(P)*P*A=D&#x27;</span>);</span><br><span class="line">[P,D]=eig(A);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="若尔当标准型">若尔当标准型</h2><p>[P,J]=jordam(A) 若尔当标准形矩阵J，相似变换矩阵P</p><h2 id="矩阵的反射与旋转变换">矩阵的反射与旋转变换</h2><h3 id="豪斯霍尔德反射波变换">豪斯霍尔德反射波变换</h3><p>避免上溢求豪斯霍尔德向量函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[v,beta]</span>=<span class="title">house</span><span class="params">(x)</span></span></span><br><span class="line"><span class="comment">%此函数用来计算满足v(1)=1的v和beta使得P=I-beta*v*v&#x27;</span></span><br><span class="line"><span class="comment">%是正交矩阵且P*x=norm(x)*e1</span></span><br><span class="line"></span><br><span class="line">n=<span class="built_in">length</span>(x);</span><br><span class="line"><span class="keyword">if</span> n==<span class="number">1</span></span><br><span class="line">    error(<span class="string">&#x27;请正确输入向量!&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    sigma=x(<span class="number">2</span>:n)&#x27;*x(<span class="number">2</span>:n);</span><br><span class="line">    v=[<span class="number">1</span>;x(<span class="number">2</span>:n)];</span><br><span class="line">    <span class="keyword">if</span> sigma==<span class="number">0</span></span><br><span class="line">        <span class="built_in">beta</span>=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        mu=<span class="built_in">sqrt</span>(x(<span class="number">1</span>)^<span class="number">2</span>+sigma);</span><br><span class="line">        <span class="keyword">if</span> x(<span class="number">1</span>)&lt;=<span class="number">0</span></span><br><span class="line">            v(<span class="number">1</span>)=x(<span class="number">1</span>)-mu;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            v(<span class="number">1</span>)=-sigma/(x(<span class="number">1</span>)+mu);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="built_in">beta</span>=<span class="number">2</span>*v(<span class="number">1</span>)^<span class="number">2</span>/(sigma+v(<span class="number">1</span>)^<span class="number">2</span>);</span><br><span class="line">        v=v/v(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>豪斯霍尔德矩阵求法</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]&#x27;;</span><br><span class="line">[v,<span class="built_in">beta</span>]=house(x)</span><br><span class="line">P=<span class="built_in">eye</span>(<span class="number">3</span>)-<span class="built_in">beta</span>*v*v&#x27; </span><br><span class="line">a=norm(x)</span><br><span class="line">P*x </span><br></pre></td></tr></table></figure><h3 id="吉文斯旋转变换">吉文斯旋转变换</h3><p>[G,y]=planerot(x) y=Gx且y(2)=0,x——二维列向量</p><h1>符号运算</h1><h2 id="符号与数值">符号与数值</h2><ul><li>eval(expression) 符号-&gt;数值</li><li>subs(s) 数值-&gt;符号</li><li>digits(D) 有效数字个数为D</li><li>vpa(x) 算数精度</li><li>B=sparse(A) 将A转换为稀疏格式</li><li>B=sparse(A) 创建A的伴随矩阵</li></ul><h2 id="符号矩阵">符号矩阵</h2><h3 id="创建">创建</h3><ul><li><p>直接输入</p></li><li><p>sym(‘x’) sym(‘a’,n)</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">x = sym(<span class="string">&#x27;x&#x27;</span>); </span><br><span class="line">y = sym(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">a=[x+y,x;y,y+<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">a = sym(<span class="string">&#x27;a&#x27;</span>, [<span class="number">1</span> <span class="number">4</span>])<span class="comment">%用自动生成的元素创建符号向量</span></span><br><span class="line">a = sym(<span class="string">&#x27;x_%d&#x27;</span>, [<span class="number">1</span> <span class="number">4</span>])</span><br><span class="line"> </span><br><span class="line">a(<span class="number">1</span>)</span><br><span class="line">a(<span class="number">2</span>:<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">a = </span><br><span class="line">[a1, a2, a3, a4]</span><br><span class="line">a =</span><br><span class="line">[x_1, x_2, x_3, x_4]</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">x_1</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">[x_2, x_3]</span><br></pre></td></tr></table></figure></li><li><p>数值矩阵-&gt;符号矩阵</p><p>B=sym(A)</p></li></ul><p>计算不同精度的pi值</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pi</span><span class="comment">%默认精度</span></span><br><span class="line">vpa(<span class="built_in">pi</span>)<span class="comment">%使用可变精度，32位数字</span></span><br><span class="line"></span><br><span class="line">digits(<span class="number">10</span>)<span class="comment">%将vpa精度设成10</span></span><br><span class="line">vpa(<span class="built_in">pi</span>)<span class="comment">%10位有效数字</span></span><br><span class="line"> </span><br><span class="line">r = sym(<span class="built_in">pi</span>)</span><br><span class="line">f = sym(<span class="built_in">pi</span>,<span class="string">&#x27;f&#x27;</span>)<span class="comment">%返回精确的有理数 </span></span><br><span class="line">d = sym(<span class="built_in">pi</span>,<span class="string">&#x27;d&#x27;</span>)<span class="comment">%使用十进制模式将浮点数转换为符号数字</span></span><br><span class="line">e = sym(<span class="built_in">pi</span>,<span class="string">&#x27;e&#x27;</span>)<span class="comment">%使用误差估值模式将浮点数转换为符号数字</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =<span class="number">3.1416</span></span><br><span class="line"><span class="built_in">ans</span> =<span class="number">3.141592654</span> </span><br><span class="line"><span class="built_in">ans</span> =<span class="number">3.141592654</span></span><br><span class="line">r =<span class="built_in">pi</span></span><br><span class="line">f =<span class="number">884279719003555</span>/<span class="number">281474976710656</span></span><br><span class="line">d =<span class="number">3.141592654</span></span><br><span class="line">e =<span class="built_in">pi</span> - (<span class="number">198</span>*<span class="built_in">eps</span>)/<span class="number">359</span></span><br></pre></td></tr></table></figure><h3 id="其他运算">其他运算</h3><ul><li>转置<ul><li>B=A.’</li><li>B=transpose(A)</li></ul></li><li>行列式运算 d=det(A)</li><li>逆 inv(A)</li><li>求秩 rank(A)</li><li>特征值，特征向量 eig()</li><li>奇异值 svd()</li><li>若尔当标准型 jordan()</li></ul><h3 id="符号多项式简化">符号多项式简化</h3><ul><li><p>因式分解 factor(x) 返回x的所有不可约因子</p></li><li><p>符号矩阵的展开 expand(S)</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">syms x y</span><br><span class="line">expand((x+<span class="number">3</span>)^<span class="number">4</span>)</span><br><span class="line">expand(<span class="built_in">cos</span>(x+y))</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> = x^<span class="number">4</span> + <span class="number">12</span>*x^<span class="number">3</span> + <span class="number">54</span>*x^<span class="number">2</span> + <span class="number">108</span>*x + <span class="number">81</span></span><br><span class="line"><span class="built_in">ans</span> = <span class="built_in">cos</span>(x)*<span class="built_in">cos</span>(y) - <span class="built_in">sin</span>(x)*<span class="built_in">sin</span>(y)</span><br></pre></td></tr></table></figure></li><li><p>符号简化 simplify</p></li><li><p>分式通分 [n,d]=numden(A) 表达式分子n,分母d</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">syms x y</span><br><span class="line">[n,d]=numden(x/y-y/x+x.^<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">n = x^<span class="number">3</span>*y + x^<span class="number">2</span> - y^<span class="number">2</span></span><br><span class="line">d = x*y</span><br></pre></td></tr></table></figure></li><li><p>“秦九韶型”重写 horner(p)</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">syms x</span><br><span class="line">horner(x^<span class="number">4</span><span class="number">-3</span>*x^<span class="number">2</span>+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =x^<span class="number">2</span>*(x^<span class="number">2</span> - <span class="number">3</span>) + <span class="number">1</span></span><br></pre></td></tr></table></figure></li></ul><h1>数列与极限</h1><h2 id="数列">数列</h2><h3 id="数列求和">数列求和</h3><ul><li>sum(A,dim)<ul><li>向量——所有元素和 dim=1：不求和；dim=2：求和</li><li>矩阵——每一列元素和 dim=1：列求和，行显示；dim=2：行求和，列显示</li><li>sum(·，nanflag) nanflag=includenan——计算NaN,nanflag=omitnan——计算NaN,</li></ul></li><li>nansum(A) 忽略NaN累计求和函数</li><li>cumsum(A) 求此元素之前的元素和函数</li><li>cumtrapz(Y) 求梯形累计和函数(积分)</li></ul><h3 id="数列求积">数列求积</h3><ul><li><p>元素连续相乘函数 B=prod(A)</p><p>矩阵：按列向量的所有元素的积</p></li><li><p>求累计积函数 B=cumprod(A)</p></li><li><p>阶乘函数 f=factorial(n)</p></li><li><p>伽马函数(非整数的阶乘) gamma()</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">factorial</span>(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">   <span class="number">720</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">gamma</span>(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">   <span class="number">120</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="number">6</span>*<span class="built_in">gamma</span>(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">   <span class="number">720</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="极限和导数">极限和导数</h2><h3 id="极限">极限</h3><ul><li><p>x-&gt;0</p><p>limit(f)</p></li><li><p>x-&gt;∞</p><p>limit(f,inf,’right’) right:右极限</p></li></ul><h3 id="导数">导数</h3><ul><li>diff(f,n) 求函数f的n阶导数</li><li>diff(f,x) 求函数f对x的导数</li></ul><h2 id="级数求和">级数求和</h2><ul><li>有限项级数求和 symsum(f,k,a,b) 计算级数f关于指数k从a到b的有限项和</li><li>无穷级数求和 将b改为inf</li></ul><h1>积分</h1><h2 id="积分">积分</h2><ul><li>定积分和广义积分 int(f,x,a,b)</li><li>不定积分 int(f,x)</li></ul><h2 id="多重积分">多重积分</h2><ul><li><p>二重积分 intergral2(fun,xmin,xmax,ymin,ymax)</p><p>fzero(‘2*x-0.5*x’,0) 求f1-f2=0，即f1,f2的交点</p></li></ul><h2 id="泰勒展开">泰勒展开</h2><p>taylor(f,m,a)</p><p>taylor(f,’order’,5) 五阶麦克劳林型近似展开</p><h2 id="傅里叶展开">傅里叶展开</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[a0,an,bn]</span>=<span class="title">Fourierzpi</span><span class="params">(f)</span></span></span><br><span class="line">syms x n</span><br><span class="line">a0=int(f,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>)/<span class="built_in">pi</span>;</span><br><span class="line">an=int(f*<span class="built_in">cos</span>(n*x),<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>)/<span class="built_in">pi</span>;</span><br><span class="line">bn=int(f*<span class="built_in">sin</span>(n*x),<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>)/<span class="built_in">pi</span>;</span><br></pre></td></tr></table></figure><h2 id="积分变换">积分变换</h2><ul><li>傅里叶积分变换 fourier(f,u,v)</li><li>傅里叶逆变换 ifourier(F,v,u)</li><li>快速傅里叶变换</li><li>拉普拉斯变换 laplace(F,w,z)</li><li>拉普拉斯逆变换 ilaplace(L,x,y)</li></ul><h1>方程求解</h1><h2 id="线性方程组求解">线性方程组求解</h2><h3 id="判断线性方程组的解">判断线性方程组的解</h3><p>Z=null(A) 求矩阵A的核空间矩阵Z，Z的列向量是Ax=0的基础解系，满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Z</mi><mi>T</mi></msup><mi>Z</mi><mo>=</mo><mi>I</mi></mrow><annotation encoding="application/x-tex">Z^TZ=I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></p><p>Z=null(A,’r’) Z的列向量是Ax=0的有理基，Z不满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Z</mi><mi>T</mi></msup><mi>Z</mi><mo>=</mo><mi>I</mi></mrow><annotation encoding="application/x-tex">Z^TZ=I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></p><blockquote><p>判断线性方程组Ax=b的解的存在性</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span>=<span class="title">isexist</span><span class="params">(A,b)</span></span></span><br><span class="line"><span class="comment">%该函数用来判断线性方程组Ax=b的解的存在性</span></span><br><span class="line"><span class="comment">%若方程组无解则返回0，若有唯一解则返回1，若有无穷多解则返回Inf</span></span><br><span class="line">[m,n]=<span class="built_in">size</span>(A);</span><br><span class="line">[mb,nb]=<span class="built_in">size</span>(b);</span><br><span class="line"><span class="keyword">if</span> m~=mb</span><br><span class="line">    error(<span class="string">&#x27;输入有误!&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">r=rank(A);</span><br><span class="line">s=rank([A,b]);</span><br><span class="line"><span class="keyword">if</span> r==s&amp;r==n</span><br><span class="line">    y=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">elseif</span> r==s&amp;r&lt;n</span><br><span class="line">    y=Inf;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    y=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="利用矩阵的逆-伪逆-与除法求解">利用矩阵的逆(伪逆)与除法求解</h3><p>Ax=b</p><ul><li>为恰定方程组且A是非奇异的,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>b</mi></mrow><annotation encoding="application/x-tex">x=A^{-1}b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">b</span></span></span></span></li><li>不为为恰定方程组或A奇异，x=A\b</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">format <span class="built_in">rat</span></span><br><span class="line">A=[<span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">1</span> <span class="number">-2</span> <span class="number">-2</span>;<span class="number">1</span> <span class="number">3</span> <span class="number">0</span> <span class="number">-2</span>];</span><br><span class="line">b=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]&#x27;;</span><br><span class="line">x0=pinv(A)*b <span class="comment">%利用伪逆求一个特解</span></span><br><span class="line">Z=null(A,<span class="string">&#x27;r&#x27;</span>)<span class="comment">%求基础解系</span></span><br><span class="line">format</span><br><span class="line"></span><br><span class="line">x0 =</span><br><span class="line">      <span class="number">13</span>/<span class="number">77</span>    </span><br><span class="line">      <span class="number">46</span>/<span class="number">77</span>    </span><br><span class="line">      <span class="number">-2</span>/<span class="number">11</span>    </span><br><span class="line">     <span class="number">-40</span>/<span class="number">77</span>    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Z =</span><br><span class="line">      <span class="number">-6</span>             <span class="number">-4</span>       </span><br><span class="line">       <span class="number">2</span>              <span class="number">2</span>       </span><br><span class="line">       <span class="number">1</span>              <span class="number">0</span>       </span><br><span class="line">       <span class="number">0</span>              <span class="number">1</span>   </span><br></pre></td></tr></table></figure><h3 id="利用行阶梯型求解">利用行阶梯型求解</h3><p>只适用于恰定方程组，且系数矩阵非奇异</p><p>矩阵-&gt;行阶梯型 [R,jb]=rref(A) jb:非零主元列</p><h3 id="利用矩阵分解法求解">利用矩阵分解法求解</h3><ul><li><p>LU分解法</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span>=<span class="title">solvebyLU</span><span class="params">(A,b)</span></span></span><br><span class="line"><span class="comment">%该函数利用LU分解法求线性方程组Ax=b的解</span></span><br><span class="line">flag=isexist(A,b);<span class="comment">%调用函数isexist()判断方程组解的情况</span></span><br><span class="line"><span class="keyword">if</span> flag==<span class="number">0</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;该方程组无解!&#x27;</span>);</span><br><span class="line">    x=[];</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    r=rank(A);</span><br><span class="line">    [m,n]=<span class="built_in">size</span>(A);</span><br><span class="line">    [L,U,P]=lu(A);</span><br><span class="line">    b=P*b;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">%解Ly=b</span></span><br><span class="line">    y(<span class="number">1</span>)=b(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> m&gt;<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:m</span><br><span class="line">            y(<span class="built_in">i</span>)=b(<span class="built_in">i</span>)-L(<span class="built_in">i</span>,<span class="number">1</span>:<span class="built_in">i</span><span class="number">-1</span>)*y(<span class="number">1</span>:<span class="built_in">i</span><span class="number">-1</span>)&#x27;;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    y=y&#x27;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">%解Ux=y得原方程组的一个特解</span></span><br><span class="line">    x0(r)=y(r)/U(r,r);</span><br><span class="line">    <span class="keyword">if</span> r&gt;<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=r<span class="number">-1</span>:<span class="number">-1</span>:<span class="number">1</span></span><br><span class="line">            x0(<span class="built_in">i</span>)=(y(<span class="built_in">i</span>)-U(<span class="built_in">i</span>,<span class="built_in">i</span>+<span class="number">1</span>:r)*x0(<span class="built_in">i</span>+<span class="number">1</span>:r)&#x27;)/U(<span class="built_in">i</span>,<span class="built_in">i</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    x0=x0&#x27;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> flag==<span class="number">1</span><span class="comment">%若方程组有唯一解</span></span><br><span class="line">        x=x0;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span><span class="comment">%若方程组有无穷多解</span></span><br><span class="line">        format <span class="built_in">rat</span>;</span><br><span class="line">        Z=null(A,<span class="string">&#x27;r&#x27;</span>);<span class="comment">%求出对应齐次方程组的基础解系</span></span><br><span class="line">        [mZ,nZ]=<span class="built_in">size</span>(Z);</span><br><span class="line">        x0(r+<span class="number">1</span>:n)=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:nZ</span><br><span class="line">            t=sym(char([<span class="number">107</span> <span class="number">48</span>+<span class="built_in">i</span>]));</span><br><span class="line">            k(<span class="built_in">i</span>)=t;<span class="comment">%取k=[k1,k2,…]; </span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        x=x0;         </span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:nZ          </span><br><span class="line">            x=x+k(<span class="built_in">i</span>)*Z(:,<span class="built_in">i</span>); <span class="comment">%将方程组的通解表示为特解加对应齐次通解形式</span></span><br><span class="line">        <span class="keyword">end</span>        </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">format<span class="comment">%恢复数据显示格式</span></span><br></pre></td></tr></table></figure></li><li><p>QR分解法</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span>=<span class="title">solvebyQR</span><span class="params">(A,b)</span></span></span><br><span class="line"><span class="comment">%该函数利用QR分解法求线性方程组Ax=b的解</span></span><br><span class="line">flag=isexist(A,b);<span class="comment">%调用函数isexist()判断方程组解的情况</span></span><br><span class="line"><span class="keyword">if</span> flag==<span class="number">0</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;该方程组无解!&#x27;</span>);</span><br><span class="line">    x=[];</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    r=rank(A);</span><br><span class="line">    [m,n]=<span class="built_in">size</span>(A);</span><br><span class="line">    [Q,R]=qr(A);</span><br><span class="line">    b=Q&#x27;*b;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">%解Rx=b得原方程组的一个特解</span></span><br><span class="line">    x0(r)=b(r)/R(r,r);</span><br><span class="line">    <span class="keyword">if</span> r&gt;<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=r<span class="number">-1</span>:<span class="number">-1</span>:<span class="number">1</span></span><br><span class="line">            x0(<span class="built_in">i</span>)=(b(<span class="built_in">i</span>)-R(<span class="built_in">i</span>,<span class="built_in">i</span>+<span class="number">1</span>:r)*x0(<span class="built_in">i</span>+<span class="number">1</span>:r)&#x27;)/R(<span class="built_in">i</span>,<span class="built_in">i</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    x0=x0&#x27;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> flag==<span class="number">1</span> <span class="comment">%若方程组有唯一解</span></span><br><span class="line">        x=x0;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span><span class="comment">%若方程组有无穷多解</span></span><br><span class="line">        format <span class="built_in">rat</span>;</span><br><span class="line">        Z=null(A,<span class="string">&#x27;r&#x27;</span>);<span class="comment">%求出对应齐次方程组的基础解系</span></span><br><span class="line">        [mZ,nZ]=<span class="built_in">size</span>(Z);</span><br><span class="line">        x0(r+<span class="number">1</span>:n)=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:nZ</span><br><span class="line">            t=sym(char([<span class="number">107</span> <span class="number">48</span>+<span class="built_in">i</span>]));</span><br><span class="line">            k(<span class="built_in">i</span>)=t;<span class="comment">%取k=[k1,…,kr]; </span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        x=x0;         </span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:nZ          </span><br><span class="line">            x=x+k(<span class="built_in">i</span>)*Z(:,<span class="built_in">i</span>);<span class="comment">%将方程组的通解表示为特解加对应齐次通解形式</span></span><br><span class="line">        <span class="keyword">end</span>        </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">format<span class="comment">%恢复数据显示格式</span></span><br></pre></td></tr></table></figure></li><li><p>楚列斯基分解法</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span>=<span class="title">solvebyCHOL</span><span class="params">(A,b)</span></span></span><br><span class="line"><span class="comment">%该函数利用楚列斯基分解法求线性方程组Ax=b的解</span></span><br><span class="line">lambda=eig(A);</span><br><span class="line"><span class="keyword">if</span> lambda&gt;<span class="built_in">eps</span>&amp;<span class="built_in">isequal</span>(A,A&#x27;)</span><br><span class="line">    [n,n]=<span class="built_in">size</span>(A);</span><br><span class="line">    R=chol(A);</span><br><span class="line">    <span class="comment">%解R&#x27;y=b</span></span><br><span class="line">    y(<span class="number">1</span>)=b(<span class="number">1</span>)/R(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> n&gt;<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:n</span><br><span class="line">            y(<span class="built_in">i</span>)=(b(<span class="built_in">i</span>)-R(<span class="number">1</span>:<span class="built_in">i</span><span class="number">-1</span>,<span class="built_in">i</span>)&#x27;*y(<span class="number">1</span>:<span class="built_in">i</span><span class="number">-1</span>)&#x27;)/R(<span class="built_in">i</span>,<span class="built_in">i</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">%解Rx=y</span></span><br><span class="line">    x(n)=y(n)/R(n,n);</span><br><span class="line">    <span class="keyword">if</span> n&gt;<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=n<span class="number">-1</span>:<span class="number">-1</span>:<span class="number">1</span></span><br><span class="line">            x(<span class="built_in">i</span>)=(y(<span class="built_in">i</span>)-R(<span class="built_in">i</span>,<span class="built_in">i</span>+<span class="number">1</span>:n)*x(<span class="built_in">i</span>+<span class="number">1</span>:n)&#x27;)/R(<span class="built_in">i</span>,<span class="built_in">i</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    x=x&#x27;;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    x=[];</span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;该方法只适用于对称正定的系数矩阵!&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span>  </span><br></pre></td></tr></table></figure></li></ul><h3 id="非负最小二乘解">非负最小二乘解</h3><p>lsqnonneg(A,b)</p><h2 id="方程与方程组的优化解">方程与方程组的优化解</h2><ul><li>非线性方程基本函数<ul><li>x=fzero(fun,x0)</li><li>x=fzero(fun,x0,options)</li><li>x=fzero(problem)</li><li>[x,fval,exitflag,output]=fzero(···)</li></ul></li><li>非线性方程组基本函数<ul><li>x=fslove(fun,x0)</li><li>x=fslove(fun,x0,options)</li><li>x=fslove(problem)</li><li>[x,fval,exitflag,output,jacobian]=fslove(···)</li></ul></li></ul><h1>微分方程</h1><h2 id="微分方程">微分方程</h2><p>S=desolve(eqn,cond,Name,Value)</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">syms x(t) y(t)</span><br><span class="line">eqns=[diff(x,t)==y,diff(y,t)==-x];</span><br><span class="line">S=dsolve(eqns)</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;微分方程的解&#x27;</span>,blanks(<span class="number">2</span>),<span class="string">&#x27;x&#x27;</span>,blanks(<span class="number">22</span>),<span class="string">&#x27;y&#x27;</span>])</span><br><span class="line"><span class="built_in">disp</span>([S.x,S.y])<span class="comment">%显示方程的解</span></span><br></pre></td></tr></table></figure><h2 id="常微分方程的数值解法">常微分方程的数值解法</h2><h3 id="欧拉方法">欧拉方法</h3><p>根据欧拉公式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>y</mi><mi>n</mi></msub><mo>+</mo><mi>h</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_{n+1}=y_n+hf(x_n,y_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[x,y]</span>=<span class="title">euler</span><span class="params">(f,x0,y0,xf,h)</span></span></span><br><span class="line">n=<span class="built_in">fix</span>((xf-x0)/h);</span><br><span class="line">y(<span class="number">1</span>)=y0;</span><br><span class="line">x(<span class="number">1</span>)=x0;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">    x(<span class="built_in">i</span>+<span class="number">1</span>)=x0+<span class="built_in">i</span>*h;</span><br><span class="line">    y(<span class="built_in">i</span>+<span class="number">1</span>)=y(<span class="built_in">i</span>)+h*feval(f,x(<span class="built_in">i</span>),y(<span class="built_in">i</span>));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>改进的欧拉公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>y</mi><mi>p</mi></msub><mo>=</mo><msub><mi>y</mi><mi>n</mi></msub><mo>+</mo><mi>h</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>y</mi><mi>c</mi></msub><mo>=</mo><msub><mi>y</mi><mi>n</mi></msub><mo>+</mo><mi>h</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>y</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><msub><mi>y</mi><mi>p</mi></msub><mo>+</mo><msub><mi>y</mi><mi>c</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;y_p=y_n+hf(x_n,y_n) \\&amp;y_c=y_n+hf(x_{n+1},y_n) \\&amp;y_{n+1}=\frac{1}{2}(y_{p}+y_{c})\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.3074em;vertical-align:-2.4037em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9037em;"><span style="top:-5.3852em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"></span></span><span style="top:-3.8852em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"></span></span><span style="top:-1.9037em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4037em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9037em;"><span style="top:-5.3852em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.8852em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.9037em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4037em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[x,y]</span>=<span class="title">adeuler</span><span class="params">(f,x0,y0,xf,h)</span></span></span><br><span class="line">n=<span class="built_in">fix</span>((xf-x0)/h);</span><br><span class="line">x(<span class="number">1</span>)=x0;</span><br><span class="line">y(<span class="number">1</span>)=y0;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">    x(<span class="built_in">i</span>+<span class="number">1</span>)=x0+h*<span class="built_in">i</span>;</span><br><span class="line">    yp=y(<span class="built_in">i</span>)+h*feval(f,x(<span class="built_in">i</span>),y(<span class="built_in">i</span>));</span><br><span class="line">    yc=y(<span class="built_in">i</span>)+h*feval(f,x(<span class="built_in">i</span>+<span class="number">1</span>),yp);</span><br><span class="line">    y(<span class="built_in">i</span>+<span class="number">1</span>)=(yp+yc)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="龙格-库塔方法">龙格-库塔方法</h3><ul><li><p>非刚性</p><ul><li>ode23 二、三阶R-K函数</li><li>ode45 四、五阶R-K函数</li><li>ode113</li></ul></li><li><p>刚性</p><ul><li>ode15s 多步法</li><li>ode23s 单步法</li><li>ode23t 难度适中</li><li>ode23tb 较难</li></ul></li><li><p>完全隐式 ode15i</p></li></ul><h2 id="偏微分方程-PDE">偏微分方程 PDE</h2><p>[PDE工具箱使用](<a href="https://blog.csdn.net/lusongno1/article/details/84097005">matlab的PDE工具箱的简单使用_matlab pde-CSDN博客</a>)</p><h3 id="区域设置及网格化">区域设置及网格化</h3><ul><li><p>创建偏微分方程定义的区域 文件名：pdegeom</p><ul><li><p>ne=pdegeom</p><p>ne——几何区域边界的线段数</p></li><li><p>d=pdegeom(bs)</p><p>d——一个区域边界数据的矩阵</p></li><li><p>[x,y]=pdegeom(bs,s)</p><p>bs——指定的边界线段</p><p>s——相应线段弧长的近似值</p></li></ul></li><li><p>网格化</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">model = createpde;</span><br><span class="line">geometryFromEdges(model,@cardg);<span class="comment">%根据自定义函数的几何形状创建模型对象的几何图形</span></span><br><span class="line">mesh=generateMesh(model);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>),pdemesh(model)</span><br><span class="line">title(<span class="string">&#x27;初始网格图&#x27;</span>)</span><br><span class="line">mesh=generateMesh(model,<span class="string">&#x27;Hmax&#x27;</span>,<span class="number">2</span>);  </span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>),pdemesh(model)</span><br><span class="line">title(<span class="string">&#x27;修改网格边界最大值&#x27;</span>)</span><br><span class="line">mesh=generateMesh(model,<span class="string">&#x27;Hmin&#x27;</span>,<span class="number">2</span>); </span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>),pdemesh(model),title(<span class="string">&#x27;修改网格边界最小值&#x27;</span>) </span><br><span class="line">mesh=generateMesh(model,<span class="string">&#x27;GeometricOrder&#x27;</span>,<span class="string">&#x27;linear&#x27;</span>,<span class="string">&#x27;Hgrad&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>),pdemesh(model)</span><br><span class="line">title(<span class="string">&#x27;修改网格几何秩序和增长率&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="边界条件设置">边界条件设置</h3><p>M文件名：pdebound</p><p>调用格式：[q,g,h,r]=pdebound(p,e,u,time)</p><p>e——边界</p><p>工具箱自带文件squareb3,m 区域为单位正方形</p><h3 id="PDE函数求解">PDE函数求解</h3><p>result=solvepde(model) 稳态</p><p>result=solvepde(model,tlist) 时间相关</p><blockquote><p>lplsfc.m</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">model = createpde(); </span><br><span class="line">geometryFromEdges(model,@cirsg);<span class="comment">%cirsg自带的</span></span><br><span class="line">specifyCoefficients(model,<span class="string">&#x27;m&#x27;</span>,<span class="number">0</span>,<span class="string">&#x27;d&#x27;</span>,<span class="number">0</span>,<span class="string">&#x27;c&#x27;</span>,<span class="number">0</span>,<span class="string">&#x27;a&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;f&#x27;</span>,<span class="number">0</span>);</span><br><span class="line"><span class="comment">%方程系数</span></span><br><span class="line">rfun=@(location,state) </span><br><span class="line"><span class="comment">%初始条件</span></span><br><span class="line"><span class="built_in">cos</span>(<span class="number">2</span>/<span class="number">3</span>*<span class="built_in">atan2</span>(location.y,location.x));</span><br><span class="line">applyBoundaryCondition(model,<span class="string">&#x27;dirichlet&#x27;</span>,<span class="string">&#x27;Edge&#x27;</span>,...</span><br><span class="line"><span class="number">1</span>:model.Geometry.NumEdges,<span class="string">&#x27;r&#x27;</span>,rfun,<span class="string">&#x27;h&#x27;</span>,<span class="number">1</span>);<span class="comment">%在所有边缘设置狄利克雷条件</span></span><br><span class="line">generateMesh(model,<span class="string">&#x27;Hmax&#x27;</span>,<span class="number">0.25</span>); <span class="comment">%设置最大边界尺寸，生成模型网络</span></span><br><span class="line">results=solvepde(model);</span><br><span class="line">u=results.NodalSolution;</span><br><span class="line">pdeplot(model,<span class="string">&#x27;XYData&#x27;</span>,u,<span class="string">&#x27;ZData&#x27;</span>,u(:,<span class="number">1</span>))</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">pdemesh(model,u)</span><br><span class="line">title(<span class="string">&#x27;解的网格表面图&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>rcd.m</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">model = createpde();  </span><br><span class="line">geometryFromEdges(model,@squareg);</span><br><span class="line"><span class="comment">%自带的正方形区域</span></span><br><span class="line">applyBoundaryCondition(model,<span class="string">&#x27;dirichlet&#x27;</span>,...</span><br><span class="line"><span class="string">&#x27;Face&#x27;</span>,<span class="number">1</span>:model.Geometry.NumFaces,<span class="string">&#x27;u&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="comment">%在所有面应用dirichlet边界条件</span></span><br><span class="line">specifyCoefficients(model,<span class="string">&#x27;m&#x27;</span>,<span class="number">0</span>,<span class="string">&#x27;d&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;c&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;a&#x27;</span>,<span class="number">0</span>,<span class="string">&#x27;f&#x27;</span>,<span class="number">0</span>);</span><br><span class="line"><span class="comment">%边界条件</span></span><br><span class="line">u0=@(location) location.x.^<span class="number">2</span>+location.y.^<span class="number">2</span>&lt;<span class="number">0.4</span>;</span><br><span class="line"><span class="comment">%定义初始条件</span></span><br><span class="line">setInitialConditions(model,u0);<span class="comment">%设置初始条件</span></span><br><span class="line">generateMesh(model,<span class="string">&#x27;Hmax&#x27;</span>,<span class="number">0.25</span>); </span><br><span class="line">tlist = <span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">0.1</span>,<span class="number">20</span>); <span class="comment">%时间列表</span></span><br><span class="line">results = solvepde(model,tlist);</span><br><span class="line">u=results.NodalSolution;</span><br><span class="line">pdeplot(model,<span class="string">&#x27;XYData&#x27;</span>,u,<span class="string">&#x27;ZData&#x27;</span>,u(:,<span class="number">1</span>))<span class="comment">%表面图</span></span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">pdemesh(model,u)<span class="comment">%网格图</span></span><br><span class="line">title(<span class="string">&#x27;解的网格表面图&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="解特征值方程">解特征值方程</h3><p>result=slovepdeeig(model,evr) evr——特征值范围</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">model = createpde();</span><br><span class="line">geometryFromEdges(model,@lshapeg);</span><br><span class="line"><span class="comment">%lshapeg为自带的L形区域文件</span></span><br><span class="line">Mesh=generateMesh(model); <span class="comment">%生成模型网络</span></span><br><span class="line">pdegplot(model,<span class="string">&#x27;FaceLabels&#x27;</span>,<span class="string">&#x27;on&#x27;</span>,<span class="string">&#x27;FaceAlpha&#x27;</span>,<span class="number">0.5</span>)</span><br><span class="line">applyBoundaryCondition(model,<span class="string">&#x27;dirichlet&#x27;</span>,<span class="string">&#x27;Edge&#x27;</span>,...</span><br><span class="line"><span class="number">1</span>:model.Geometry.NumEdges,<span class="string">&#x27;u&#x27;</span>,<span class="number">0</span>);</span><br><span class="line">specifyCoefficients(model,<span class="string">&#x27;m&#x27;</span>,<span class="number">0</span>,<span class="string">&#x27;d&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;c&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;a&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;f&#x27;</span>,<span class="number">0</span>); </span><br><span class="line">evr = [-Inf,<span class="number">100</span>]; <span class="comment">%指定区间</span></span><br><span class="line">generateMesh(model,<span class="string">&#x27;Hmax&#x27;</span>,<span class="number">0.25</span>);</span><br><span class="line">results = solvepdeeig(model,evr); <span class="comment">%求解特征值</span></span><br><span class="line"></span><br><span class="line">              Basis= <span class="number">10</span>,  Time=   <span class="number">0.00</span>,  New conv eig=  <span class="number">0</span></span><br><span class="line">              Basis= <span class="number">30</span>,  Time=   <span class="number">0.00</span>,  New conv eig=  <span class="number">6</span></span><br><span class="line">              Basis= <span class="number">50</span>,  Time=   <span class="number">0.00</span>,  New conv eig= <span class="number">17</span></span><br><span class="line">              Basis= <span class="number">70</span>,  Time=   <span class="number">0.02</span>,  New conv eig= <span class="number">35</span></span><br><span class="line">End of sweep: Basis= <span class="number">70</span>,  Time=   <span class="number">0.02</span>,  New conv eig= <span class="number">33</span></span><br><span class="line">              Basis= <span class="number">43</span>,  Time=   <span class="number">0.02</span>,  New conv eig=  <span class="number">0</span></span><br><span class="line">              Basis= <span class="number">63</span>,  Time=   <span class="number">0.02</span>,  New conv eig=  <span class="number">1</span></span><br><span class="line">End of sweep: Basis= <span class="number">63</span>,  Time=   <span class="number">0.02</span>,  New conv eig=  <span class="number">1</span></span><br><span class="line"></span><br><span class="line">V = results.Eigenvectors; <span class="comment">%特征值向量</span></span><br><span class="line">pdeplot(model,<span class="string">&#x27;XYData&#x27;</span>,V,<span class="string">&#x27;ZData&#x27;</span>,V(:,<span class="number">1</span>)); </span><br><span class="line">title(<span class="string">&#x27;第一特征模态图&#x27;</span>) </span><br><span class="line"><span class="built_in">figure</span></span><br><span class="line">pdeplot(model,<span class="string">&#x27;XYData&#x27;</span>,V,<span class="string">&#x27;ZData&#x27;</span>,V(:,<span class="number">16</span>));</span><br><span class="line">title(<span class="string">&#x27;第十六特征模态图&#x27;</span>)</span><br></pre></td></tr></table></figure><h1>数据可视化分析</h1><h2 id="样本空间">样本空间</h2><p>概率：p(A)</p><h2 id="数据可视化">数据可视化</h2><h3 id="离散情况">离散情况</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">25</span>  <span class="number">28</span>  <span class="number">26</span>  <span class="number">26</span>  <span class="number">29</span>  <span class="number">22</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">30</span>  <span class="number">28</span>  <span class="number">29</span>];</span><br><span class="line">y=[<span class="number">28</span>  <span class="number">23</span>  <span class="number">35</span>  <span class="number">21</span>  <span class="number">24</span>  <span class="number">32</span>  <span class="number">35</span>  <span class="number">34</span>  <span class="number">31</span>  <span class="number">30</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">27</span>]; </span><br><span class="line"> <span class="built_in">plot</span>(x,y,<span class="string">&#x27;r^&#x27;</span>) </span><br><span class="line">title(<span class="string">&#x27;尼古丁含量测试情况&#x27;</span>)</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><h3 id="连续情况">连续情况</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">25</span>  <span class="number">28</span>  <span class="number">26</span>  <span class="number">26</span>  <span class="number">29</span>  <span class="number">22</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">30</span>  <span class="number">28</span>  <span class="number">29</span>];</span><br><span class="line">y=[<span class="number">28</span>  <span class="number">23</span>  <span class="number">35</span>  <span class="number">21</span>  <span class="number">24</span>  <span class="number">32</span>  <span class="number">35</span>  <span class="number">34</span>  <span class="number">31</span>  <span class="number">30</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">27</span>]; </span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;r^&#x27;</span>) </span><br><span class="line">title(<span class="string">&#x27;尼古丁含量测试情况&#x27;</span>)</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><h2 id="正交试验分析">正交试验分析</h2><h3 id="极差分析-直观分析法">极差分析(直观分析法)</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[result,sum0]</span>=<span class="title">zjjc</span><span class="params">(s,opt)</span></span></span><br><span class="line"><span class="comment">%对正交试验进行极差分析，s是输入矩阵，opt是最优参数，其中</span></span><br><span class="line"><span class="comment">%若opt=1，表示最优取最大，若opt=2，表示最优取最小</span></span><br><span class="line"><span class="comment">%s=[1     1  1    1   857;</span></span><br><span class="line"><span class="comment">%    1     2   2   2   951;</span></span><br><span class="line"><span class="comment">%    1     3   3   3   909;</span></span><br><span class="line"><span class="comment">%    2     1   2   3   878;</span></span><br><span class="line"><span class="comment">%    2     2   3   1   973;</span></span><br><span class="line"><span class="comment">%    2     3   1   2   899;</span></span><br><span class="line"><span class="comment">%    3     1   3   2   803;</span></span><br><span class="line"><span class="comment">%    3     2   1   3  1030;</span></span><br><span class="line"><span class="comment">%    3     3   2   1   927];</span></span><br><span class="line"><span class="comment">%s的最后一列是各个正交组合的试验测量值，前几列是正交表</span></span><br><span class="line"> [m,n]=<span class="built_in">size</span>(s);</span><br><span class="line">  p=<span class="built_in">max</span>(s(:,<span class="number">1</span>));<span class="comment">%取水平数</span></span><br><span class="line">  q=n<span class="number">-1</span>;<span class="comment">%取列数</span></span><br><span class="line">  sum0=<span class="built_in">zeros</span>(p,q);</span><br><span class="line">  <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:q</span><br><span class="line">    <span class="keyword">for</span> k=<span class="number">1</span>:m </span><br><span class="line">         <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:p</span><br><span class="line">          <span class="keyword">if</span>(s(k,<span class="built_in">i</span>)==<span class="built_in">j</span>)</span><br><span class="line">              sum0(<span class="built_in">j</span>,<span class="built_in">i</span>)=sum0(<span class="built_in">j</span>,<span class="built_in">i</span>)+s(k,n);<span class="comment">%求和</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line">maxdiff=<span class="built_in">max</span>(sum0)-<span class="built_in">min</span>(sum0);<span class="comment">%求极差</span></span><br><span class="line">result(<span class="number">1</span>,:)=maxdiff;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">1</span>)</span><br><span class="line">    maxsum0=<span class="built_in">max</span>(sum0);</span><br><span class="line">    <span class="keyword">for</span> kk=<span class="number">1</span>:q</span><br><span class="line">        modmax=<span class="built_in">mod</span>(<span class="built_in">find</span>(sum0==maxsum0(kk)),p);<span class="comment">%求最大水平</span></span><br><span class="line">        <span class="keyword">if</span> modmax==<span class="number">0</span></span><br><span class="line">            modmax=p;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        result(<span class="number">2</span>,kk)=(modmax);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   minsum0=<span class="built_in">min</span>(sum0);</span><br><span class="line">    <span class="keyword">for</span> kk=<span class="number">1</span>:q</span><br><span class="line">        modmin=<span class="built_in">mod</span>(<span class="built_in">find</span>(sum0==minsum0(kk)),p);<span class="comment">%求最小水平</span></span><br><span class="line">        <span class="keyword">if</span> modmin==<span class="number">0</span></span><br><span class="line">            modmin=p;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        result(<span class="number">2</span>,kk)=(modmin);</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">s=[  <span class="number">1</span>     <span class="number">1</span>  <span class="number">1</span>    <span class="number">1</span>  <span class="number">857</span>;</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>   <span class="number">2</span>   <span class="number">2</span>  <span class="number">951</span>;</span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>   <span class="number">3</span>   <span class="number">3</span>  <span class="number">909</span>;</span><br><span class="line">     <span class="number">2</span>     <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>  <span class="number">878</span>;</span><br><span class="line">     <span class="number">2</span>     <span class="number">2</span>   <span class="number">3</span>   <span class="number">1</span>  <span class="number">973</span>;</span><br><span class="line">     <span class="number">2</span>     <span class="number">3</span>   <span class="number">1</span>   <span class="number">2</span>  <span class="number">899</span>;</span><br><span class="line">     <span class="number">3</span>     <span class="number">1</span>   <span class="number">3</span>   <span class="number">2</span>  <span class="number">803</span>;</span><br><span class="line">     <span class="number">3</span>     <span class="number">2</span>   <span class="number">1</span>   <span class="number">3</span>  <span class="number">1030</span>;</span><br><span class="line">     <span class="number">3</span>     <span class="number">3</span>   <span class="number">2</span>   <span class="number">1</span>   <span class="number">927</span>]; </span><br><span class="line"></span><br><span class="line">[result,sum0]=zjjc(s,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">result =</span><br><span class="line">    <span class="number">43</span>   <span class="number">416</span>   <span class="number">101</span>   <span class="number">164</span><span class="comment">%每个因素的极差</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">2</span>     <span class="number">1</span>     <span class="number">3</span><span class="comment">%相应因素的最优生产条件</span></span><br><span class="line">sum0 =<span class="comment">%相应因素每个水平的数据和</span></span><br><span class="line">        <span class="number">2717</span>        <span class="number">2538</span>        <span class="number">2786</span>        <span class="number">2757</span></span><br><span class="line">        <span class="number">2750</span>        <span class="number">2954</span>        <span class="number">2756</span>        <span class="number">2653</span></span><br><span class="line">        <span class="number">2760</span>        <span class="number">2735</span>        <span class="number">2685</span>        <span class="number">2817</span></span><br></pre></td></tr></table></figure><h3 id="方差分析">方差分析</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[result,error,errorDim]</span>=<span class="title">zjfc</span><span class="params">(s,opt)</span></span></span><br><span class="line"><span class="comment">%对正交试验进行方差分析，s是输入矩阵，opt是空列参数向量，给出s中是空白列的列序号</span></span><br><span class="line"><span class="comment">%s=[1  1   1   1  1 1 1 83.4;</span></span><br><span class="line"><span class="comment">%    1  1   1   2  2 2 2    84;</span></span><br><span class="line"><span class="comment">%    1  2   2   1  1 2 2 87.3;</span></span><br><span class="line"><span class="comment">%    1  2   2   2  2 1 1 84.8;</span></span><br><span class="line"><span class="comment">%    2  1   2   1  2 1 2 87.3;</span></span><br><span class="line"><span class="comment">%    2  1   2   2  1 2 1    88;</span></span><br><span class="line"><span class="comment">%    2  2   1   1  2 2 1 92.3;</span></span><br><span class="line"><span class="comment">%    2  2   1   2  1 1 2 90.4;</span></span><br><span class="line"><span class="comment">%];</span></span><br><span class="line"><span class="comment">%opt=[3,7];</span></span><br><span class="line"><span class="comment">%s的最后一列是各个正交组合的试验测量值，前几列是正交表</span></span><br><span class="line">[m,n]=<span class="built_in">size</span>(s);</span><br><span class="line"> p=<span class="built_in">max</span>(s(:,<span class="number">1</span>)); <span class="comment">%取水平数</span></span><br><span class="line"> q=n<span class="number">-1</span>;<span class="comment">%取列数</span></span><br><span class="line"> sum0=<span class="built_in">zeros</span>(p,q);</span><br><span class="line"> <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:q</span><br><span class="line">    <span class="keyword">for</span> k=<span class="number">1</span>:m </span><br><span class="line">         <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:p</span><br><span class="line">          <span class="keyword">if</span>(s(k,<span class="built_in">i</span>)==<span class="built_in">j</span>)</span><br><span class="line">              sum0(<span class="built_in">j</span>,<span class="built_in">i</span>)=sum0(<span class="built_in">j</span>,<span class="built_in">i</span>)+s(k,n);<span class="comment">%求和</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line">totalsum=sum(s(:,n));</span><br><span class="line">ss=sum0.*sum0;</span><br><span class="line">levelsum=m/p; <span class="comment">%水平重复数</span></span><br><span class="line">ss=sum(ss./levelsum)-totalsum^<span class="number">2</span>/m; <span class="comment">%每一列的S</span></span><br><span class="line">ssError=sum(ss(opt));</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:q</span><br><span class="line">    f(<span class="built_in">i</span>)=p<span class="number">-1</span>;    <span class="comment">%自由度</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fError=sum(f(opt));  <span class="comment">%误差自由度</span></span><br><span class="line">ssbar=ss./f;</span><br><span class="line">Errorbar=ssError/fError;</span><br><span class="line">index=<span class="built_in">find</span>(ssbar&lt;Errorbar);</span><br><span class="line">index1=<span class="built_in">find</span>(index==opt);</span><br><span class="line">index(index==index(index1))=[];<span class="comment">%剔除重复</span></span><br><span class="line">ssErrorNew=ssError+sum(ss(index));  <span class="comment">%并入误差</span></span><br><span class="line">fErrorNew=fError+sum(f(index));  <span class="comment">%新误差自由度</span></span><br><span class="line">F=(ss./f)/(ssErrorNew./fErrorNew);   <span class="comment">%F值</span></span><br><span class="line">errorDim=[opt,index];</span><br><span class="line"> errorDim=<span class="built_in">sort</span>(errorDim);<span class="comment">%误差列的序号</span></span><br><span class="line">result=[ss&#x27;,f&#x27;,ssbar&#x27;,F&#x27;];</span><br><span class="line">error=[ssError,fError;ssErrorNew,fErrorNew];</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">s=[ <span class="number">51</span> <span class="number">25</span> <span class="number">18</span> <span class="number">32</span>;</span><br><span class="line"><span class="number">40</span> <span class="number">23</span> <span class="number">13</span> <span class="number">35</span>;</span><br><span class="line"><span class="number">43</span> <span class="number">24</span> <span class="number">12</span> <span class="number">34</span>;</span><br><span class="line"><span class="number">48</span> <span class="number">26</span> <span class="number">16</span> <span class="number">30</span>;</span><br><span class="line"><span class="number">35</span> <span class="number">30</span> <span class="number">11</span> <span class="number">35</span>;</span><br><span class="line"><span class="number">32</span> <span class="number">31</span> <span class="number">10</span> <span class="number">37</span>];</span><br><span class="line"></span><br><span class="line">[result,sum0]=zjfc(s,<span class="number">1</span>)<span class="comment">%第1列为空白列以考查试验误差进行方差分析</span></span><br><span class="line"></span><br><span class="line">result =<span class="comment">%方差分析结果</span></span><br><span class="line">   <span class="number">1.0e+04</span> *</span><br><span class="line">    <span class="number">5.1773</span>    <span class="number">0.0050</span>    <span class="number">0.1035</span>    <span class="number">0.0001</span></span><br><span class="line">    <span class="number">5.1773</span>    <span class="number">0.0050</span>    <span class="number">0.1035</span>    <span class="number">0.0001</span></span><br><span class="line">    <span class="number">5.1773</span>    <span class="number">0.0050</span>    <span class="number">0.1035</span>    <span class="number">0.0001</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sum0 =<span class="comment">%误差</span></span><br><span class="line">   <span class="number">1.0e+04</span> *</span><br><span class="line">    <span class="number">5.1773</span>    <span class="number">0.0050</span></span><br><span class="line">    <span class="number">5.1773</span>    <span class="number">0.0050</span></span><br></pre></td></tr></table></figure><h1>回归分析和方差分析</h1><h2 id="回归分析">回归分析</h2><h3 id="一元线性回归">一元线性回归</h3><p>ployfit()</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">82</span> <span class="number">93</span> <span class="number">105</span> <span class="number">130</span> <span class="number">144</span> <span class="number">150</span> <span class="number">160</span> <span class="number">180</span> <span class="number">270</span> <span class="number">300</span> <span class="number">400</span>]; </span><br><span class="line">y=[<span class="number">75</span> <span class="number">85</span> <span class="number">92</span> <span class="number">105</span> <span class="number">120</span> <span class="number">130</span> <span class="number">145</span> <span class="number">156</span> <span class="number">200</span> <span class="number">200</span> <span class="number">240</span>];</span><br><span class="line">[p,s]=polyfit(x,y,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">x0=[<span class="built_in">min</span>(x):<span class="number">1</span>:<span class="built_in">max</span>(x)];<span class="comment">%重新定义取值点，间隔为1</span></span><br><span class="line">y0=p(<span class="number">1</span>)*x0+p(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">hold</span> on </span><br><span class="line"><span class="built_in">plot</span>(x0,y0)</span><br><span class="line"></span><br><span class="line">p =<span class="comment">%多项式的系数向量</span></span><br><span class="line">    <span class="number">0.5269</span>   <span class="number">44.2547</span></span><br><span class="line">s = <span class="comment">%用于获取误差估计值的结构体</span></span><br><span class="line">  包含以下字段的 struct:</span><br><span class="line">        R: [<span class="number">2</span>×<span class="number">2</span> double]</span><br><span class="line">       df: <span class="number">9</span></span><br><span class="line">    normr: <span class="number">36.8058</span></span><br></pre></td></tr></table></figure><h3 id="多元线性回归">多元线性回归</h3><p>[b,bint,r,rint,stats]=regress(y,X,alpha) 因变量y,自变量X</p><p>b——对回归系数的最小二乘估计</p><p>bint——回归系数b的95%置信度的置信区间</p><p>r——残差</p><p>rint——r的置信区间</p><p>stats——检验统计量</p><blockquote><p>假设回归方程有常数项，计算stats时，X应该包含一个全1的列</p></blockquote><p>alpha——指定的置信水平</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">y=[<span class="number">11.9</span> <span class="number">22.8</span> <span class="number">18.7</span> <span class="number">20.1</span> <span class="number">12.9</span> <span class="number">21.7</span> <span class="number">27.1</span> <span class="number">25.4</span> <span class="number">21.3</span> <span class="number">19.3</span> <span class="number">25.4</span> <span class="number">27.2</span> <span class="number">11.7</span><span class="number">17.8</span> <span class="number">12.8</span> <span class="number">23.9</span> <span class="number">22.6</span> <span class="number">25.4</span> <span class="number">14.8</span> <span class="number">21.1</span>];</span><br><span class="line"><span class="comment">%测量数据</span></span><br><span class="line">x=[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span>; <span class="number">19.5</span> <span class="number">24.7</span> <span class="number">30.7</span> <span class="number">29.8</span><span class="number">19.1</span><span class="number">25.6</span><span class="number">31.4</span><span class="number">27.9</span><span class="number">22.1</span><span class="number">25.5</span> <span class="number">31.1</span><span class="number">30.4</span><span class="number">18.7</span><span class="number">19.7</span><span class="number">14.6</span><span class="number">29.5</span><span class="number">27.7</span><span class="number">30.2</span><span class="number">22.7</span><span class="number">25.2</span>;  <span class="number">43.1</span><span class="number">49.8</span><span class="number">51.9</span><span class="number">54.3</span><span class="number">42.2</span><span class="number">53.9</span><span class="number">58.6</span><span class="number">52.1</span><span class="number">49.9</span><span class="number">53.5</span> <span class="number">56.6</span><span class="number">56.7</span><span class="number">46.5</span><span class="number">44.2</span><span class="number">42.7</span><span class="number">54.4</span><span class="number">55.3</span><span class="number">58.6</span><span class="number">48.2</span><span class="number">51</span>; <span class="number">29.1</span>  <span class="number">28.2</span><span class="number">37</span><span class="number">31.1</span><span class="number">30.9</span><span class="number">23.7</span><span class="number">27.6</span><span class="number">30.6</span><span class="number">23.2</span><span class="number">24.8</span> <span class="number">30</span><span class="number">28.3</span><span class="number">23</span><span class="number">28.6</span><span class="number">21.3</span><span class="number">30.1</span><span class="number">25.6</span><span class="number">24.6</span><span class="number">27.1</span><span class="number">27.5</span> ]; <span class="comment">%构建分析数据矩阵</span></span><br><span class="line">[b,bint,r,rint,stats]=regress(y&#x27;,x&#x27;)</span><br><span class="line"></span><br><span class="line">b =<span class="comment">%系数估计值</span></span><br><span class="line">  <span class="number">107.8763</span></span><br><span class="line">    <span class="number">4.0599</span></span><br><span class="line">   <span class="number">-2.6200</span></span><br><span class="line">   <span class="number">-2.0402</span></span><br><span class="line">bint =<span class="comment">%系数估计值的置信边界的上界和下界</span></span><br><span class="line"> <span class="number">-100.7196</span>  <span class="number">316.4721</span></span><br><span class="line">   <span class="number">-2.2526</span>   <span class="number">10.3723</span></span><br><span class="line">   <span class="number">-8.0200</span>    <span class="number">2.7801</span></span><br><span class="line">   <span class="number">-5.3790</span>    <span class="number">1.2986</span></span><br><span class="line">r =<span class="comment">%残差</span></span><br><span class="line">   <span class="number">-2.8541</span></span><br><span class="line">    <span class="number">2.6523</span></span><br><span class="line">   <span class="number">-2.3515</span></span><br><span class="line">   <span class="number">-3.0467</span></span><br><span class="line">    <span class="number">1.0842</span></span><br><span class="line">   <span class="number">-0.5405</span></span><br><span class="line">    <span class="number">1.5828</span></span><br><span class="line">    <span class="number">3.1830</span></span><br><span class="line">    <span class="number">1.7691</span></span><br><span class="line">   <span class="number">-1.3383</span></span><br><span class="line">    <span class="number">0.7572</span></span><br><span class="line">    <span class="number">2.1928</span></span><br><span class="line">   <span class="number">-3.3433</span></span><br><span class="line">    <span class="number">4.0958</span></span><br><span class="line">    <span class="number">0.9780</span></span><br><span class="line">    <span class="number">0.1931</span></span><br><span class="line">   <span class="number">-0.6220</span></span><br><span class="line">   <span class="number">-1.3659</span></span><br><span class="line">   <span class="number">-3.6641</span></span><br><span class="line">    <span class="number">0.6382</span></span><br><span class="line">rint =<span class="comment">%用于诊断离群值的区间</span></span><br><span class="line">   <span class="number">-7.0569</span>    <span class="number">1.3488</span></span><br><span class="line">   <span class="number">-2.1810</span>    <span class="number">7.4856</span></span><br><span class="line">   <span class="number">-6.2623</span>    <span class="number">1.5593</span></span><br><span class="line">   <span class="number">-7.9378</span>    <span class="number">1.8444</span></span><br><span class="line">   <span class="number">-3.2626</span>    <span class="number">5.4310</span></span><br><span class="line">   <span class="number">-5.6469</span>    <span class="number">4.5659</span></span><br><span class="line">   <span class="number">-3.1194</span>    <span class="number">6.2849</span></span><br><span class="line">   <span class="number">-1.5201</span>    <span class="number">7.8862</span></span><br><span class="line">   <span class="number">-3.0732</span>    <span class="number">6.6113</span></span><br><span class="line">   <span class="number">-6.0888</span>    <span class="number">3.4121</span></span><br><span class="line">   <span class="number">-4.3244</span>    <span class="number">5.8388</span></span><br><span class="line">   <span class="number">-2.8440</span>    <span class="number">7.2297</span></span><br><span class="line">   <span class="number">-7.8489</span>    <span class="number">1.1623</span></span><br><span class="line">   <span class="number">-0.3044</span>    <span class="number">8.4960</span></span><br><span class="line">   <span class="number">-3.4144</span>    <span class="number">5.3703</span></span><br><span class="line">   <span class="number">-4.9673</span>    <span class="number">5.3534</span></span><br><span class="line">   <span class="number">-5.7883</span>    <span class="number">4.5444</span></span><br><span class="line">   <span class="number">-6.1250</span>    <span class="number">3.3932</span></span><br><span class="line">   <span class="number">-8.3703</span>    <span class="number">1.0420</span></span><br><span class="line">   <span class="number">-4.6541</span>    <span class="number">5.9305</span></span><br><span class="line">stats =<span class="comment">%模型统计量</span></span><br><span class="line">    <span class="number">0.7993</span>   <span class="number">21.2383</span>    <span class="number">0.0000</span>    <span class="number">6.2145</span></span><br></pre></td></tr></table></figure><h3 id="部分最小二乘回归">部分最小二乘回归</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[beta,VIP]</span>= <span class="title">pls</span><span class="params">(X,Y)</span></span></span><br><span class="line">[n,p]=<span class="built_in">size</span>(X);</span><br><span class="line">[n,q]=<span class="built_in">size</span>(Y); </span><br><span class="line">meanX=<span class="built_in">mean</span>(X);<span class="comment">%均值</span></span><br><span class="line">varX=var(X);<span class="comment">%方差</span></span><br><span class="line">meanY=<span class="built_in">mean</span>(Y);<span class="comment">%均值</span></span><br><span class="line">varY=var(Y);<span class="comment">%方差 </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">%%%%数据标准化过程</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:p      </span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">    X0(<span class="built_in">j</span>,<span class="built_in">i</span>)=(X(<span class="built_in">j</span>,<span class="built_in">i</span>)-meanX(<span class="built_in">i</span>))/((varX(<span class="built_in">i</span>))^<span class="number">0.5</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:q</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">    Y0(<span class="built_in">j</span>,<span class="built_in">i</span>)=(Y(<span class="built_in">j</span>,<span class="built_in">i</span>)-meanY(<span class="built_in">i</span>))/((varY(<span class="built_in">i</span>))^<span class="number">0.5</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"> </span><br><span class="line">[omega(:,<span class="number">1</span>),t(:,<span class="number">1</span>),pp(:,<span class="number">1</span>),XX(:,:,<span class="number">1</span>),rr(:,<span class="number">1</span>),YY(:,:,<span class="number">1</span>)]=plsfactor(X0,Y0);</span><br><span class="line">[omega(:,<span class="number">2</span>),t(:,<span class="number">2</span>),pp(:,<span class="number">2</span>),XX(:,:,<span class="number">2</span>),rr(:,<span class="number">2</span>),YY(:,:,<span class="number">2</span>)]=plsfactor(XX(:,:,<span class="number">1</span>), YY(:,:,<span class="number">1</span>));</span><br><span class="line"> </span><br><span class="line">PRESShj=<span class="number">0</span>;</span><br><span class="line">tt0=<span class="built_in">ones</span>(n<span class="number">-1</span>,<span class="number">2</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">    YY0(<span class="number">1</span>:(<span class="built_in">i</span><span class="number">-1</span>),:)=Y0(<span class="number">1</span>:(<span class="built_in">i</span><span class="number">-1</span>),:);</span><br><span class="line">    YY0(<span class="built_in">i</span>:(n<span class="number">-1</span>),:)=Y0((<span class="built_in">i</span>+<span class="number">1</span>):n,:);</span><br><span class="line">    tt0(<span class="number">1</span>:(<span class="built_in">i</span><span class="number">-1</span>),:)=t(<span class="number">1</span>:(<span class="built_in">i</span><span class="number">-1</span>),:);</span><br><span class="line">     tt0(<span class="built_in">i</span>:(n<span class="number">-1</span>),:)=t((<span class="built_in">i</span>+<span class="number">1</span>):n,:);</span><br><span class="line">     expPRESS(<span class="built_in">i</span>,:)=(Y0(<span class="built_in">i</span>,:)-t(<span class="built_in">i</span>,:)*inv((tt0&#x27;*tt0))*tt0&#x27;*YY0);</span><br><span class="line">     <span class="keyword">for</span> m=<span class="number">1</span>:q</span><br><span class="line">        PRESShj=PRESShj+expPRESS(<span class="built_in">i</span>,m)^<span class="number">2</span>;</span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> sum1=sum(PRESShj);</span><br><span class="line"> PRESSh=sum(sum1);</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">for</span> m=<span class="number">1</span>:q</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">             SShj(<span class="built_in">i</span>,m)=YY(<span class="built_in">i</span>,m,<span class="number">1</span>)^<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"> sum2=sum(SShj);</span><br><span class="line"> SSh=sum(sum2);</span><br><span class="line"> </span><br><span class="line"> Q=<span class="number">1</span>-(PRESSh/SSh);</span><br><span class="line"> </span><br><span class="line"> k=<span class="number">3</span>;</span><br><span class="line"> <span class="comment">%%%%%%%%%%%%%%%%循环，提取主元 </span></span><br><span class="line"> <span class="keyword">while</span> Q&gt;<span class="number">0.0975</span></span><br><span class="line">     [omega(:,k),t(:,k),pp(:,k),XX(:,:,k),rr(:,k),YY(:,:,k)]=plsfactor (XX(:,:,k<span class="number">-1</span>),YY(:,:,k<span class="number">-1</span>));</span><br><span class="line">      PRESShj=<span class="number">0</span>;</span><br><span class="line">    tt00=<span class="built_in">ones</span>(n<span class="number">-1</span>,k);</span><br><span class="line"> <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">    YY0(<span class="number">1</span>:(<span class="built_in">i</span><span class="number">-1</span>),:)=Y0(<span class="number">1</span>:(<span class="built_in">i</span><span class="number">-1</span>),:);</span><br><span class="line">    YY0(<span class="built_in">i</span>:(n<span class="number">-1</span>),:)=Y0((<span class="built_in">i</span>+<span class="number">1</span>):n,:);</span><br><span class="line">     tt00(<span class="number">1</span>:(<span class="built_in">i</span><span class="number">-1</span>),:)=t(<span class="number">1</span>:(<span class="built_in">i</span><span class="number">-1</span>),:);</span><br><span class="line">     tt00(<span class="built_in">i</span>:(n<span class="number">-1</span>),:)=t((<span class="built_in">i</span>+<span class="number">1</span>):n,:);</span><br><span class="line">     expPRESS(<span class="built_in">i</span>,:)=(Y0(<span class="built_in">i</span>,:)-t(<span class="built_in">i</span>,:)*((tt00&#x27;*tt00)^(<span class="number">-1</span>))*tt00&#x27;*YY0);</span><br><span class="line">     <span class="keyword">for</span> m=<span class="number">1</span>:q</span><br><span class="line">        PRESShj=PRESShj+expPRESS(<span class="built_in">i</span>,m)^<span class="number">2</span>;</span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line"> <span class="keyword">for</span> m=<span class="number">1</span>:q</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">            SShj(<span class="built_in">i</span>,m)=YY(<span class="built_in">i</span>,m,k<span class="number">-1</span>)^<span class="number">2</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">sum2=sum(SShj);</span><br><span class="line"> SSh=sum(sum2);</span><br><span class="line">  Q=<span class="number">1</span>-(PRESSh/SSh);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> Q&gt;<span class="number">0.0975</span></span><br><span class="line">     k=k+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"><span class="comment">%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line">h=k<span class="number">-1</span>;<span class="comment">%%%%%%%%%提取主元的个数 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%%%%%%%%还原回归系数 </span></span><br><span class="line">omegaxing=<span class="built_in">ones</span>(p,h,q);</span><br><span class="line"><span class="keyword">for</span> m=<span class="number">1</span>:q</span><br><span class="line">omegaxing(:,<span class="number">1</span>,m)=rr(m,<span class="number">1</span>)*omega(:,<span class="number">1</span>);</span><br><span class="line">   <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:(h)</span><br><span class="line">       <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:(<span class="built_in">i</span><span class="number">-1</span>)</span><br><span class="line">          omegaxingi =(<span class="built_in">eye</span>(p)-omega(:,<span class="built_in">j</span>)*pp(:,<span class="built_in">j</span>)&#x27;);</span><br><span class="line">          omegaxingii=<span class="built_in">eye</span>(p);</span><br><span class="line">          omegaxingii=omegaxingii*omegaxingi;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">      omegaxing(:,<span class="built_in">i</span>,m)=rr(m,<span class="built_in">i</span>)*omegaxingii*omega(:,<span class="built_in">i</span>);</span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line"><span class="built_in">beta</span>(:,m)=sum(omegaxing(:,:,m),<span class="number">2</span>);</span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"><span class="comment">%%%%%%%计算相关系数 </span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:h</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:q</span><br><span class="line">        relation(<span class="built_in">i</span>,<span class="built_in">j</span>)=sum(prod(corrcoef(t(:,<span class="built_in">i</span>),Y(:,<span class="built_in">j</span>))))/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line">Rd=relation.*relation;</span><br><span class="line">RdYt=sum(Rd,<span class="number">2</span>)/q;</span><br><span class="line">Rdtttt=sum(RdYt);</span><br><span class="line">omega22=omega.*omega; </span><br><span class="line">VIP=((p/Rdtttt)*(omega22*RdYt)).^<span class="number">0.5</span>; <span class="comment">%%%计算VIP系数</span></span><br></pre></td></tr></table></figure><p>提取主元</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[omega,t,pp,XXX,r,YYY]</span>=<span class="title">plsfactor</span><span class="params">(X0,Y0)</span> </span></span><br><span class="line">XX=X0&#x27;*Y0*Y0&#x27;*X0;</span><br><span class="line">[V,D]=eig(XX);</span><br><span class="line">Lamda=<span class="built_in">max</span>(D);</span><br><span class="line">[MAXLamda,I]=<span class="built_in">max</span>(Lamda);</span><br><span class="line">omega=V(:,I);          <span class="comment">%最大特征值对应的特征向量 </span></span><br><span class="line"> <span class="comment">%%%第一主元 </span></span><br><span class="line">t=X0*omega;</span><br><span class="line">pp=X0&#x27;*t/(t&#x27;*t);</span><br><span class="line">XXX=X0-t*pp&#x27;;</span><br><span class="line">r=Y0&#x27;*t/(t&#x27;*t);</span><br><span class="line">YYY=Y0-t*r&#x27;;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">X=[<span class="number">191</span> <span class="number">36</span> <span class="number">50</span>;<span class="comment">%自变量</span></span><br><span class="line"><span class="number">189</span> <span class="number">37</span> <span class="number">52</span>;</span><br><span class="line"><span class="number">193</span> <span class="number">38</span> <span class="number">58</span>;</span><br><span class="line"><span class="number">162</span> <span class="number">35</span> <span class="number">62</span>;</span><br><span class="line"><span class="number">189</span> <span class="number">35</span> <span class="number">46</span>;</span><br><span class="line"><span class="number">182</span> <span class="number">36</span> <span class="number">56</span>;</span><br><span class="line"><span class="number">211</span> <span class="number">38</span> <span class="number">56</span>;</span><br><span class="line"><span class="number">167</span> <span class="number">34</span> <span class="number">60</span>;</span><br><span class="line"><span class="number">176</span> <span class="number">31</span> <span class="number">74</span>;</span><br><span class="line"><span class="number">154</span> <span class="number">33</span> <span class="number">56</span>;</span><br><span class="line"><span class="number">169</span> <span class="number">34</span> <span class="number">50</span>;</span><br><span class="line"><span class="number">166</span> <span class="number">33</span> <span class="number">52</span>;</span><br><span class="line"><span class="number">154</span> <span class="number">34</span> <span class="number">64</span>;</span><br><span class="line"><span class="number">247</span> <span class="number">46</span> <span class="number">50</span>;</span><br><span class="line"><span class="number">193</span> <span class="number">36</span> <span class="number">46</span>;</span><br><span class="line"><span class="number">202</span> <span class="number">37</span> <span class="number">62</span>;</span><br><span class="line"><span class="number">176</span> <span class="number">37</span> <span class="number">54</span>;</span><br><span class="line"><span class="number">157</span> <span class="number">32</span> <span class="number">52</span>;</span><br><span class="line"><span class="number">156</span> <span class="number">33</span> <span class="number">54</span>;</span><br><span class="line"><span class="number">138</span> <span class="number">33</span> <span class="number">68</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">Y=[<span class="number">5</span> <span class="number">162</span> <span class="number">60</span>;<span class="comment">%因变量</span></span><br><span class="line"><span class="number">2</span> <span class="number">110</span> <span class="number">60</span>;</span><br><span class="line"><span class="number">12</span> <span class="number">101</span> <span class="number">101</span>;</span><br><span class="line"><span class="number">12</span> <span class="number">105</span> <span class="number">37</span>;</span><br><span class="line"><span class="number">13</span> <span class="number">155</span> <span class="number">58</span>;</span><br><span class="line"><span class="number">4</span> <span class="number">101</span> <span class="number">42</span>;</span><br><span class="line"><span class="number">8</span> <span class="number">101</span> <span class="number">38</span>;</span><br><span class="line"><span class="number">6</span> <span class="number">125</span> <span class="number">40</span>;</span><br><span class="line"><span class="number">15</span> <span class="number">200</span> <span class="number">40</span>;</span><br><span class="line"><span class="number">17</span> <span class="number">251</span> <span class="number">250</span>;</span><br><span class="line"><span class="number">17</span> <span class="number">120</span> <span class="number">38</span>;</span><br><span class="line"><span class="number">13</span> <span class="number">210</span> <span class="number">115</span>;</span><br><span class="line"><span class="number">14</span> <span class="number">215</span> <span class="number">105</span>;</span><br><span class="line"><span class="number">1</span> <span class="number">50</span> <span class="number">50</span> ;</span><br><span class="line"><span class="number">6</span> <span class="number">70</span> <span class="number">31</span>;</span><br><span class="line"><span class="number">12</span> <span class="number">210</span> <span class="number">120</span>;</span><br><span class="line"><span class="number">4</span> <span class="number">60</span> <span class="number">25</span>;</span><br><span class="line"><span class="number">11</span> <span class="number">230</span> <span class="number">80</span>;</span><br><span class="line"><span class="number">15</span> <span class="number">225</span> <span class="number">73</span>;</span><br><span class="line"><span class="number">2</span> <span class="number">110</span> <span class="number">43</span>];</span><br><span class="line">[<span class="built_in">beta</span>,VIP]=pls(X,Y)<span class="comment">%进行部分最小二乘回归</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">beta</span> =</span><br><span class="line">   <span class="number">-0.0778</span>   <span class="number">-0.1385</span>   <span class="number">-0.0604</span></span><br><span class="line">   <span class="number">-0.4989</span>   <span class="number">-0.5244</span>   <span class="number">-0.1559</span></span><br><span class="line">   <span class="number">-0.1322</span>   <span class="number">-0.0854</span>   <span class="number">-0.0073</span></span><br><span class="line">VIP =</span><br><span class="line">    <span class="number">0.9982</span></span><br><span class="line">    <span class="number">1.2977</span></span><br><span class="line">    <span class="number">0.5652</span></span><br></pre></td></tr></table></figure><h2 id="数理统计基础">数理统计基础</h2><h3 id="样本均值">样本均值</h3><p>M=mean(A)</p><ul><li>算术平均 nanmean</li><li>几何平均 geomean</li><li>调和平均 harmmean</li><li>调整平均 trimmean</li></ul><h3 id="样本方差与标准差">样本方差与标准差</h3><ul><li><p>方差 var(A,w) w——权重向量</p></li><li><p>标准差 std(A,w)</p><p>w=0(默认)，按N-1进行归一化</p><p>w=1，按观测数值量N进行归一化</p></li></ul><h3 id="协方差和相关系数">协方差和相关系数</h3><ul><li>协方差 cov(A)</li><li>相关系数 corrcoef(A)</li></ul><h2 id="多元数据相关分析">多元数据相关分析</h2><h3 id="主成分分析">主成分分析</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[F,rate,maxlamda]</span>=<span class="title">mainfactor</span><span class="params">(X)</span></span></span><br><span class="line">[n,p]=<span class="built_in">size</span>(X);</span><br><span class="line">meanX=<span class="built_in">mean</span>(X);</span><br><span class="line">varX=var(X);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:p      </span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">    X0(<span class="built_in">j</span>,<span class="built_in">i</span>)=(X(<span class="built_in">j</span>,<span class="built_in">i</span>)-meanX(<span class="built_in">i</span>))/((varX(<span class="built_in">i</span>))^<span class="number">0.5</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">V=corrcoef(X0);</span><br><span class="line">[VV0,lamda0]=eig(V);</span><br><span class="line">lamda1=sum(lamda0);</span><br><span class="line">lamda=lamda1(<span class="built_in">find</span>(lamda1&gt;<span class="number">0</span>));</span><br><span class="line">VV=VV0(:,<span class="built_in">find</span>(lamda1&gt;<span class="number">0</span>));</span><br><span class="line">k=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k&lt;=<span class="built_in">length</span>(lamda))</span><br><span class="line">    [maxlamda(k),I]=<span class="built_in">max</span>(lamda);</span><br><span class="line">    maxVV(:,k)=VV(:,I);</span><br><span class="line">    lamda(I)=[];</span><br><span class="line">    VV(:,I)=[];</span><br><span class="line">    k=k+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">lamdarate=maxlamda/sum(maxlamda);</span><br><span class="line">rate=(<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="built_in">length</span>(maxlamda)));</span><br><span class="line"><span class="keyword">for</span> l=<span class="number">1</span>:<span class="built_in">length</span>(maxlamda)</span><br><span class="line">    F(:,l)=maxVV(:,<span class="number">1</span>)&#x27;*X&#x27;;</span><br><span class="line">    <span class="keyword">for</span> m=<span class="number">1</span>:l</span><br><span class="line">    rate(l)=rate(l)+lamdarate(m);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">X=[<span class="number">19.5</span> <span class="number">24.7</span> <span class="number">30.7</span> <span class="number">29.8</span> <span class="number">19.1</span> <span class="number">25.6</span> <span class="number">31.4</span> <span class="number">27.9</span> <span class="number">22.1</span> <span class="number">25.5</span>  <span class="number">31.1</span> <span class="number">30.4</span> <span class="number">18.7</span> <span class="number">19.7</span> <span class="number">14.6</span><span class="number">29.5</span><span class="number">27.7</span><span class="number">30.2</span><span class="number">22.7</span><span class="number">25.2</span>;<span class="number">43.1</span><span class="number">49.8</span><span class="number">51.9</span><span class="number">54.3</span><span class="number">42.2</span><span class="number">53.9</span><span class="number">58.6</span><span class="number">52.1</span><span class="number">49.9</span><span class="number">53.5</span> <span class="number">56.6</span><span class="number">56.7</span><span class="number">46.5</span><span class="number">44.2</span><span class="number">42.7</span><span class="number">54.4</span><span class="number">55.3</span><span class="number">58.6</span><span class="number">48.2</span><span class="number">51</span>;  <span class="number">29.1</span> <span class="number">28.2</span><span class="number">37</span><span class="number">31.1</span><span class="number">30.9</span><span class="number">23.7</span><span class="number">27.6</span><span class="number">30.6</span><span class="number">23.2</span><span class="number">24.8</span>  <span class="number">30</span><span class="number">28.3</span><span class="number">23</span><span class="number">28.6</span><span class="number">21.3</span><span class="number">30.1</span><span class="number">25.6</span><span class="number">24.6</span><span class="number">27.1</span><span class="number">27.5</span>];</span><br><span class="line">[F,rate,maxlamda]=mainfactor(X)</span><br><span class="line"></span><br><span class="line">F =<span class="comment">%对应的主成分</span></span><br><span class="line">  <span class="number">113.2766</span>  <span class="number">113.2766</span>  <span class="number">113.2766</span>  <span class="number">113.2766</span>  <span class="number">113.2766</span>  <span class="number">113.2766</span></span><br><span class="line">  <span class="number">229.0117</span>  <span class="number">229.0117</span>  <span class="number">229.0117</span>  <span class="number">229.0117</span>  <span class="number">229.0117</span>  <span class="number">229.0117</span></span><br><span class="line">  <span class="number">123.3809</span>  <span class="number">123.3809</span>  <span class="number">123.3809</span>  <span class="number">123.3809</span>  <span class="number">123.3809</span>  <span class="number">123.3809</span></span><br><span class="line">rate =<span class="comment">%每个主成分的贡献率</span></span><br><span class="line">    <span class="number">0.9681</span>    <span class="number">1.0000</span>    <span class="number">1.0000</span>    <span class="number">1.0000</span>    <span class="number">1.0000</span>    <span class="number">1.0000</span></span><br><span class="line">maxlamda =<span class="comment">%从大到小排列的协方差阵特征值</span></span><br><span class="line">   <span class="number">19.3620</span>    <span class="number">0.6380</span>    <span class="number">0.0000</span>    <span class="number">0.0000</span>    <span class="number">0.0000</span>    <span class="number">0.0000</span></span><br></pre></td></tr></table></figure><h3 id="典型相关分析">典型相关分析</h3><p>看是否存在相关关系</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[maxVV1,maxVV2,F,G]</span>=<span class="title">dxxg</span><span class="params">(X,Y)</span></span></span><br><span class="line">[n,p]=<span class="built_in">size</span>(X);</span><br><span class="line">[n,q]=<span class="built_in">size</span>(Y);</span><br><span class="line">meanX=<span class="built_in">mean</span>(X);</span><br><span class="line">varX=var(X);</span><br><span class="line">meanY=<span class="built_in">mean</span>(Y);</span><br><span class="line">varY=var(Y);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:p      </span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">    X0(<span class="built_in">j</span>,<span class="built_in">i</span>)=(X(<span class="built_in">j</span>,<span class="built_in">i</span>)-meanX(<span class="built_in">i</span>))/((varX(<span class="built_in">i</span>))^<span class="number">0.5</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:q</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">    Y0(<span class="built_in">j</span>,<span class="built_in">i</span>)=(Y(<span class="built_in">j</span>,<span class="built_in">i</span>)-meanY(<span class="built_in">i</span>))/((varY(<span class="built_in">i</span>))^<span class="number">0.5</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">V1=inv(X0&#x27;*X0)*X0&#x27;*Y0*inv(Y0&#x27;*Y0)*Y0&#x27;*X0;</span><br><span class="line">V2=inv(Y0&#x27;*Y0)*Y0&#x27;*X0*inv(X0&#x27;*X0)*X0&#x27;*Y0;</span><br><span class="line">[VV1,lamda1]=eig(V1);</span><br><span class="line">[VV2,lamda2]=eig(V2);</span><br><span class="line">lamda11=sum(lamda1);</span><br><span class="line">lamda21=sum(lamda2);</span><br><span class="line">k=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k&lt;=(<span class="built_in">length</span>(lamda1))^<span class="number">0.5</span>)</span><br><span class="line">    [maxlamda1(k),I]=<span class="built_in">max</span>(lamda11);   </span><br><span class="line">    maxVV1(:,k)=VV1(:,I);</span><br><span class="line">    lamda11(I)=[];</span><br><span class="line">    VV1(:,I)=[];</span><br><span class="line">     [maxlamda2(k),I]=<span class="built_in">max</span>(lamda21);</span><br><span class="line">    maxVV2(:,k)=VV2(:,I);</span><br><span class="line">     lamda21(I)=[];</span><br><span class="line">    VV2(:,I)=[];</span><br><span class="line">    k=k+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">F=X0*maxVV1;</span><br><span class="line">G=Y0*maxVV2;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">X=[<span class="number">191</span> <span class="number">36</span> <span class="number">50</span>; <span class="number">189</span> <span class="number">37</span> <span class="number">52</span>; <span class="number">193</span> <span class="number">38</span> <span class="number">58</span>; <span class="number">162</span> <span class="number">35</span> <span class="number">62</span>; <span class="number">189</span> <span class="number">35</span> <span class="number">46</span>; <span class="number">182</span> <span class="number">36</span> <span class="number">56</span>; <span class="number">211</span> <span class="number">38</span> <span class="number">56</span>; <span class="number">167</span> <span class="number">34</span> <span class="number">60</span>; <span class="number">176</span> <span class="number">31</span> <span class="number">74</span>; <span class="number">154</span> <span class="number">33</span> <span class="number">56</span>; <span class="number">169</span> <span class="number">34</span> <span class="number">50</span>; <span class="number">166</span> <span class="number">33</span> <span class="number">52</span>; <span class="number">154</span> <span class="number">34</span> <span class="number">64</span>; <span class="number">247</span> <span class="number">46</span> <span class="number">50</span>; <span class="number">193</span> <span class="number">36</span> <span class="number">46</span>; <span class="number">202</span> <span class="number">37</span> <span class="number">62</span>; <span class="number">176</span> <span class="number">37</span> <span class="number">54</span>; <span class="number">157</span> <span class="number">32</span> <span class="number">52</span>; <span class="number">156</span> <span class="number">33</span> <span class="number">54</span>; <span class="number">138</span> <span class="number">33</span> <span class="number">68</span>];</span><br><span class="line">Y=[<span class="number">5</span> <span class="number">162</span> <span class="number">60</span>; <span class="number">2</span> <span class="number">110</span> <span class="number">60</span>; <span class="number">12</span> <span class="number">101</span> <span class="number">101</span>; <span class="number">12</span> <span class="number">105</span> <span class="number">37</span>; <span class="number">13</span> <span class="number">155</span> <span class="number">58</span>; <span class="number">4</span> <span class="number">101</span> <span class="number">42</span>; <span class="number">8</span> <span class="number">101</span> <span class="number">38</span>; <span class="number">6</span> <span class="number">125</span> <span class="number">40</span>; <span class="number">15</span> <span class="number">200</span> <span class="number">40</span>; <span class="number">17</span> <span class="number">251</span> <span class="number">250</span>; <span class="number">17</span> <span class="number">120</span> <span class="number">38</span>; <span class="number">13</span> <span class="number">210</span> <span class="number">115</span>; <span class="number">14</span> <span class="number">215</span> <span class="number">105</span>; <span class="number">1</span> <span class="number">50</span> <span class="number">50</span> ; <span class="number">6</span> <span class="number">70</span> <span class="number">31</span>; <span class="number">12</span> <span class="number">210</span> <span class="number">120</span>; <span class="number">4</span> <span class="number">60</span> <span class="number">25</span>; <span class="number">11</span> <span class="number">230</span> <span class="number">80</span>; <span class="number">15</span> <span class="number">225</span> <span class="number">73</span>; <span class="number">2</span> <span class="number">110</span> <span class="number">43</span>];</span><br><span class="line">[maxVV1,maxVV2,F,G]=dxxg(X,Y)</span><br><span class="line"></span><br><span class="line">maxVV1 =<span class="comment">%X的典型主轴</span></span><br><span class="line">    <span class="number">0.4405</span></span><br><span class="line">   <span class="number">-0.8971</span></span><br><span class="line">    <span class="number">0.0336</span></span><br><span class="line">maxVV2 =<span class="comment">%Y的典型主轴</span></span><br><span class="line">   <span class="number">-0.2645</span></span><br><span class="line">   <span class="number">-0.7976</span></span><br><span class="line">    <span class="number">0.5421</span></span><br><span class="line">F =<span class="comment">%X的典型成分</span></span><br><span class="line">    <span class="number">0.0247</span></span><br><span class="line">   <span class="number">-0.2819</span></span><br><span class="line">   <span class="number">-0.4627</span></span><br><span class="line">   <span class="number">-0.1566</span></span><br><span class="line">    <span class="number">0.2506</span></span><br><span class="line">   <span class="number">-0.1079</span></span><br><span class="line">   <span class="number">-0.1510</span></span><br><span class="line">    <span class="number">0.2035</span></span><br><span class="line">    <span class="number">1.2698</span></span><br><span class="line">    <span class="number">0.2331</span></span><br><span class="line">    <span class="number">0.1926</span></span><br><span class="line">    <span class="number">0.4286</span></span><br><span class="line">   <span class="number">-0.0098</span></span><br><span class="line">   <span class="number">-1.7782</span></span><br><span class="line">    <span class="number">0.0417</span></span><br><span class="line">   <span class="number">-0.0034</span></span><br><span class="line">   <span class="number">-0.5045</span></span><br><span class="line">    <span class="number">0.5482</span></span><br><span class="line">    <span class="number">0.2595</span></span><br><span class="line">    <span class="number">0.0036</span></span><br><span class="line">G =<span class="comment">%Y的典型成分</span></span><br><span class="line">   <span class="number">-0.0960</span></span><br><span class="line">    <span class="number">0.7170</span></span><br><span class="line">    <span class="number">0.7649</span></span><br><span class="line">    <span class="number">0.0373</span></span><br><span class="line">   <span class="number">-0.4281</span></span><br><span class="line">    <span class="number">0.5414</span></span><br><span class="line">    <span class="number">0.2990</span></span><br><span class="line">    <span class="number">0.1142</span></span><br><span class="line">   <span class="number">-1.2921</span></span><br><span class="line">    <span class="number">0.1779</span></span><br><span class="line">   <span class="number">-0.3935</span></span><br><span class="line">   <span class="number">-0.5266</span></span><br><span class="line">   <span class="number">-0.7461</span></span><br><span class="line">    <span class="number">1.4262</span></span><br><span class="line">    <span class="number">0.7202</span></span><br><span class="line">   <span class="number">-0.4237</span></span><br><span class="line">    <span class="number">0.8843</span></span><br><span class="line">   <span class="number">-1.0515</span></span><br><span class="line">   <span class="number">-1.2619</span></span><br><span class="line">    <span class="number">0.5373</span></span><br></pre></td></tr></table></figure><h2 id="方差分析-2">方差分析</h2><h3 id="单因素方差分析">单因素方差分析</h3><p><img src="../../source/imgs/$%7Bfiilename%7D/6697c401d9c307b7e97f30c2.jpg" alt="单因素方差分析表"></p><p>anoval(X,group) group——标识箱线图中的坐标</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">X=[<span class="number">4.3</span>  <span class="number">6.1</span>  <span class="number">6.5</span>  <span class="number">9.3</span>  <span class="number">9.5</span>; <span class="number">7.8</span>  <span class="number">7.3</span>  <span class="number">8.3</span><span class="number">8.7</span> <span class="number">8.8</span>; <span class="number">3.2</span>  <span class="number">4.2</span>  <span class="number">8.6</span><span class="number">7.2</span><span class="number">11.4</span>; <span class="number">6.5</span>  <span class="number">4.1</span>  <span class="number">8.2</span>  <span class="number">10.1</span>  <span class="number">7.8</span>];</span><br><span class="line"><span class="built_in">mean</span>(X)</span><br><span class="line">[p,<span class="built_in">table</span>,stats]=anova1(X)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =<span class="comment">%样本均值</span></span><br><span class="line">    <span class="number">5.4500</span>    <span class="number">5.4250</span>    <span class="number">7.9000</span>    <span class="number">8.8250</span>    <span class="number">9.3750</span></span><br><span class="line">p =<span class="comment">%各列均值相等的概率值</span></span><br><span class="line">    <span class="number">0.0042</span></span><br><span class="line"><span class="built_in">table</span> =<span class="comment">%方差分析表</span></span><br><span class="line">  <span class="number">4</span>×<span class="number">6</span> cell 数组</span><br><span class="line">    &#123;<span class="string">&#x27;来源&#x27;</span>&#125;    &#123;<span class="string">&#x27;SS&#x27;</span>     &#125;    &#123;<span class="string">&#x27;df&#x27;</span>&#125;    &#123;<span class="string">&#x27;MS&#x27;</span>      &#125;    &#123;<span class="string">&#x27;F&#x27;</span>       &#125;    &#123;<span class="string">&#x27;p 值(F)&#x27;</span> &#125;</span><br><span class="line">    &#123;<span class="string">&#x27;列&#x27;</span>  &#125;    &#123;[<span class="number">55.5370</span>]&#125;    &#123;[ <span class="number">4</span>]&#125;    &#123;[ <span class="number">13.8843</span>]&#125;    &#123;[  <span class="number">6.0590</span>]&#125;    &#123;[  <span class="number">0.0042</span>]&#125;</span><br><span class="line">    &#123;<span class="string">&#x27;误差&#x27;</span>&#125;    &#123;[<span class="number">34.3725</span>]&#125;    &#123;[<span class="number">15</span>]&#125;    &#123;[  <span class="number">2.2915</span>]&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br><span class="line">    &#123;<span class="string">&#x27;合计&#x27;</span>&#125;    &#123;[<span class="number">89.9095</span>]&#125;    &#123;[<span class="number">19</span>]&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br><span class="line">stats = <span class="comment">%结果结构体</span></span><br><span class="line">  包含以下字段的 struct:</span><br><span class="line">    gnames: [<span class="number">5</span>×<span class="number">1</span> char]</span><br><span class="line">         n: [<span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span>]</span><br><span class="line">    source: <span class="string">&#x27;anova1&#x27;</span></span><br><span class="line">     means: [<span class="number">5.4500</span> <span class="number">5.4250</span> <span class="number">7.9000</span> <span class="number">8.8250</span> <span class="number">9.3750</span>]</span><br><span class="line">        df: <span class="number">15</span></span><br><span class="line">         s: <span class="number">1.5138</span></span><br></pre></td></tr></table></figure><h3 id="双因素方差分析">双因素方差分析</h3><p>anova2(X,reps) reps——试验重复次数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">X=[<span class="number">58.2</span>    <span class="number">52.6</span> <span class="number">56.2</span> <span class="number">41.2</span>    <span class="number">65.3</span> <span class="number">60.8</span>;<span class="number">49.1</span> <span class="number">42.8</span> <span class="number">54.1</span> <span class="number">50.5</span> <span class="number">51.6</span> <span class="number">48.4</span>;<span class="number">60.1</span> <span class="number">58.3</span>    <span class="number">70.9</span> <span class="number">73.2</span>    <span class="number">39.2</span> <span class="number">40.7</span>;<span class="number">75.8</span> <span class="number">71.5</span>    <span class="number">58.2</span> <span class="number">51</span>    <span class="number">48.7</span> <span class="number">41.4</span>];</span><br><span class="line">[p,<span class="built_in">table</span>,stats]=anova2(X&#x27;,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">p =</span><br><span class="line">    <span class="number">0.0260</span>    <span class="number">0.0035</span>    <span class="number">0.0001</span></span><br><span class="line"><span class="built_in">table</span> =</span><br><span class="line">  <span class="number">6</span>×<span class="number">6</span> cell 数组</span><br><span class="line">    &#123;<span class="string">&#x27;来源&#x27;</span>   &#125;    &#123;<span class="string">&#x27;SS&#x27;</span>        &#125;    &#123;<span class="string">&#x27;df&#x27;</span>&#125;    &#123;<span class="string">&#x27;MS&#x27;</span>      &#125;    &#123;<span class="string">&#x27;F&#x27;</span>       &#125;    &#123;<span class="string">&#x27;p 值(F)&#x27;</span>   &#125;</span><br><span class="line">    &#123;<span class="string">&#x27;列&#x27;</span>     &#125;    &#123;[  <span class="number">261.6750</span>]&#125;    &#123;[ <span class="number">3</span>]&#125;    &#123;[ <span class="number">87.2250</span>]&#125;    &#123;[  <span class="number">4.4174</span>]&#125;    &#123;[    <span class="number">0.0260</span>]&#125;</span><br><span class="line">    &#123;<span class="string">&#x27;行&#x27;</span>     &#125;    &#123;[  <span class="number">370.9808</span>]&#125;    &#123;[ <span class="number">2</span>]&#125;    &#123;[<span class="number">185.4904</span>]&#125;    &#123;[  <span class="number">9.3939</span>]&#125;    &#123;[    <span class="number">0.0035</span>]&#125;</span><br><span class="line">    &#123;<span class="string">&#x27;交互效应&#x27;</span>&#125;    &#123;[<span class="number">1.7687e+03</span>]&#125;    &#123;[ <span class="number">6</span>]&#125;    &#123;[<span class="number">294.7821</span>]&#125;    &#123;[ <span class="number">14.9288</span>]&#125;    &#123;[<span class="number">6.1511e-05</span>]&#125;</span><br><span class="line">    &#123;<span class="string">&#x27;误差&#x27;</span>   &#125;    &#123;[  <span class="number">236.9500</span>]&#125;    &#123;[<span class="number">12</span>]&#125;    &#123;[ <span class="number">19.7458</span>]&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double  &#125;</span><br><span class="line">    &#123;<span class="string">&#x27;合计&#x27;</span>   &#125;    &#123;[<span class="number">2.6383e+03</span>]&#125;    &#123;[<span class="number">23</span>]&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double  &#125;</span><br><span class="line">stats = </span><br><span class="line">  包含以下字段的 struct:</span><br><span class="line">      source: <span class="string">&#x27;anova2&#x27;</span></span><br><span class="line">     sigmasq: <span class="number">19.7458</span></span><br><span class="line">    colmeans: [<span class="number">55.7167</span> <span class="number">49.4167</span> <span class="number">57.0667</span> <span class="number">57.7667</span>]</span><br><span class="line">        coln: <span class="number">6</span></span><br><span class="line">    rowmeans: [<span class="number">58.5500</span> <span class="number">56.9125</span> <span class="number">49.5125</span>]</span><br><span class="line">        rown: <span class="number">8</span></span><br><span class="line">       inter: <span class="number">1</span></span><br><span class="line">        pval: <span class="number">6.1511e-05</span></span><br><span class="line">          df: <span class="number">12</span></span><br></pre></td></tr></table></figure><h1>数据拟合与插值</h1><h2 id="数据插值">数据插值</h2><h3 id="拉格朗日插值">拉格朗日插值</h3>]]></content>
      
      
      <categories>
          
          <category> 数模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人类观察录前言</title>
      <link href="/2024/06/10/guancha/%E8%A7%82%E5%AF%9F%E5%BD%95%E5%89%8D%E8%A8%80/"/>
      <url>/2024/06/10/guancha/%E8%A7%82%E5%AF%9F%E5%BD%95%E5%89%8D%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h1>写在前面</h1><p>这里收集了各式各样的人~明媚的，深沉的，我真诚地想记录下来每一个有趣的灵魂（才不要在时间的长河里抹掉你们的印记），欢迎常来看看我的赛博收集手册~</p><blockquote><p>说不定你就是其中珍贵的一页呢？</p></blockquote><p>这个分类其实想写一些奇幻经历，会慢慢更新哒，包括但不限于一些恐怖故事，害怕的宝宝晚上慎看🍀</p><p>还有一本万言书（希望还有时间以连载的形式更完），颠沛流离的结局兴许不是繁花似锦，但起码不应当被遗忘。机械化的时代太过嘈杂，灵感也会随之枯竭，或许只有事无巨细地刻画下来，忘记的时候才不会那么怅然若失。愿未来某时的你，灵魂尚有余温。</p><p>还有还有，可能会夹杂一些寻人启事，人和人的相遇真的全凭缘分，有些人错过就是错过了，甚至连说再见的机会都没有，想在这里写下我仅存的印象，如果各位或者本人有幸能看到的话还请留下联系方式，这对我很重要，谢谢谢谢！！！</p><p>好像有点多？哈哈，因为这些同等重要💕</p><blockquote><p>声明：本人向来身体健康，精神状态正常</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 人类观猹录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观猹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++STL</title>
      <link href="/2024/05/24/shuju/c++STL/"/>
      <url>/2024/05/24/shuju/c++STL/</url>
      
        <content type="html"><![CDATA[<h1>&lt;vector&gt;</h1><p>可变长数组，倍增思想，支持随机访问，不支持任意位置O(1)插入</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; b[<span class="number">233</span>]; <span class="comment">//第一维长233，第二维动态变化</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">rec</span>&#123;&#125;;</span><br><span class="line">vector&lt;rec&gt; c;<span class="comment">//自定义结构体</span></span><br></pre></td></tr></table></figure><p>size/empty，clear，push_back/pop_back</p><p>begin/end，容器[)，end返回第n个元素再往后的边界</p><p>front/back，front = *a.bsgin()/a[0]；back = *–a.end()/a[size() - 1]</p><blockquote><p>迭代器：指针</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; ::iterator it;<span class="comment">//保存int的迭代器</span></span><br></pre></td></tr></table></figure></blockquote><h1>&lt;queue&gt;</h1><h2 id="循环队列-queue">循环队列&lt;queue&gt;</h2><p>O(1)，push，pop，front，back</p><h2 id="优先队列-priority-queue">优先队列&lt;priority_queue&gt;</h2><p>较大元素在堆顶</p><table><thead><tr><th>方法</th><th>复杂度</th></tr></thead><tbody><tr><td>push</td><td>O(logn)</td></tr><tr><td>pop</td><td>O(logn)</td></tr><tr><td>top</td><td>O(1)</td></tr></tbody></table><h2 id="重载“-”运算符">重载“&lt;”运算符</h2><p>用于使用自定义的结构体类型</p><h2 id="懒惰删除法">懒惰删除法</h2><p>先给要删除的数打一个标记，等它到堆顶的时候，删除</p><h1>双端队列 &lt;deque&gt;</h1><p>支持随机访问</p><table><thead><tr><th style="text-align:center">方法</th><th style="text-align:center">复杂度</th></tr></thead><tbody><tr><td style="text-align:center">front/back</td><td style="text-align:center">O(1)</td></tr><tr><td style="text-align:center">push_back</td><td style="text-align:center">O(1)</td></tr><tr><td style="text-align:center">push_front</td><td style="text-align:center">O(1)</td></tr><tr><td style="text-align:center">pop_front</td><td style="text-align:center">O(1)</td></tr><tr><td style="text-align:center">pop_back</td><td style="text-align:center">O(1)</td></tr><tr><td style="text-align:center">clear</td><td style="text-align:center">O(n)</td></tr></tbody></table><h1>头文件&lt;set&gt;</h1><h2 id="set-有序集合">set 有序集合</h2><p>元素不重复</p><h2 id="multiset-有序多重集">multiset 有序多重集</h2><p>元素可重复</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set&lt;<span class="type">int</span>&gt; s;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">rec</span>&#123;...&#125;;</span><br><span class="line">set rec s;<span class="comment">//必须定义“小于号”运算符</span></span><br><span class="line">multiset&lt;<span class="type">double</span>&gt; s;</span><br></pre></td></tr></table></figure><p>双向迭代器：O(logn)，++指向下一名元素，不支持随机访问，支持<code>*</code>的解除引用</p><p>insert:O(logn)</p><p>find(x):找到x元素，返回指向该元素的迭代器，不存在就返回s.end()</p><p>lower_bound/upper_bound:O(logn)，查找&gt;=x元素中最小/最大的一个</p><p>erase:</p><ul><li>迭代器：删除该迭代器指向的元素O(logn)</li><li>元素：删除所有相同的元素O(logn+k)</li></ul><p>count</p><h1>&lt;map&gt;</h1><p>key-value，以key为关键字的红黑树，key定义“小于号”运算符</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map&lt;key_type,vlue_type&gt; name;</span><br></pre></td></tr></table></figure><p>迭代器：双向访问迭代器</p><p>set/empty/clear/begin/end</p><p>insert/erase :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pair&lt;key_type,vlue_type&gt;<span class="comment">//insert</span></span><br><span class="line"></span><br><span class="line">map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; h;</span><br><span class="line">h.<span class="built_in">insert</span>(meak_pair&lt;<span class="number">1</span>,<span class="number">2</span>&gt;),h.<span class="built_in">insert</span>(meak_pair&lt;<span class="number">2</span>,<span class="number">3</span>&gt;);</span><br><span class="line">map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;::iterator it = h.<span class="built_in">begin</span>();</span><br><span class="line">pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; p = * it;</span><br><span class="line">h.<span class="built_in">erase</span>(it),h.<span class="built_in">erase</span>(<span class="built_in">meak_pair</span>(<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line">cout &lt;&lt; p.first &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; p.second &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>[]操作符：O(logn) h[key],返回key映射的value的引用，可进行赋值操作。若查找的value不存在，则创建一个(ket,zero)。可以先用find查询key的存在性。</p><blockquote><p>zero:广义0值</p></blockquote><h1>&lt;bitset&gt;</h1><p>多位二进制数，8位一字节</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitset&lt;10000&gt; s;<span class="comment">//1000位二进制数</span></span><br></pre></td></tr></table></figure><p>~s：返回对bitsset s按位取反的结果</p><p>&amp;,|,^：位数相同的bitset按位与，或，以或运算</p><p>&gt;&gt;,&lt;&lt;：右移/左移</p><p>==,!=：比较相等</p><p>s[k]：s的第k位，最低位为s[0]</p><p>count：返回有多少位为1</p><p>any/none：s所有位为0，s.none()=true;否则s.any()=true</p><p>set/reset/flip：</p><ul><li>s.set() 所有位置1</li><li>s.set(k,v) s[k] = v</li><li>s.reset(k) 第k位置0</li><li>s.flip(k) 第k位取反</li></ul><h1>&lt;algorithm&gt;</h1><p>用于序列</p><h2 id="reverse-翻转">reverse 翻转</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">reberse</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());<span class="comment">//也可放数组下标</span></span><br></pre></td></tr></table></figure><h2 id="unique-去重">unique 去重</h2><p>返回去重之后末尾元素的下一个位置，用于离散化，指针加减计算去重后的个数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> m = <span class="built_in">unique</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>()) - a.<span class="built_in">begin</span>();</span><br></pre></td></tr></table></figure><h2 id="random-shuffle-随机打乱">random_shuffle 随机打乱</h2><p>用法同revsrse</p><h2 id="next-permutation-下一个排列">next_permutation 下一个排列</h2><p>两个指针的区域为一个排列，求这些元素构成的全排列中字典序排在下一个的序列，若不存在，返回false。prev_permutation同理。</p><h2 id="sort-快排">sort 快排</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br></pre></td></tr></table></figure><h2 id="lower-bound-upper-bound-二分">lower_bound/upper_bound 二分</h2><p>lower_bound返回指向&gt;=x的元素位置的迭代器；</p><p>upper_bound返回指向=x的元素位置的迭代器。</p><blockquote><p>两指针指定的部分应该是提前排序好的</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Few-Shot代码</title>
      <link href="/2024/04/24/NER/Few-Shot%E4%BB%A3%E7%A0%81/"/>
      <url>/2024/04/24/NER/Few-Shot%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1>export_model.py 处理数据并转换成ONNX格式存储</h1><h2 id="validate-onnx">validate_onnx()</h2><p>确保将PyTorch模型转换为ONNX格式后，其输出与原始PyTorch模型的输出一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">validate_onnx(tokenizer: PreTrainedTokenizerBase, pt_model: PreTrainedModel, onnx_path: Union[Path, str], strict: bool = True, atol: float = 1e-05)</span><br></pre></td></tr></table></figure><ol><li>首先，它使用<code>transformers</code>库中的<code>AutoTokenizer</code>来创建一个分词器，并使用它对一些示例文本进行编码，以生成输入张量。</li><li>使用<code>pt_model</code>（预训练的PyTorch模型）对这些输入进行前向传播，得到预测结果。</li><li>将这些结果转换为NumPy数组，以便与ONNX模型的结果进行比较。</li><li>创建一个ONNX Runtime会话（<code>InferenceSession</code>），加载由<code>onnx_path</code>指定的ONNX模型文件。</li><li>将PyTorch模型的输入张量转换为NumPy数组，并使用ONNX模型进行推理，得到ONNX模型的输出结果。</li><li>检查ONNX模型的输出名称是否与PyTorch模型的输出名称相匹配，以确保输出的一致性。</li><li>对每个输出，检查形状和值是否与PyTorch模型的输出相匹配。如果形状或值有任何差异，则抛出异常，否则输出验证通过的信息。</li></ol><h3 id="ONNX格式">ONNX格式</h3><p>ONNX（Open Neural Network Exchange）是一个开放的深度学习模型表示格式，由微软和Facebook共同开发。它旨在成为深度学习框架之间的通用模型表示标准，允许用户在不同的深度学习框架之间轻松迁移模型。</p><p>ONNX格式定义了一种通用的模型表示方法，可以描述神经网络的结构、参数和操作。这种通用性使得用户可以使用一个框架训练模型，然后将其转换为ONNX格式，并在另一个框架中加载和使用它，而无需重新训练模型。</p><h2 id="export-onnx">export_onnx()</h2><p>将预训练的PyTorch模型转换为ONNX格式，并保存为ONNX文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export_onnx(args: argparse.Namespace, tokenizer: PreTrainedTokenizerBase, model: PreTrainedModel, device: torch.device, input_names: List[str], output_names: List[str]):</span><br></pre></td></tr></table></figure><ol><li><code>with torch.no_grad():</code>：进入一个上下文管理器，确保在此范围内的计算不会跟踪梯度，以节省内存并提高性能。</li><li><code>model = model.to(device)</code>：将模型移动到指定的设备（GPU或CPU）上进行推理。</li><li><code>model.eval()</code>：将模型设置为评估模式，这通常会关闭模型中的dropout和batch normalization等层。</li><li><code>model.config.return_dict = True</code>和<code>model.config.use_cache = False</code>：设置模型配置，指示模型返回输出字典，并禁用缓存。</li><li><code>if not args.output_path.exists(): args.output_path.mkdir(parents=True)</code>：检查输出路径是否存在，如果不存在则创建。</li><li><code>dynamic_axes = &#123;name: &#123;0: 'batch', 1: 'sequence'&#125; for name in chain(input_names, output_names)&#125;</code>：创建一个动态轴字典，用于指定输入和输出的动态维度。</li><li>生成虚拟输入数据：<ul><li><code>batch_size</code>和<code>seq_length</code>确定了虚拟输入数据的批次大小和序列长度。</li><li><code>dummy_input</code>是一个包含了未知标记（<code>[UNK]</code>）的虚拟输入序列列表，用于生成模型输入。</li><li>使用tokenizer将虚拟输入数据编码为PyTorch张量。</li></ul></li><li><code>if save_path.exists(): save_path.unlink()</code>：检查是否已存在要保存的ONNX文件，如果存在则删除，以防止覆盖。</li><li><code>torch.onnx.export()</code>：使用<code>torch.onnx.export</code>函数将PyTorch模型转换为ONNX格式。<ul><li>第一个参数是模型对象。</li><li>第二个参数是模型的输入数据，以元组的形式传递。</li><li>第三个参数是要保存的ONNX文件路径。</li><li><code>input_names</code>和<code>output_names</code>分别指定了输入和输出的名称。</li><li><code>dynamic_axes</code>指定了动态维度的名称和位置。</li><li><code>do_constant_folding=True</code>用于执行常量折叠优化。</li><li><code>opset_version=11</code>指定了ONNX的操作集版本。</li></ul></li><li><code>if not os.path.exists(save_path): logger.error(f'Export Failed!')</code>：检查ONNX文件是否成功导出，如果失败则打印错误信息。</li><li>返回保存的ONNX文件路径。</li></ol><h2 id="main">main()</h2><p>执行模型导出和验证的整个流程，并打印成功导出的ONNX模型的路径</p><ol><li><p>解析命令行参数：</p><p>使用<code>argparse</code>库创建一个参数解析器<code>parser</code>。</p><p>添加两个参数：<code>--model_path</code>表示模型参数的路径，<code>--output_path</code>表示模型在静态图中的保存路径，默认为模型参数路径。</p><p>使用<code>parse_args()</code>方法解析命令行参数，得到<code>args</code>对象。</p></li><li><p>设置输出路径：</p><p>如果未提供<code>--output_path</code>参数，则将其设置为与<code>--model_path</code>相同的路径。</p></li><li><p>加载模型和分词器：</p><p>使用<code>BertTokenizer.from_pretrained()</code>方法加载BERT分词器。</p><p>使用<code>UIE.from_pretrained()</code>方法加载UIE模型。</p></li><li><p>设置设备和输入输出名称：</p><p>将设备设置为CPU。</p><p>定义输入和输出名称列表。</p></li><li><p>导出分词器配置：</p><p>调用<code>export_tokenizer()</code>函数导出分词器配置。</p></li><li><p>导出ONNX模型：</p><p>调用<code>export_onnx()</code>函数将模型导出为ONNX格式，并得到导出的ONNX文件的路径。</p></li><li><p>验证导出的ONNX模型：</p><p>调用<code>validate_onnx()</code>函数验证导出的ONNX模型是否正确。</p></li><li><p>打印输出路径：</p><p>打印成功导出的ONNX模型的路径。</p></li></ol><h2 id="export-tokenizer-args">export_tokenizer(args)</h2><p>将预训练分词器的配置文件（tokenizer_config.json）、特殊标记映射文件（special_tokens_map.json）和词汇表文件（vocab.txt）导出到指定路径</p><ol><li><code>for tokenizer_file in ['tokenizer_config.json', 'special_tokens_map.json', 'vocab.txt']:</code>：遍历预定义的文件列表，包括分词器配置文件、特殊标记映射文件和词汇表文件。</li><li><code>file_from = args.model_path / tokenizer_file</code>：构造源文件的路径，使用<code>args.model_path</code>作为根路径，以及遍历的文件名。</li><li><code>file_to = args.output_path / tokenizer_file</code>：构造目标文件的路径，使用<code>args.output_path</code>作为根路径，以及遍历的文件名。</li><li><code>if file_from.resolve() == file_to.resolve(): continue</code>：检查源文件和目标文件是否相同。如果相同，则跳过此次迭代，不进行复制操作。</li><li><code>shutil.copyfile(file_from, file_to)</code>：将源文件复制到目标文件。使用<code>shutil.copyfile()</code>函数完成复制操作。</li></ol><h1><a href="http://finetune.py">finetune.py</a> 训练过程</h1><h2 id="do-train">do_train()</h2><p>实现了模型的训练过程，包括数据准备、模型训练、评估和保存最佳模型</p><ol><li><p>设置随机种子：</p><p>使用<code>set_seed()</code>函数设置随机种子，以确保实验的可重复性。</p></li><li><p>加载分词器和模型：</p><p>使用<code>BertTokenizerFast.from_pretrained()</code>方法加载BERT分词器。</p><p>使用<code>UIE.from_pretrained()</code>方法加载UIE模型。</p></li><li><p>准备训练数据集和验证数据集：</p><p>使用<code>IEDataset</code>类加载训练集和验证集，并进行分词和编码，得到数据加载器。</p></li><li><p>定义优化器和损失函数：</p><p>使用AdamW优化器进行参数优化。</p><p>使用二元交叉熵损失函数计算损失。</p></li><li><p>定义评估指标：</p><p>使用<code>SpanEvaluator()</code>类定义评估指标，用于评估模型性能。</p></li><li><p>如果启用早停机制：</p><p>初始化<code>EarlyStopping</code>对象，设置早停参数，并指定保存路径和日志记录方法。</p></li><li><p>开始训练：</p><p>使用循环迭代训练集数据。</p><p>在每个迭代中，加载一个batch的训练数据。</p><p>将数据移到设备（GPU或CPU）上。</p><p>将数据输入模型进行前向传播，得到输出。</p><p>计算损失并反向传播，更新模型参数。</p><p>计算并记录训练损失。</p><p>每隔一定步数，打印训练信息，并保存模型。</p></li><li><p>在每个一定步数，进行验证：</p><p>加载验证集数据，评估模型性能。</p><p>打印验证结果，并保存性能最好的模型。</p></li><li><p>如果启用了早停机制：</p><p>在每个一定步数，进行验证。</p><p>如果验证损失没有改善，则更新早停计数器。</p><p>如果触发了早停条件，则保存模型并退出训练。</p></li></ol><h3 id="IEDataset（）">IEDataset（）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">train_ds = IEDataset(args.train_path, tokenizer=tokenizer,</span><br><span class="line">                     max_seq_len=args.max_seq_len)</span><br></pre></td></tr></table></figure><h3 id="SpanEvaluator-跨度评估器">SpanEvaluator() 跨度评估器</h3><p>用于评估信息提取任务中模型性能的评估器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">metric = SpanEvaluator()</span><br></pre></td></tr></table></figure><h3 id="EarlyStopping">EarlyStopping</h3><p>如果在给定的耐心后验证损失没有改善，则提前停止训练</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">early_stopping = EarlyStopping(</span><br><span class="line">    patience=<span class="number">7</span>, verbose=<span class="literal">True</span>, trace_func=trace_func,</span><br><span class="line">    save_dir=early_stopping_save_dir)</span><br></pre></td></tr></table></figure><h3 id="evaluate">evaluate()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dev_loss_avg, precision, recall, f1 = evaluate(</span><br><span class="line">    model, metric, data_loader=dev_data_loader, device=args.device, loss_fn=criterion)</span><br></pre></td></tr></table></figure><h2 id="do-train-fake">do_train_fake()</h2><p>实现了一个模型的训练过程，其中使用了早停机制</p><ol><li>首先，使用 <code>BertTokenizerFast.from_pretrained</code> 加载一个BERT分词器，并使用 <code>UIE.from_pretrained</code> 加载一个模型。如果设备为GPU，则将模型移至GPU上。</li><li>然后，分别创建训练集和验证集的数据加载器，同时初始化优化器、损失函数和评估指标。</li><li>如果启用了早停机制，则创建一个 <code>EarlyStopping</code> 对象。</li><li>进入训练循环，循环遍历每个epoch和每个batch。在每个batch中，执行模型的前向传播、计算损失、反向传播和优化器更新参数的步骤。</li><li>每隔一定步数（由 <code>args.logging_steps</code> 和 <code>args.valid_steps</code> 控制），执行模型在验证集上的评估，并根据评估结果保存模型。</li><li>如果启用了早停机制，在每个epoch结束时进行验证集的评估，并调用 <code>early_stopping</code> 对象进行早停判断。如果满足早停条件，则保存当前模型并终止训练。</li><li>最后，如果启用了早停机制并且早停触发，程序将保存当前的分词器并终止。</li></ol><h3 id="IEDatasetFake">IEDatasetFake()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_ds = IEDatasetFake(args.train_path, tokenizer=tokenizer, max_seq_len=args.max_seq_len)</span><br></pre></td></tr></table></figure><p>==和do_train()也就是数据集不同的区别==</p><h1><a href="http://utils.py">utils.py</a> 实用程序</h1><h2 id="class-IEDataset-Dataset">class IEDataset(Dataset)</h2><p>定义了一个<code>IEDataset</code>类，用于加载信息提取任务的数据集。该类继承自PyTorch的<code>Dataset</code>类，因此需要实现<code>__init__</code>、<code>__len__</code>和<code>__getitem__</code>方法。</p><ol><li><p><code>__init__(self, file_path, tokenizer, max_seq_len)</code>方法：</p><p>初始化数据集对象。</p><p><code>file_path</code>：数据集文件的路径。</p><p><code>tokenizer</code>：分词器对象，用于对文本进行分词和编码。</p><p><code>max_seq_len</code>：最大序列长度，用于控制输入文本的长度。</p><p>将文件路径、分词器和最大序列长度保存为对象属性。</p><p>使用<code>reader()</code>函数从文件中读取数据，并将其转换为列表</p></li><li><p><code>__len__(self)</code>方法：</p><p>返回数据集的长度，即数据集中样本的数量。</p></li><li><p><code>__getitem__(self, index)</code>方法：</p><p>根据给定的索引，获取数据集中对应位置的样本。</p><p>调用<code>convert_example()</code>函数，将原始数据转换为模型可以接受的格式，并返回转换后的样本。</p></li></ol><h3 id="convert-example">convert_example()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> convert_example(self.dataset[index], tokenizer=self.tokenizer, max_seq_len=self.max_seq_len)</span><br></pre></td></tr></table></figure><h2 id="def-convert-example-example-tokenizer-max-seq-len">def convert_example(example, tokenizer, max_seq_len)</h2><p>将原始样本转换为模型可以接受的格式，包括对文本进行分词和编码，以及构建起始和结束标记</p><ul><li><code>example</code>：原始样本，是一个包含标题、提示、内容和结果列表等字段的字典。</li><li><code>tokenizer</code>：分词器对象，用于对文本进行分词和编码。</li><li><code>max_seq_len</code>：最大序列长度，用于控制输入文本的长度。</li></ul><ol><li>使用分词器对提示和内容进行分词和编码，得到输入的编码序列。使用<code>tokenizer()</code>方法进行处理，设置了截断、最大长度和添加特殊标记等参数。</li><li>获取编码序列中每个字符的偏移量映射，并对其进行处理，将偏移量对齐到编码序列中的位置。</li><li>根据结果列表中的实体位置信息，将编码序列中对应位置的标记设置为起始标记和结束标记。</li><li>构建包含输入编码序列、类型编码序列、注意力掩码、起始标记和结束标记的输出列表。</li><li>对输出列表中的各项进行填充，保证它们的长度都为<code>max_seq_len</code>。</li><li>返回转换后的样本，作为模型的输入。</li></ol><h3 id="map-offset">map_offset()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start = map_offset(item[<span class="string">&quot;start&quot;</span>] + bias, offset_mapping)</span><br></pre></td></tr></table></figure><h2 id="map-offset-ori-offset-offset-mapping">map_offset(ori_offset, offset_mapping)</h2><p>将 ori 偏移量映射到令牌偏移量,在原始文本和令牌序列之间建立起一个映射关系，以便后续处理时能够正确地处理实体的位置信息</p><ol><li>遍历 <code>offset_mapping</code> 中的每个偏移量对，即每个子词的起始和结束位置在原始文本中的偏移量。</li><li>检查 <code>ori_offset</code> 是否落在当前偏移量对所表示的区间内。</li><li>如果 <code>ori_offset</code> 落在了某个区间内，则返回该区间对应的子词在令牌序列中的索引。</li><li>如果 <code>ori_offset</code> 不在任何一个区间内，则返回 -1，表示无法找到对应的子词。</li></ol><ul><li><code>ori_offset</code>：原始文本中的字符偏移量，即原始文本中的字符位置。</li><li><code>offset_mapping</code>：一个包含了每个子词的起始和结束字符在原始文本中的偏移量的列表，这个列表是由分词器生成的。</li></ul><h2 id="class-SpanEvaluator">class SpanEvaluator</h2><p>跨度评估器 计算跨度检测的精度、召回率和 F1 分数</p><h3 id="compute">compute()</h3><p>计算跨度检测的精度、召回率和 F1 分数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">compute</span>(<span class="params">self, start_probs, end_probs, gold_start_ids, gold_end_ids</span>)</span><br></pre></td></tr></table></figure><h3 id="accumulate">accumulate()</h3><p>返回所有累积小批量的平均精度、召回率和 f1 分数</p><h3 id="get-bool-ids-greater-than">get_bool_ids_greater_than()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pred_start_ids = get_bool_ids_greater_than(start_probs)</span><br></pre></td></tr></table></figure><h3 id="eval-span">eval_span()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[_correct, _infer, _label] = self.eval_span(</span><br><span class="line">    predict_start_ids, predict_end_ids, label_start_ids,</span><br><span class="line">    label_end_ids)</span><br></pre></td></tr></table></figure><h2 id="get-bool-ids-greater-than-2">get_bool_ids_greater_than()</h2><p>获取概率数组中最后一个维度的 idx，该维度大于限制。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_bool_ids_greater_than</span>(<span class="params">probs, limit=<span class="number">0.5</span>, return_prob=<span class="literal">False</span></span>)</span><br></pre></td></tr></table></figure><h2 id="eval-span-2">eval_span()</h2><p>评估位置提取（开始、结束）<br>返回 num_correct、num_infer、num_label<br>输入：[1， 2， 10] [4， 12] [2， 10] [4， 11]<br>输出：（1、2、2）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">eval_span</span>(<span class="params">self, predict_start_ids, predict_end_ids, label_start_ids,label_end_ids</span>)</span><br></pre></td></tr></table></figure><h3 id="get-span">get_span()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pred_set = get_span(predict_start_ids, predict_end_ids)</span><br></pre></td></tr></table></figure><h2 id="get-span-2">get_span()</h2><p>获取概率数组中最后一个维度的 idx，该维度大于限制(不准确)</p><p>将起始位置和结束位置的列表转换为跨度集合，并确保跨度集合中的区间没有重叠√</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_span</span>(<span class="params">start_ids, end_ids, with_prob=<span class="literal">False</span></span>)</span><br></pre></td></tr></table></figure><h2 id="class-EarlyStopping">class EarlyStopping</h2><p>如果在给定的耐心后验证损失没有改善，则提前停止训练，保存最佳模型状态。</p><h3 id="save-checkpoint">save_checkpoint()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.save_checkpoint</span><br></pre></td></tr></table></figure><h2 id="save-checkpoint-self-val-loss-model">save_checkpoint(self, val_loss, model)</h2><p>在验证损失减少时保存模型。</p><h2 id="class-IEDatasetFake-Dataset">class IEDatasetFake(Dataset)</h2><p>从一个假的jsonl文件中读取数据</p><h3 id="convert-example-fake">convert_example_fake()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> convert_example_fake(self.dataset[index], tokenizer=self.tokenizer, max_seq_len=self.max_seq_len)</span><br></pre></td></tr></table></figure><h2 id="convert-example-fake-2">convert_example_fake()</h2><p>将数据集中的每个样本转换为模型输入所需的格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">convert_example_fake</span>(<span class="params">example, tokenizer, max_seq_len</span>):</span><br></pre></td></tr></table></figure><h2 id="convert-example-2">convert_example()</h2><p>将数据集中的每个样本转换为模型输入所需的格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">convert_example</span>(<span class="params">example, tokenizer, max_seq_len</span>):</span><br></pre></td></tr></table></figure><h1><a href="http://evaluate.py">evaluate.py</a> 评估函数</h1><p>eval_base.py 和 <a href="http://evaluate.py">evaluate.py</a> 一样</p><p>@torch.no_grad()装饰器,表示在函数内部不会对梯度进行计算，这样可以节省内存和计算资源。</p><h2 id="evaluate-2">evaluate()</h2><p>给定一个数据集，评估模型并计算指标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">evaluate</span>(<span class="params">model, metric, data_loader, device=<span class="string">&#x27;gpu&#x27;</span>, loss_fn=<span class="literal">None</span>, show_bar=<span class="literal">True</span></span>):</span><br></pre></td></tr></table></figure><h3 id="metric-compute——SpanEvaluator-compute">metric.compute——SpanEvaluator-compute()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num_correct, num_infer, num_label = metric.compute(start_prob, end_prob,start_ids, end_ids)</span><br></pre></td></tr></table></figure><h3 id="accumulate-2">accumulate()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">precision, recall, f1 = metric.accumulate()</span><br></pre></td></tr></table></figure><p>给定一个数据集，它评估模型并计算指标。</p><h3 id="参数">参数</h3><p>​        model（obj：‘torch.nn.Module’）：对文本进行分类的模型。<br>​        metric（obj：‘Metric’）：评估指标。<br>​        data_loader（obj：‘torch.utils.data.DataLoader’）：生成批处理的数据集加载器。</p><ol><li>解包当前批次中的数据</li><li>提取开始标签和结束标签的概率预测,转换为torch.float32类型</li><li>计算损失函数</li><li>使用评估指标对象metric的compute方法，计算预测结果的正确数量、总预测数量和总标签数量</li></ol><h2 id="do-eval">do_eval()</h2><ol><li>从args.model_path中加载预训练的BERT模型和相应的tokenizer。UIE.from_pretrained(args.model_path)会加载保存的模型参数。</li><li>如果args.device为’gpu’，则将模型移动到GPU上。</li><li>创建一个IEDataset对象用于加载测试集数据，并将其封装成一个DataLoader对象test_data_loader，用于批处理数据。</li><li>使用SpanEvaluator评估指标初始化metric。</li><li>调用evaluate()函数评估模型在测试集上的性能，得到精确度、召回率和F1分数，并打印出来。</li></ol><h2 id="if-name-“main”">if <strong>name</strong> == “<strong>main</strong>”</h2><ol><li>通过argparse解析传入的参数，其中包括模型路径、测试集路径、批次大小、最大序列长度和设备类型。</li><li>调用do_eval()函数执行评估过程。</li></ol><h1><a href="http://model.py">model.py</a> 模型损失计算</h1><p>model_base.py 和 model.py差不多，模型加载被注释</p><p>二元交叉熵损失函数通常用于二分类任务，其中每个样本只有两个可能的类别。在自然语言处理中，序列标注任务（如命名实体识别、问答任务中的答案抽取等）通常被建模为一个二分类问题，即对每个位置（或标记）进行分类，判断该位置是否为目标实体的起始或结束位置。</p><p>因此，在命名实体识别等任务中，起始位置和结束位置的预测可以视为一个二分类问题，而二元交叉熵损失函数则是用于衡量模型的预测与真实标签之间的差异，是二分类任务中常用的损失函数之一。</p><p>具体来说，二元交叉熵损失函数将模型预测的概率与真实的标签进行比较，如果模型预测正确，则损失接近于零，否则损失较大。通过最小化损失函数，模型可以在训练过程中调整参数，以使得模型的预测更接近于真实标签，从而提高模型的性能。</p><p>因此，在起始位置和结束位置的预测任务中，使用二元交叉熵损失函数是为了使模型能够学习正确地预测实体的起始和结束位置，从而提高模型在序列标注任务中的性能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kl_loss = use_kl(input_ids,token_type_ids,attention_mask, start_prob, end_prob)</span><br></pre></td></tr></table></figure><h2 id="use-kl">use_kl()</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">use_kl</span>(<span class="params">input_ids,token_type_ids,attention_mask, start_prob, end_prob</span>):</span><br></pre></td></tr></table></figure><h1>modeling_layer.py 模型搭建</h1><p>模型搭建过程</p><p>ErnieLayoutModel: ErnieLayout模型的主要实现类。<br>ErnieLayoutPretrainedModel: 预训练的ErnieLayout模型。<br>ErnieLayoutForTokenClassification: 用于标记分类任务的ErnieLayout模型。<br>ErnieLayoutForSequenceClassification: 用于序列分类任务的ErnieLayout模型。<br>ErnieLayoutForPretraining: 用于预训练任务的ErnieLayout模型。<br>ErnieLayoutForQuestionAnswering: 用于问答任务的ErnieLayout模型。</p><h2 id="def-relative-position-bucket">def relative_position_bucket</h2><p>一个整数张量 relative_position 转换为相对注意力的桶号</p><h2 id="class-ErnieLayoutPooler-nn-Module">class ErnieLayoutPooler(nn.Module)</h2><p>池化操作 从模型的隐藏状态中提取汇总特征，以便用于下游任务的输入</p><h2 id="class-ErnieLayoutEmbeddings-nn-Module">class ErnieLayoutEmbeddings(nn.Module)</h2><p>包括来自单词、位置和token_type嵌入的嵌入</p><h2 id="class-ErnieLayoutPretrainedModel-PreTrainedModel">class ErnieLayoutPretrainedModel(PreTrainedModel)</h2><p>用于处理权重初始化，加入梯度检查点技术</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config_class = ErnieLayoutConfig  <span class="comment"># ErnieLayoutConfig 是模型的配置类，用于存储模型的各种参数</span></span><br></pre></td></tr></table></figure><p><img src="../../source/imgs/$%7Bfiilename%7D/image-20240406163003567.png" alt=""></p><p>==飘红，文件夹里面没有这个文件？找不到存储模型各种参数的地方~==</p><p>需要安装外部的包paddle和paddlenlp</p><h2 id="class-ErnieLayoutSelfOutput-nn-Module">class ErnieLayoutSelfOutput(nn.Module)</h2><p>定义了自注意力机制的输出部分</p><h2 id="class-ErnieLayoutSelfAttention-nn-Module">class ErnieLayoutSelfAttention(nn.Module)</h2><h1>stack_finetune.py 对抗匹配</h1><p>stack_finetune1.py和stack_finetune.py一样</p><h2 id="class-EMA-指数移动平均">class EMA() 指数移动平均</h2><h2 id="class-IEDDataset-Dataset">class IEDDataset(Dataset)</h2><p>用于在训练或测试深度学习模型时批量加载数据</p><h2 id="do-train-fake-2">do_train_fake()</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">do_train_fake</span>(<span class="params">train_data_loader, dev_data_loader, model</span>)</span><br></pre></td></tr></table></figure><p>初始化相关的工具和参数，包括随机种子、EMA（Exponential Moving Average）对象、FGM（Fast Gradient Method）对象、分词器、优化器、损失函数、评估指标等。</p><p>使用循环迭代训练数据集的每一个epoch。在每个epoch中，使用循环迭代训练数据集的每一个batch。</p><p>对于每个batch，首先将数据传入模型进行前向传播，得到模型的预测结果和损失值。然后根据损失值进行反向传播，更新模型参数。</p><p>在每个epoch的训练过程中，记录并输出训练过程中的损失值和训练速度等信息。</p><p>在每个epoch结束后，进行模型的评估。评估过程包括使用验证集对模型进行评估，并计算评估指标（如精确度、召回率、F1值）。</p><p>根据评估指标的表现，选择是否保存模型。如果评估指标优于之前的最佳指标，则保存当前模型为最佳模型。</p><p>可选地进行早停策略。如果评估指标在一定的连续迭代中没有提升，则停止训练，并保存当前模型。</p><p>这段代码的逻辑比较清晰，主要包括模型的训练和评估过程，以及一些训练过程中的辅助操作，如EMA、FGM和早停策略。</p><p>//增加了EMA和FGM而已</p><h2 id="class-FGM-用于对抗训练，提升鲁棒性">class FGM() 用于对抗训练，提升鲁棒性</h2><p>使用方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fgm.attack()</span><br><span class="line">loss_adv = loss_func(x, lable)</span><br><span class="line">loss_adv.backward(retain_graph=<span class="literal">True</span>)</span><br><span class="line">fgm.restore()</span><br></pre></td></tr></table></figure><h2 id="stacking-10-折交叉验证">stacking() 10 折交叉验证</h2><h2 id="do-train-2">do_train()</h2><p>//增加了EMA和FGM而已</p><h1>parse_data.py 读取NER数据集</h1><p>从给定的文件路径中读取NER数据集，将其重新解析为指定格式的数据，并将解析后的数据保存到新的文件中。</p><h1><a href="http://predict.py">predict.py</a> 信息提取</h1><ul><li>读取给定文件路径中的原始数据集文件，该文件应该是一个 JSON 格式的文件。</li><li>遍历数据集中的每个样本，并针对每个样本进行信息提取。</li><li>对于每个提取的结果，构造一个字典，包括当前任务的 ID、测试任务的 ID、样本 ID、文本、起始位置、结束位置和类型。</li><li>将所有提取的结果保存到一个新文件中。</li></ul><p>函数 <code>parse_data</code> 接受以下参数：</p><ul><li><code>file_path</code>：原始数据集文件的路径。</li><li><code>current_task</code>：当前任务的 ID。</li><li><code>test_task</code>：测试任务的 ID。</li><li><code>task_name</code>：任务名称，用于从信息提取结果中提取对应任务的信息。</li><li><code>write_name</code>：保存提取结果的文件路径。</li></ul><p>在函数内部，首先读取原始数据集文件，然后遍历其中的每个样本。对于每个样本，调用信息提取函数（假设为 <code>ie</code>）进行提取。提取的结果是一个字典列表，包含提取的文本片段及其位置等信息。然后，将提取的结果转换为指定格式的字典，并添加到 <code>data</code> 列表中。最后，将整个 <code>data</code> 列表保存到指定的文件中。</p><h1>uie_predictor.py</h1><h2 id="class-ONNXInferBackend-object">class ONNXInferBackend(object)</h2><p><img src="../../source/imgs/$%7Bfiilename%7D/image-20240409232724957.png" alt=""></p><p><img src="../../source/imgs/$%7Bfiilename%7D/image-20240409232803101.png" alt=""></p><p>==飘红，文件夹里面没有这个文件？==</p>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Few-shot代码梳理（粗略版）</title>
      <link href="/2024/04/24/NER/Few-shot%E4%BB%A3%E7%A0%81%E6%A2%B3%E7%90%86/"/>
      <url>/2024/04/24/NER/Few-shot%E4%BB%A3%E7%A0%81%E6%A2%B3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>我理解的关于代码的实现，可能不太准确，其中也有一些疑问：</p><p>运行stack_fintuine1.py实现微调，里面使用了EMA+FGM的模式</p><p>持续学习任务对于半监督数据比较敏感，避免使用半监督学习方式来进行微调，而是采用EMA（Exponential Moving Average）指数移动平均+FGM（Fast Gradient Method）对抗训练的方式。</p><p>通过10折交叉验证的方式对模型进行了训练，获得每个类别训练的最优模型（即F1分数最高的模型），这个模型会作为下一个类别模型蒸馏时使用的教师模型，由此实现类增量。</p><p>教师模型的路径需要指定，指定方式是改变model.py中model=…里面的路径。而model模型本身定义的是一个知识蒸馏的模型（里面计算了知识蒸馏损失即KL散度损失和二元交叉熵损失），这个模型在stack_fintuine1.py中经过反向传播、梯度下降，实现知识蒸馏。</p><p>主要的问题在下面的3.蒸馏代码微调里面，没搞懂这个教师模型具体是如何传递的（在操作部分有标记）</p><h1>原始数据处理为训练格式</h1><h2 id="parse-data-py">parse_data.py</h2><p>将原始数据集处理为id：统一设置成574714 data:即文本 label:[[开始位置, 结束位置, “类型”]]的格式<br>将处理完成的数据保存到{}_ner_train_data.json中<br>因为有6个训练任务 所以执行6次，最后得到6个{}_ner_train_data.json，标号1到6<br>文件夹已经给出处理好后的文件，但是没有原始文件raw_data</p><h2 id="doccano-py"><a href="http://doccano.py">doccano.py</a></h2><p>检查doccano_file文件和保存目录是否存在</p><p>验证数据集分割比例的数量，只接受3个，应该是训练集、验证集、测试集；创建一个函数</p><p>读取原始标注数据，这里的原始标注数据应该是从Doccano中导出的，Doccano是一个开源的文本标注工具，处理文本标注工作</p><p>定义 convert_ext_examples 函数将原始示例 examples 转换为实体（entities）和关系（relations）的格式，并将二者合并起来形成新的examples示例数据列表</p><p>定义 convert_cls_examples 函数将原始示例 examples 转换为适合分类任务的格式。在每个文本样本之间加上前缀，并准备分类标签</p><p>定义_save_examples函数将处理好的数据集保存到指定文件中</p><p>根据任务类别：外部实体识别任务、分类任务调用相应的函数（convert_ext_examples、convert_ext_examples）创建示例，划分数据集</p><p>使用时根据命令行指令<code>python3 doccano.py -d </code></p><p><code>./data/3_ner_train_data.json -save_p trains3.txt</code>这个文件就是将前面得到的<code>&#123;&#125;_ner_train_data.json</code>转成<code>trains.txt</code>形式，在文件<code>data</code>下可以见到相应的文件</p><h1>代码微调</h1><h2 id="从train-base-sh中获取六个任务顺序的第一个模型权重">从train_base.sh中获取六个任务顺序的第一个模型权重</h2><p>训练数据均在<code>../data/user_data/data/test_data</code>下 ，保存模型路径均在<code>../data/user_data/saved_model</code></p><p>训练数据<code>trains1.txt</code> 对应<code>model1---....---   trains6.txt</code>对应<code>model6 </code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#运行stack_fintuine1.py</span></span><br><span class="line"><span class="comment">#这里的model指定预训练模型为model_base</span></span><br><span class="line">python3 ../data/user_data/stack_fintuine1.py \</span><br><span class="line">    --train_path <span class="string">&quot;../data/user_data/data/test_data/trains1.txt&quot;</span> \</span><br><span class="line">    --dev_path <span class="string">&quot;./dev.txt&quot;</span> \</span><br><span class="line">    --save_dir <span class="string">&quot;../data/user_data/saved_model/model1&quot;</span> \</span><br><span class="line">    --learning_rate <span class="number">1e-5</span> \</span><br><span class="line">    --batch_size <span class="number">4</span> \</span><br><span class="line">    --max_seq_len <span class="number">512</span> \</span><br><span class="line">    --num_epochs <span class="number">2</span> \</span><br><span class="line">    --model <span class="string">&quot;../data/user_data/model_base&quot;</span> \</span><br><span class="line">    --seed <span class="number">1000</span> \</span><br><span class="line">    --logging_steps <span class="number">10</span> \</span><br><span class="line">    --valid_steps <span class="number">25</span> \</span><br><span class="line">    --device <span class="string">&quot;gpu&quot;</span></span><br></pre></td></tr></table></figure><h2 id="stack-fintuine1-py">stack_fintuine1.py</h2><p>微调方式：采用EMA（Exponential Moving Average）指数移动平均+FGM（Fast Gradient Method）对抗训练的方式</p><h3 id="首先定义EMA类">首先定义EMA类</h3><p>在深度学习中，经常会使用EMA（指数移动平均）这个方法对模型的参数做平均，以提高测试指标并增加模型鲁棒。通过使用 EMA，模型的参数会逐渐趋向于一个更稳定的值，有助于防止过拟合，并可能提高模型在未见数据上的表现。</p><p>普通的参数权重相当于一直累积更新整个训练过程的梯度，使用EMA的参数权重相当于使用训练过程梯度的加权平均（刚开始的梯度权值很小）。由于刚开始训练不稳定，得到的梯度给更小的权值更为合理，所以EMA会有效。</p><p>参考：<a href="http://t.csdnimg.cn/UA3qI">http://t.csdnimg.cn/UA3qI</a></p><h3 id="EMA代码实现">EMA代码实现</h3><h4 id="init"><strong>init</strong></h4><p>初始化</p><h4 id="register">register</h4><p>遍历模型的所有参数。<br>对于需要梯度的参数（param.requires_grad 为 True），在 self.shadow 中创建一个条目，并将其初始化为参数当前值的副本。</p><h4 id="update">update</h4><p>更新 self.shadow 中存储的每个参数的 EMA 值。<br>计算新的 EMA 值，使用当前参数值和旧的 EMA 值的加权平均，权重由 1.0 - self.decay 和 self.decay 决定。</p><h4 id="apply-shadow">apply_shadow</h4><p>将 self.shadow 中的 EMA 值应用到模型参数上。<br>同时备份原始参数值到 self.backup 中，以便之后可以恢复。</p><h4 id="restore">restore</h4><p>从 self.backup 中恢复模型的原始参数值。<br>清空 self.backup 字典。</p><h3 id="定义IEDDataset-类">定义IEDDataset 类</h3><p>用于在训练或测试深度学习模型时批量加载数据</p><h3 id="定义do-train-fake-train-data-loader-dev-data-loader-model-函数">定义do_train_fake(train_data_loader, dev_data_loader, model)函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#训练准备，初始化</span></span><br><span class="line">set_seed(args.seed)<span class="comment">#设置随机种子，以确保实验的可重复性。这样可以保证每次运行训练过程时，随机数生成的结果（如数据打乱、权重初始化等）是一致的。</span></span><br><span class="line">show_bar = <span class="literal">True</span></span><br><span class="line">ema = EMA(model, <span class="number">0.999</span>)<span class="comment">#使用EMA，衰减系数定为0.999</span></span><br><span class="line">ema.register()</span><br><span class="line">fgm = FGM(model)<span class="comment">#使用FGM对抗训练</span></span><br><span class="line">tokenizer = BertTokenizerFast.from_pretrained(args.model)</span><br><span class="line">optimizer = torch.optim.AdamW(</span><br><span class="line">    lr=args.learning_rate, params=model.parameters())</span><br><span class="line"></span><br><span class="line">criterion = torch.nn.functional.binary_cross_entropy<span class="comment">#二元交叉熵损失，用于二分类</span></span><br><span class="line">metric = SpanEvaluator()<span class="comment">#评价指标选取SpanEvaluator，用于评估命名实体识别的性能</span></span><br></pre></td></tr></table></figure><h3 id="早停法">早停法</h3><p>当我们训练深度学习神经网络的时候通常希望能获得最好的泛化性能（generalization performance，即可以很好地拟合数据）。但是所有的标准深度学习神经网络结构如全连接多层感知机都很容易过拟合：当网络在训练集上表现越来越好，错误率越来越低的时候，实际上在某一刻，它在测试集的表现已经开始变差。</p><p>早停法基本含义是在训练中计算模型在验证集上的表现，当模型在验证集上的表现开始下降的时候，停止训练，这样就能避免继续训练导致过拟合的问题。其主要步骤如下：</p><ol><li>将原始的训练数据集划分成训练集和验证集</li><li>只在训练集上进行训练，并每个一个周期计算模型在验证集上的误差，例如，每15次epoch（mini batch训练中的一个周期）</li><li>当模型在验证集上的误差比上一次训练结果差的时候停止训练</li><li>使用上一次迭代结果中的参数作为模型的最终参数</li></ol><p>参考：<a href="http://t.csdnimg.cn/OmWyy">http://t.csdnimg.cn/OmWyy</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#早停设置</span></span><br><span class="line"><span class="keyword">if</span> args.early_stopping:</span><br><span class="line">    early_stopping_save_dir = os.path.join(</span><br><span class="line">        args.save_dir, <span class="string">&quot;early_stopping&quot;</span>)<span class="comment">#定义早停机制使用的保存目录。这个目录将存储早停过程中的模型和相关数据。</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(early_stopping_save_dir):</span><br><span class="line">        os.makedirs(early_stopping_save_dir)</span><br><span class="line">    <span class="keyword">if</span> show_bar:</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">trace_func</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">            <span class="keyword">with</span> logging_redirect_tqdm([logger.logger]):</span><br><span class="line">                logger.info(*args, **kwargs)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        trace_func = logger.info</span><br><span class="line">    early_stopping = EarlyStopping(</span><br><span class="line">        patience=<span class="number">7</span>, verbose=<span class="literal">True</span>, trace_func=trace_func,<span class="comment">#patience=7: 早停的耐心值，表示在性能不再提升的情况下，训练可以继续进行的额外轮数。</span></span><br><span class="line">        save_dir=early_stopping_save_dir)<span class="comment">#创建一个 EarlyStopping 对象，它将监控验证集上的性能，并在性能不再提升时停止训练。</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#训练循环</span></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> epoch_iterator:</span><br><span class="line">        train_data_iterator = train_data_loader</span><br><span class="line">        <span class="keyword">if</span> show_bar:</span><br><span class="line">            train_data_iterator = tqdm(train_data_iterator,</span><br><span class="line">                                       desc=<span class="string">f&#x27;Training Epoch <span class="subst">&#123;epoch&#125;</span>&#x27;</span>, unit=<span class="string">&#x27;batch&#x27;</span>)</span><br><span class="line">            train_data_iterator.set_postfix(train_postfix_info)</span><br><span class="line">        <span class="keyword">for</span> batch <span class="keyword">in</span> train_data_iterator:</span><br><span class="line">            <span class="keyword">if</span> show_bar:</span><br><span class="line">                epoch_iterator.refresh()</span><br><span class="line">            input_ids, token_type_ids, att_mask, start_ids, end_ids = batch</span><br><span class="line">            <span class="comment">#for batch in train_data_iterator:</span></span><br><span class="line">            <span class="comment">#从批次中提取数据并根据需要将其移动到 GPU</span></span><br><span class="line">            <span class="comment"># input_ids, token_type_ids, att_mask, start_ids, end_ids = batch</span></span><br><span class="line">            <span class="keyword">if</span> args.device == <span class="string">&#x27;gpu&#x27;</span>:</span><br><span class="line">                input_ids = input_ids.cuda()</span><br><span class="line">                token_type_ids = token_type_ids.cuda()</span><br><span class="line">                att_mask = att_mask.cuda()</span><br><span class="line">                start_ids = start_ids.cuda()</span><br><span class="line">                end_ids = end_ids.cuda()</span><br><span class="line">            <span class="comment">#调用模型进行预测</span></span><br><span class="line">            outputs = model(input_ids=input_ids,</span><br><span class="line">                            token_type_ids=token_type_ids,</span><br><span class="line">                            attention_mask=att_mask,start_positions=start_ids,end_positions=end_ids)</span><br><span class="line">            <span class="comment">#计算损失并进行反向传播</span></span><br><span class="line">            loss, start_prob, end_prob = outputs[<span class="number">0</span>], outputs[<span class="number">1</span>], outputs[<span class="number">2</span>]</span><br><span class="line">            <span class="comment">#print(loss)</span></span><br><span class="line">            loss.backward()</span><br><span class="line">            <span class="comment"># 增加对抗</span></span><br><span class="line">            fgm.attack()</span><br><span class="line">            outputs = model(input_ids=input_ids,</span><br><span class="line">                            token_type_ids=token_type_ids,</span><br><span class="line">                            attention_mask=att_mask, start_positions=start_ids, end_positions=end_ids)</span><br><span class="line">            loss_adv, start_prob, end_prob = outputs[<span class="number">0</span>], outputs[<span class="number">1</span>], outputs[<span class="number">2</span>]</span><br><span class="line">            loss_adv.backward()</span><br><span class="line">            fgm.restore()</span><br><span class="line"></span><br><span class="line">            ema.update() <span class="comment"># 增加ema</span></span><br><span class="line">            optimizer.step()</span><br><span class="line">            optimizer.zero_grad()</span><br><span class="line">            loss_list.append(<span class="built_in">float</span>(loss))</span><br><span class="line">            loss_sum += <span class="built_in">float</span>(loss)</span><br><span class="line">            loss_num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> show_bar:</span><br><span class="line">                loss_avg = loss_sum / loss_num</span><br><span class="line">                train_postfix_info.update(&#123;</span><br><span class="line">                    <span class="string">&#x27;loss&#x27;</span>: <span class="string">f&#x27;<span class="subst">&#123;loss_avg:<span class="number">.5</span>f&#125;</span>&#x27;</span></span><br><span class="line">                &#125;)</span><br><span class="line">                train_data_iterator.set_postfix(train_postfix_info)</span><br><span class="line">            <span class="comment">#每次训练迭代后，全局步骤计数器增加 1</span></span><br><span class="line">            global_step += <span class="number">1</span></span><br><span class="line">            <span class="comment">#日志记录：每隔 args.logging_steps 步，记录一次日志</span></span><br><span class="line">            <span class="keyword">if</span> global_step % args.logging_steps == <span class="number">0</span>:</span><br><span class="line">                time_diff = time.time() - tic_train</span><br><span class="line">                loss_avg = loss_sum / loss_num</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> show_bar:</span><br><span class="line">                    <span class="keyword">with</span> logging_redirect_tqdm([logger.logger]):</span><br><span class="line">                        logger.info(</span><br><span class="line">                            <span class="string">&quot;global step %d, epoch: %d, loss: %.5f, speed: %.2f step/s&quot;</span></span><br><span class="line">                            % (global_step, epoch, loss_avg,</span><br><span class="line">                               args.logging_steps / time_diff))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    logger.info(</span><br><span class="line">                        <span class="string">&quot;global step %d, epoch: %d, loss: %.5f, speed: %.2f step/s&quot;</span></span><br><span class="line">                        % (global_step, epoch, loss_avg,</span><br><span class="line">                           args.logging_steps / time_diff))</span><br><span class="line">                tic_train = time.time()</span><br><span class="line">            <span class="comment">#模型评估与保存</span></span><br><span class="line">            <span class="keyword">if</span> global_step % args.valid_steps == <span class="number">0</span>:</span><br><span class="line">                <span class="comment">#每隔 args.valid_steps 步，对模型在验证集上的性能进行评估，并保存模型和分词器的状态。</span></span><br><span class="line">                save_dir = os.path.join(</span><br><span class="line">                    args.save_dir, <span class="string">&quot;model_%d&quot;</span> % global_step)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(save_dir):</span><br><span class="line">                    os.makedirs(save_dir)</span><br><span class="line">                model_to_save = model</span><br><span class="line">                model_to_save.save_pretrained(save_dir)</span><br><span class="line">                tokenizer.save_pretrained(save_dir)</span><br><span class="line">                <span class="comment">#删除一些旧的模型</span></span><br><span class="line">                <span class="keyword">if</span> args.max_model_num:</span><br><span class="line">                    model_to_delete = global_step-args.max_model_num*args.valid_steps</span><br><span class="line">                    model_to_delete_path = os.path.join(</span><br><span class="line">                        args.save_dir, <span class="string">&quot;model_%d&quot;</span> % model_to_delete)</span><br><span class="line">                    <span class="keyword">if</span> model_to_delete &gt; <span class="number">0</span> <span class="keyword">and</span> os.path.exists(model_to_delete_path):</span><br><span class="line">                        shutil.rmtree(model_to_delete_path)</span><br><span class="line">                <span class="comment">#应用EMA的参数</span></span><br><span class="line">                ema.apply_shadow()</span><br><span class="line">                <span class="comment">#评估模型性能</span></span><br><span class="line">                dev_loss_avg, precision, recall, f1 = evaluate(</span><br><span class="line">                    model, metric, data_loader=dev_data_loader, device=args.device, loss_fn=criterion)</span><br><span class="line">                ema.restore()</span><br><span class="line">                <span class="keyword">if</span> show_bar:</span><br><span class="line">                    train_postfix_info.update(&#123;</span><br><span class="line">                        <span class="string">&#x27;F1&#x27;</span>: <span class="string">f&#x27;<span class="subst">&#123;f1:<span class="number">.3</span>f&#125;</span>&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;dev loss&#x27;</span>: <span class="string">f&#x27;<span class="subst">&#123;dev_loss_avg:<span class="number">.5</span>f&#125;</span>&#x27;</span></span><br><span class="line">                    &#125;)</span><br><span class="line">                    train_data_iterator.set_postfix(train_postfix_info)</span><br><span class="line">                    <span class="keyword">with</span> logging_redirect_tqdm([logger.logger]):</span><br><span class="line">                        logger.info(<span class="string">&quot;Evaluation precision: %.5f, recall: %.5f, F1: %.5f, dev loss: %.5f&quot;</span></span><br><span class="line">                                    % (precision, recall, f1, dev_loss_avg))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    logger.info(<span class="string">&quot;Evaluation precision: %.5f, recall: %.5f, F1: %.5f, dev loss: %.5f&quot;</span></span><br><span class="line">                                % (precision, recall, f1, dev_loss_avg))</span><br><span class="line">                <span class="comment"># Save model which has best F1，如果当前模型在 F1 分数上超过了之前的最佳模型，则保存为最佳模型</span></span><br><span class="line">                <span class="keyword">if</span> f1 &gt; best_f1:</span><br><span class="line">                    <span class="keyword">if</span> show_bar:</span><br><span class="line">                        <span class="keyword">with</span> logging_redirect_tqdm([logger.logger]):</span><br><span class="line">                            logger.info(</span><br><span class="line">                                <span class="string">f&quot;best F1 performence has been updated: <span class="subst">&#123;best_f1:<span class="number">.5</span>f&#125;</span> --&gt; <span class="subst">&#123;f1:<span class="number">.5</span>f&#125;</span>&quot;</span></span><br><span class="line">                            )</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        logger.info(</span><br><span class="line">                            <span class="string">f&quot;best F1 performence has been updated: <span class="subst">&#123;best_f1:<span class="number">.5</span>f&#125;</span> --&gt; <span class="subst">&#123;f1:<span class="number">.5</span>f&#125;</span>&quot;</span></span><br><span class="line">                        )</span><br><span class="line">                    best_f1 = f1</span><br><span class="line">                    save_dir = os.path.join(args.save_dir, <span class="string">&quot;model_best&quot;</span>)</span><br><span class="line">                    model_to_save = model</span><br><span class="line">                    model_to_save.save_pretrained(save_dir)</span><br><span class="line">                    tokenizer.save_pretrained(save_dir)</span><br><span class="line">                tic_train = time.time()</span><br><span class="line">        <span class="comment">#检查是否使用了早停</span></span><br><span class="line">        <span class="keyword">if</span> args.early_stopping:</span><br><span class="line">            <span class="comment">#评估模型性能</span></span><br><span class="line">            dev_loss_avg, precision, recall, f1 = evaluate(</span><br><span class="line">                model, metric, data_loader=dev_data_loader, device=args.device, loss_fn=criterion)</span><br><span class="line">            <span class="comment">#更新进度条</span></span><br><span class="line">            <span class="keyword">if</span> show_bar:</span><br><span class="line">                train_postfix_info.update(&#123;</span><br><span class="line">                    <span class="string">&#x27;F1&#x27;</span>: <span class="string">f&#x27;<span class="subst">&#123;f1:<span class="number">.3</span>f&#125;</span>&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;dev loss&#x27;</span>: <span class="string">f&#x27;<span class="subst">&#123;dev_loss_avg:<span class="number">.5</span>f&#125;</span>&#x27;</span></span><br><span class="line">                &#125;)</span><br><span class="line">                train_data_iterator.set_postfix(train_postfix_info)</span><br><span class="line">                <span class="keyword">with</span> logging_redirect_tqdm([logger.logger]):</span><br><span class="line">                    logger.info(<span class="string">&quot;Evaluation precision: %.5f, recall: %.5f, F1: %.5f, dev loss: %.5f&quot;</span></span><br><span class="line">                                % (precision, recall, f1, dev_loss_avg))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                logger.info(<span class="string">&quot;Evaluation precision: %.5f, recall: %.5f, F1: %.5f, dev loss: %.5f&quot;</span></span><br><span class="line">                            % (precision, recall, f1, dev_loss_avg))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Early Stopping</span></span><br><span class="line">            early_stopping(dev_loss_avg, model)<span class="comment">#前面的早停设置过程中设置过</span></span><br><span class="line">            <span class="keyword">if</span> early_stopping.early_stop:</span><br><span class="line">                <span class="keyword">if</span> show_bar:</span><br><span class="line">                    <span class="keyword">with</span> logging_redirect_tqdm([logger.logger]):</span><br><span class="line">                        logger.info(<span class="string">&quot;Early stopping&quot;</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    logger.info(<span class="string">&quot;Early stopping&quot;</span>)</span><br><span class="line">                tokenizer.save_pretrained(early_stopping_save_dir)</span><br><span class="line">                <span class="comment">#早停机制触发，退出训练过程</span></span><br><span class="line">                sys.exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="定义FGM类">定义FGM类</h3><p>FGM代码实现<br><strong>init</strong><br>初始化<br>attack<br>对模型的嵌入层参数进行扰动，生成对抗样本<br>restore<br>恢复模型原始的参数数据，为下一次做准备</p><p>参考：</p><p><a href="https://zhuanlan.zhihu.com/p/91269728?utm_id=0">https://zhuanlan.zhihu.com/p/91269728?utm_id=0</a><br><a href="https://allenwind.github.io/blog/12833/">https://allenwind.github.io/blog/12833/</a></p><h3 id="定义stacking函数，实现10-折交叉验证（注释里写的）">定义stacking函数，实现10 折交叉验证（注释里写的）</h3><h4 id="10折交叉验证">10折交叉验证</h4><p>是常用的精度测试方法.将数据集分成十分，轮流将其中9份做训练1份做测试，10次的结果的均值作为对算法精度的估计</p><p>==但是kf = KFold(5, shuffle=True, random_state=789)里面设置为5，所以应该是5折交叉验证？==</p><p>在代码 <code>kf = KFold(5, shuffle=True, random_state=789)</code> 中，参数 <code>5</code> 表示将数据集分成5个折叠（或者称为“分组”），以进行10折交叉验证。这里的10折交叉验证指的是在每个折叠中，数据集被分成训练集和验证集，其中80%的数据用于训练，20%的数据用于验证。在整个过程中，每个模型都会被训练10次，每次使用不同的验证集进行验证。这有助于对模型的性能进行更全面的评估，并且可以减少由于数据集划分不同而引起的偶然性。</p><h4 id="KFold函数参数说明">KFold函数参数说明</h4><p>n_splits： 默认为3，表示将数据划分为多少份，即k折交叉验证中的k；</p><p>shuffle： 默认为False，表示是否需要打乱顺序，这个参数在很多的函数中都会涉及，如果设置为True，则会先打乱顺序再做划分，如果为False，会直接按照顺序做划分；</p><p>random_state： 默认为None，表示随机数的种子，只有当shuffle设置为True的时候才会生效。</p><h3 id="定义do-train函数">定义do_train函数</h3><p>设计与do_train_fake差不多，没有使用EMA</p><p>这样做的原因可能是在训练初期，使用 EMA 可以帮助模型更快地收敛，并减少训练过程中的波动，在模型已经相对稳定后，使用 FGM 进行对抗训练可以进一步增强模型对输入扰动的鲁棒性？</p><p>不过再这个文件里最后好像没有用上这个函数</p><h1>蒸馏代码微调</h1><p>1.根据持续学习的顺序 修改 train_path  以及save_dir  以及teacher模型路径：…/data/user_data/model.py第153行的路径</p><p>2.以第一序列为例 学习顺序为1-2-3-4-5-6，因为上述已经训练了任务1  所以此命令为蒸馏并得到2，3，4，5，6</p><p>3.加载任务2的训练数据（<code>--train_path ../data/user_data/data/test_data/train2.txt</code>）</p><p>将其保存到model1下为model2（<code>--save_dir &quot;../data/user_data/saved_model/model1/model2&quot;</code>）</p><p>修改<code>../data/user_data/model.py</code>第153行的蒸馏teacher路径为<code>../data/user_data/saved_model/model1/model_best</code></p><p>（注意 teacher模型的路径会发生变化）</p><p>4.完成任务2后 加载任务3的训练数据（<code>--train_path ../data/user_data/data/test_data/train3.txt</code>），</p><p>将其保存到model1下为model3（<code>--save_dir &quot;../data/user_data/saved_model/model1/model3&quot;</code>）</p><p>修改<code>../data/user_data/model.py</code>第153行的蒸馏teacher路径为<code>../data/user_data/saved_model/model1/model2/model_best </code></p><p>（注意 teacher模型的路径也会对应save_dir变化）</p><p>5、如果为其他序列均保存到其对应到例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">序列1： --save_dir &quot;../data/user_data/saved_model/model1/model2  </span><br><span class="line">序列2：--save_dir &quot;../data/user_data/saved_model/model2/model4  </span><br><span class="line">    --train_path &quot;../data/user_data/data/test_data/train2.txt&quot; \  </span><br><span class="line">    --dev_path &quot;./dev.txt&quot; \  </span><br><span class="line">    --save_dir &quot;../data/user_data/saved_model/model1/model2&quot; \  </span><br><span class="line">    --learning_rate 1e-5 \  </span><br><span class="line">    --batch_size 4 \  </span><br><span class="line">    --max_seq_len 512 \  </span><br><span class="line">    --num_epochs 2 \  </span><br><span class="line">    --model &quot;../data/user_data/model_base&quot; \  不知道为什么这里设置的是model_base，前面又修改的是model.py里的路径，不过model_base也没有设置teacher模型路径</span><br><span class="line">    --seed 1000 \  </span><br><span class="line">    --logging_steps 10 \  </span><br><span class="line">    --valid_steps 25 \  </span><br><span class="line">    --device &quot;gpu&quot;  </span><br></pre></td></tr></table></figure><h2 id="model-py"><a href="http://model.py">model.py</a></h2><h2 id="定义UIEModelOutput类">定义UIEModelOutput类</h2><p>继承自ModelOutput类，扩展模型输出的结构</p><h2 id="定义了UIE类">定义了UIE类</h2><p>继承自BertPreTrainedModel类</p><h3 id="init："><strong>init</strong>：</h3><p>初始化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">hasattr</span>(config, <span class="string">&#x27;use_task_id&#x27;</span>) <span class="keyword">and</span> config.use_task_id</span><br></pre></td></tr></table></figure><p>如果配置中包含 use_task_id 并且为 True，则添加任务类型嵌入（task type embeddings）到 BERT 的词嵌入层中</p><p>//为 BERT 模型添加任务类型嵌入</p><h3 id="hook">hook()</h3><p>这个函数是一个前向钩子（forward hook），用于在模型的前向传播过程中动态地修改词嵌入层的输出</p><p>使用 task_type_embeddings 层生成任务类型嵌入。这里通过调用 torch.zeros 创建一个与输入张量形状相同的零张量，并将其转换为整数类型（dtype=torch.int64），然后指定设备（device=input.device）以确保嵌入与输入张量在同一设备上（CPU 或 GPU）。</p><p>将生成的任务类型嵌入加到原始的词嵌入输出上（return output+task_type_embeddings(…)），从而修改 BERT 模型的词嵌入层输出</p><p>==感觉这里是初始化嵌入序列？==</p><p>Emmm……感觉是把前一层的输出加到后一层的输入上（可以参考Attentionm模型），model_layer.py的ErnieLayoutEmbeddings类是初始化词嵌入序列？</p><h3 id="forward">forward</h3><p>定义初始参数，fake_: Optional[torch.Tensor]=None</p><p>==这里是伪标签？==</p><p>差不多，应该是合成数据的意思感觉，假的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">input_ids：输入文本的token IDs。</span><br><span class="line">token_type_ids：用于区分文本片段的token类型 IDs。</span><br><span class="line">position_ids：位置 IDs，用于标识每个token的位置。</span><br><span class="line">attention_mask：注意力掩码，用于指示哪些token是padding的。</span><br><span class="line">head_mask：用于遮蔽模型中的注意力头部。</span><br><span class="line">inputs_embeds：可选的输入嵌入。</span><br><span class="line">start_positions：开始位置的标签，用于训练序列标注任务。</span><br><span class="line">end_positions：结束位置的标签，用于训练序列标注任务。</span><br><span class="line">fake_：一个可选的张量，用于指示哪些token是假的。</span><br><span class="line">output_attentions：是否返回注意力权重。</span><br><span class="line">output_hidden_states：是否返回隐藏状态。</span><br><span class="line">return_dict：是否返回输出结果的字典形式。</span><br><span class="line">comput_kl：是否计算KL散度。</span><br></pre></td></tr></table></figure><p>定义模型输出</p><p>计算损失函数：total_loss由二元交叉熵损失和知识蒸馏损失共同构成</p><p>最后根据return_dict参数的值，返回模型的输出</p><p>如果return_dict为True，则返回一个UIEModelOutput实例，否则返回一个包含开始概率、结束概率和其他编码器输出的元组，如果计算了损失，则将损失值添加到输出中</p><h3 id="定义模型，并将模型迁移到设备上">定义模型，并将模型迁移到设备上</h3><p>这里就是上面提到的第153行，教师模型的路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model = UIE.from_pretrained(<span class="string">&quot;../data/user_data/saved_model/model1/model_best&quot;</span>)</span><br><span class="line">model.to(<span class="string">&quot;cuda&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="定义KL损失函数：use-kl">定义KL损失函数：use_kl</h3><p>直接将teacher模型的输出概率与当前模型的概率做KL计算</p><h3 id="定义focal-loss类">定义focal_loss类</h3><p>Focal Loss 是一种用于解决类别不平衡问题的损失函数，它通过减少对易分类样本的关注，增加对难分类样本的关注，从而提高模型对少数类别的识别能力</p><h1>模型预测</h1><h2 id="predict-py"><a href="http://predict.py">predict.py</a></h2><p>(序列1 任务1)python3 <a href="http://predict.py">predict.py</a> --file_path “1_ner_test.json” --task_name 0 --write_name “./data/res_data1/1_1_ner_results.json” --current_task 1 --test_task 1 --model_path “./saved_model/model1/model_best”<br>参数说明：–file_path   需要预测的json文件存放在 raw_data下的（1_ner_test.json,2_ner_test.json…）<br>–task_name   任务的prompt ,index of list: [“装甲车辆”, “火炮”, “导弹”, “舰船舰艇”, “炸弹”, “太空装备”]  range(6)<br>–write_name  预测结果的存放位置以（./data/res_data1/1_1_ner_results.json）(1_1_ner_results.json以 （current_task下划线test_task） 为前缀<br>注意序列1 存放在res_data1,序列2存放在 res_data2<br>–current_task 目前刚学完任务的id<br>–test_task    测试样本所属任务的id<br>–model_path 预训练好的模型权重例如（序列一的任务一：./saved_model/model1/model_best<br>序列一的任务二：./saved_model/model1/model2/model_best<br>序列2任务1：./saved_model/model2/model1/model_best<br>序列2任务2：./saved_model/model2/model_best）</p><p>这里定义了一个parse_data函数</p><p>它的作用是从一个 JSON 文件中解析数据，并根据特定的任务名称（task_name）提取相关信息，然后将这些信息转换为一个新的格式并写入到另一个文件中<br>在最后调用了UIEPredictor，从uie_predictor.py中获取，是一个预测器</p><h1>合并预测结果为提交格式</h1><h2 id="demo-py"><a href="http://demo.py">demo.py</a></h2><p>定义了一个 <code>to_format_sub</code> 函数，它的作用是将某个目录下的所有 JSON 结果文件合并成一个统一格式的 JSON 文件<br>也就是将预测结果保存到<code>res_data</code>下，在data文件下一个示例{}1_ner_results.json</p>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learning_O代码梳理</title>
      <link href="/2024/03/18/NER/Learing_o/"/>
      <url>/2024/03/18/NER/Learing_o/</url>
      
        <content type="html"><![CDATA[<h1>主函数</h1><h2 id="创建解释器，添加命令行参数">创建解释器，添加命令行参数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(...)</span><br><span class="line">args = parser.parse_args()</span><br></pre></td></tr></table></figure><h2 id="设置随机数种子以及每个任务包含的的标签数量">设置随机数种子以及每个任务包含的的标签数量</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set_seed(args)</span><br><span class="line">per_types = args.per_types</span><br></pre></td></tr></table></figure><h2 id="持续学习">持续学习</h2><p>迭代每个任务</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> step_id <span class="keyword">in</span> <span class="built_in">range</span>(args.start_step, args.nb_tasks)</span><br></pre></td></tr></table></figure><p>获取当前任务的标签集，标签数量和 PAD ids。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">labels = get_labels_dy(args.labels, per_types, step_id=step_id)</span><br><span class="line">num_labels = <span class="built_in">len</span>(labels)</span><br><span class="line">pad_token_label_id = CrossEntropyLoss().ignore_index</span><br></pre></td></tr></table></figure><p>设置 model_name_or_path</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果是第一轮，则加载 bert-base-uncased 模型</span></span><br><span class="line"><span class="keyword">if</span> step_id == <span class="number">0</span>:</span><br><span class="line">    model_name_or_path = <span class="string">&quot;bert-base-uncased&quot;</span> </span><br><span class="line"><span class="keyword">else</span>: <span class="comment"># 否则加载上一轮模型</span></span><br><span class="line">    model_name_or_path = os.path.join(args.output_dir, <span class="string">&quot;task_&quot;</span> + <span class="built_in">str</span>(step_id - <span class="number">1</span>))      </span><br></pre></td></tr></table></figure><p>训练和评价模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_and_eval(args, labels, num_labels, pad_token_label_id, model_name_or_path,output_dir, data_dir, step_id)</span><br></pre></td></tr></table></figure><h1>准备数据集</h1><h2 id="read-examples-from-file">read_examples_from_file()</h2><h2 id="convert-examples-to-features">convert_examples_to_features()</h2><h2 id="load-and-cache-examples">load_and_cache_examples()</h2><h3 id="从文件中加载样本特征">从文件中加载样本特征</h3><p>如果 cached_features_file 存在，则直接从该文件中加载特征</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">features = torch.load(cached_features_file)</span><br></pre></td></tr></table></figure><p>否则先处理原始数据，再加载特征</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">examples = read_examples_from_file(data_dir, mode)</span><br><span class="line">features = convert_examples_to_features(...)</span><br></pre></td></tr></table></figure><h3 id="提取features的属性并构建数据集">提取features的属性并构建数据集</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">all_input_ids = torch.tensor([f.input_ids <span class="keyword">for</span> f <span class="keyword">in</span> features], dtype=torch.long)</span><br><span class="line">all_input_mask = torch.tensor([f.input_mask <span class="keyword">for</span> f <span class="keyword">in</span> features], dtype=torch.long)</span><br><span class="line">all_segment_ids = torch.tensor([f.segment_ids <span class="keyword">for</span> f <span class="keyword">in</span> features], dtype=torch.long)</span><br><span class="line">all_label_ids = torch.tensor([f.label_ids <span class="keyword">for</span> f <span class="keyword">in</span> features], dtype=torch.long)</span><br><span class="line">dataset = TensorDataset(all_input_ids, all_input_mask, all_segment_ids, all_label_ids)</span><br></pre></td></tr></table></figure><h3 id="返回该数据集">返回该数据集</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> dataset</span><br></pre></td></tr></table></figure><h1>工具函数</h1><h2 id="get-exemplar-means">get_exemplar_means()</h2><p><strong>计算每个类别的原型，即均值向量</strong></p><h3 id="1-将每个样本按标签分类">1. 将每个样本按标签分类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建了一个字典，包含了所有可能的类别索引，每个类别对应一个空列表</span></span><br><span class="line">cls_exemplar = &#123;cls: [] <span class="keyword">for</span> cls <span class="keyword">in</span> <span class="built_in">range</span>(n_tags)&#125;  。</span><br><span class="line"><span class="keyword">for</span> x, y <span class="keyword">in</span> <span class="built_in">zip</span>(support_reps, support_labels):</span><br><span class="line">    <span class="comment"># 将每个样本按照标签分类存储在cls_exemplar字典中</span></span><br><span class="line">    cls_exemplar[y.item()].append(x)</span><br></pre></td></tr></table></figure><h3 id="计算每个类别的原型">计算每个类别的原型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> cls, exemplar <span class="keyword">in</span> cls_exemplar.items():</span><br><span class="line">    features = []</span><br><span class="line">    <span class="keyword">for</span> feature <span class="keyword">in</span> exemplar:</span><br><span class="line">        feature.data = feature.data / feature.data.norm()  <span class="comment"># Normalize  </span></span><br><span class="line">        features.append(feature)</span><br><span class="line">        <span class="comment"># 如果当前类别下没有样本，则随机初始化一个与样本表示reps大小相同的张量作为该类别的原型</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(features) == <span class="number">0</span>:</span><br><span class="line">            mu_y = torch.normal(<span class="number">0</span>, <span class="number">1</span>, size=<span class="built_in">tuple</span>(x.size())).to(args.device)</span><br><span class="line">            mu_y = mu_y.squeeze()  </span><br><span class="line">        <span class="comment"># 如果有，则计算当前类别的所有样本的reps的均值作为原型</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            features = torch.stack(features) </span><br><span class="line">            mu_y = features.mean(<span class="number">0</span>).squeeze()</span><br><span class="line">        mu_y.data = mu_y.data / mu_y.data.norm()  <span class="comment"># Normalize  </span></span><br><span class="line">        exemplar_means[cls] = mu_y</span><br></pre></td></tr></table></figure><h3 id="返回包含每个类别原型的列表">返回包含每个类别原型的列表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> exemplar_means</span><br></pre></td></tr></table></figure><h2 id="get-support-encodings-and-labels-total">get_support_encodings_and_labels(_total)()</h2><p><strong>获取支持集的encodings和labels</strong></p><h3 id="获取train-loader，support-loader，support-o-loader中的encodings和labels">获取train_loader，support_loader，support_o_loader中的encodings和labels</h3><p>获取train_loader中每个批次的encodings和labels(仅get_support_encodings_and_labels_total)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">train_iterator = tqdm(train_loader, desc=<span class="string">&quot;Support data representations&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> index, batch <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_iterator):</span><br><span class="line">    encodings, labels = get_token_encodings_and_labels(args, model, batch)</span><br><span class="line">    encodings = encodings.view(-<span class="number">1</span>, encodings.shape[-<span class="number">1</span>])</span><br><span class="line">    labels = labels.flatten()</span><br><span class="line">    <span class="comment"># 过滤掉标签为填充标记的部分</span></span><br><span class="line">    idx = torch.where((labels - pad_token_label_id) != <span class="number">0</span>)[<span class="number">0</span>]</span><br><span class="line">    support_encodings.append(encodings[idx])</span><br><span class="line">    support_labels.append(labels[idx])</span><br></pre></td></tr></table></figure><p>同样的操作获取support_loader和support_o_loader中每个批次的encodings和labels</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">support_iterator = tqdm(support_loader, desc=<span class="string">&quot;Support data representations&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> index, batch <span class="keyword">in</span> <span class="built_in">enumerate</span>(support_iterator):</span><br><span class="line">        ...</span><br><span class="line">support_o_iterator = tqdm(support_o_loader, desc=<span class="string">&quot;Support data representations&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> _, batch <span class="keyword">in</span> <span class="built_in">enumerate</span>(support_o_iterator):</span><br><span class="line">        ...</span><br></pre></td></tr></table></figure><h3 id="返回所有的encodings和labels">返回所有的encodings和labels</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> torch.cat(support_encodings), torch.cat(support_labels)</span><br></pre></td></tr></table></figure><h2 id="get-token-logits-and-labels">get_token_logits_and_labels</h2><p><strong>使用原有的预训练BERT-NER模型获取预测分数和输出标签</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    inputs = &#123;<span class="string">&quot;input_ids&quot;</span>: batch[<span class="number">0</span>], <span class="string">&quot;attention_mask&quot;</span>: batch[<span class="number">1</span>], </span><br><span class="line">                <span class="string">&quot;output_hidden_states&quot;</span>: <span class="literal">True</span>, <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;dev&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">if</span> model.config.model_type != <span class="string">&quot;distilbert&quot;</span>:</span><br><span class="line">        inputs[<span class="string">&quot;token_type_ids&quot;</span>] = (batch[<span class="number">2</span>] <span class="keyword">if</span> model.config.model_type <span class="keyword">in</span> [<span class="string">&quot;bert&quot;</span>, <span class="string">&quot;xlnet&quot;</span>] </span><br><span class="line">                                    <span class="keyword">else</span> <span class="literal">None</span>)  <span class="comment"># XLM and RoBERTa don&quot;t use token_type_ids</span></span><br><span class="line">        outputs = model(**inputs)</span><br><span class="line">        logits = outputs[-<span class="number">1</span>] </span><br><span class="line"><span class="keyword">return</span> logits, label_batch</span><br></pre></td></tr></table></figure><h2 id="get-rehearsal-prototype">get_rehearsal_prototype()</h2><h3 id="加载支持集以及它们的encodings和labels">加载支持集以及它们的encodings和labels</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">support_dataset = load_and_cache_examples(args, tokenizer, labels, pad_token_label_id, mode=<span class="string">&quot;memory&quot;</span>, data_dir=data_dir)</span><br><span class="line">support_o_dataset = load_and_cache_examples(args, tokenizer, labels, pad_token_label_id, mode=<span class="string">&quot;memory_o&quot;</span>, data_dir=data_dir)</span><br><span class="line">support_sampler = SequentialSampler(support_dataset)</span><br><span class="line">support_dataloader = DataLoader(support_dataset, sampler=support_sampler, batch_size=args.eval_batch_size)</span><br><span class="line">support_o_dataloader = DataLoader(support_o_dataset, sampler=support_o_sampler, batch_size=args.eval_batch_size)</span><br><span class="line">support_encodings, support_labels = get_support_features_and_labels(args, model, support_dataloader, support_o_dataloader, pad_token_label_id)</span><br><span class="line"><span class="comment"># 将support_encodings归一化</span></span><br><span class="line">support_encodings = F.normalize(support_encodings)</span><br></pre></td></tr></table></figure><h3 id="计算类别相似度">计算类别相似度</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(labels)):  <span class="comment"># 迭代每个非&quot;O&quot;标签的类别</span></span><br><span class="line">    <span class="comment"># 计算类别i的样本之间的余弦相似度</span></span><br><span class="line">    support_reps_dists = torch.matmul(support_encodings[support_labels == i],</span><br><span class="line">                                          support_encodings[support_labels == i].T)</span><br><span class="line">    <span class="comment"># 将对角线上的元素（样本与自身的相似度）设置为0，以避免将自身视为原型。</span></span><br><span class="line">    support_reps_dists = torch.scatter(support_reps_dists, <span class="number">1</span>, torch.arange(support_reps_dists.shape[<span class="number">0</span>]).view(-<span class="number">1</span>, <span class="number">1</span>).to(args.device),<span class="number">0.</span>)</span><br><span class="line">    <span class="comment"># 计算类别i的类别相似度</span></span><br><span class="line">    prototype_dists.append(support_reps_dists[support_reps_dists &gt; <span class="number">0</span>].view(-<span class="number">1</span>).mean(-<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h3 id="返回类别相似度列表">返回类别相似度列表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> prototype_dists</span><br></pre></td></tr></table></figure><h1>定义模型</h1><h2 id="MySftBertModel">MySftBertModel()</h2><h3 id="初始化-init">初始化 init</h3><p>接受Bert配置参数以及其他自定义参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">self.per_types = per_types  <span class="comment"># 设置每轮任务的类型数量。</span></span><br><span class="line">self.feat_dim = feat_dim  <span class="comment"># 设置特征维度。</span></span><br><span class="line">self.hidden_size = config.hidden_size  <span class="comment"># 设置隐藏状态的大小。</span></span><br><span class="line">self.num_labels = config.num_labels  <span class="comment"># 设置标签数量。</span></span><br><span class="line">self.bert = BertModel(config, add_pooling_layer=<span class="literal">False</span>) </span><br></pre></td></tr></table></figure><p>设置了分类器(classifier)和投影头(head)，根据mode选择性地设置分类器的输出层。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">classifier_dropout = (  <span class="comment"># 设置分类器的dropout概率</span></span><br><span class="line">            config.classifier_dropout <span class="keyword">if</span> config.classifier_dropout <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> config.hidden_dropout_prob</span><br><span class="line">        )</span><br><span class="line"><span class="keyword">if</span> mode == <span class="string">&quot;train&quot;</span>:  <span class="comment"># 根据不同模式设置线性分类器的不同输出维度</span></span><br><span class="line">    <span class="keyword">if</span> self.num_labels-<span class="number">1</span> &gt; self.per_types:  <span class="comment"># 对“O”样本重新标记过</span></span><br><span class="line">        self.classifier = nn.Linear(config.hidden_size, config.num_labels - self.per_types)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.classifier = nn.Linear(config.hidden_size, config.num_labels)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    self.classifier = nn.Linear(config.hidden_size, config.num_labels)</span><br></pre></td></tr></table></figure><p>设置不同的head（线性层或多层感知机）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> head == <span class="string">&#x27;linear&#x27;</span>:</span><br><span class="line">   self.head = nn.Linear(self.hidden_size, self.hidden_size)</span><br><span class="line"><span class="keyword">elif</span> head == <span class="string">&#x27;mlp&#x27;</span>:</span><br><span class="line">    self.head = nn.Sequential(</span><br><span class="line">        nn.Linear(self.hidden_size, self.hidden_size),</span><br><span class="line">        nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">        nn.Linear(self.hidden_size, self.feat_dim)</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">raise</span> NotImplementedError(<span class="string">&#x27;head not supported: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(head))</span><br></pre></td></tr></table></figure><h3 id="前向传播-forward">前向传播 forward</h3><p><strong>提取特征</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 调用原有的Bert模型初步提取出样本的特征</span></span><br><span class="line">outputs = self.bert(...)</span><br><span class="line">features_enc = outputs[<span class="number">0</span>]   </span><br><span class="line"><span class="comment"># 通过self.head对进一步提取出样本的特征并归一化。</span></span><br><span class="line">features = F.normalize(self.head(features_enc.view(-<span class="number">1</span>, self.hidden_size)), dim=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 使用初步特征进行预测</span></span><br><span class="line">sequence_output = outputs[<span class="number">0</span>]</span><br><span class="line">sequence_output = self.dropout(sequence_output)</span><br><span class="line">logits = self.classifier(sequence_output)</span><br></pre></td></tr></table></figure><p>如果不是训练模式，直接返回features_enc，features，logits</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">loss = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> mode != <span class="string">&quot;train&quot;</span>:</span><br><span class="line">    <span class="keyword">return</span> loss, features_enc, features, logits</span><br></pre></td></tr></table></figure><p><strong>计算损失函数</strong><br>如果是第一轮训练</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> self.num_labels-<span class="number">1</span> == self.per_types:  </span><br><span class="line">    <span class="keyword">if</span> loss_name == <span class="string">&quot;supcon&quot;</span>:         loss = supcon_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;supcon_o&quot;</span>:     loss = supcon_o_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;supcon_o_ce&quot;</span>:  loss = supcon_o_loss+ce_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;supcon_o_bce&quot;</span>: loss = supcon_o_loss + bce_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;ce&quot;</span>:           loss = ce_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;bce_o&quot;</span>:        loss = bce_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;supcon_ce&quot;</span>:    loss = supcon_loss + ce_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;supcon_bce&quot;</span>:   loss = supcon_loss + bce_loss</span><br></pre></td></tr></table></figure><p>如果不是第一轮训练</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> self.num_labels &gt; self.per_types: </span><br><span class="line">    <span class="comment"># 整理新类别标签labels_new，新类别样本的logits：student_new 以及</span></span><br><span class="line">    <span class="comment"># 旧类别样本的logits：s_logits，teacher模型的logits：old_logits</span></span><br><span class="line">    labels_new, student_new, s_logits, old_logits = gather_rh_ce( labels, t_logits, </span><br><span class="line">                                            logits, self.num_labels - self.per_types)</span><br><span class="line">    <span class="keyword">if</span> loss_name == <span class="string">&quot;supcon&quot;</span>:        loss = supcon_loss+kd_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;supcon_nokd&quot;</span>: loss = supcon_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;supcon_o&quot;</span>:    loss = supcon_o_loss+kd_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;supcon_o_ce&quot;</span>: loss = supcon_o_loss+ce_loss+kd_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;supcon_o_bce&quot;</span>:loss = supcon_o_loss + bce_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;ce&quot;</span>:          loss = ce_loss+kd_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;bce_o&quot;</span>:       loss = bce_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;supcon_ce&quot;</span>:   loss = supcon_loss+ce_loss+kd_loss</span><br><span class="line">    <span class="keyword">elif</span> loss_name == <span class="string">&quot;supcon_bce&quot;</span>:  loss = supcon_loss+bce_loss</span><br></pre></td></tr></table></figure><h3 id="3-返回-loss-features-enc-features-logits">3. 返回 loss, features_enc, features, logits</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> loss, features_enc, features, logits</span><br></pre></td></tr></table></figure><h1>训练和评估模型</h1><h2 id="train-and-eval">train_and_eval( )</h2><h3 id="加载上一轮预训练的参数配置、模型和分词器">加载上一轮预训练的参数配置、模型和分词器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建模型配置、模型类别和分词器类</span></span><br><span class="line">config_class, model_class, tokenizer_class = MODEL_CLASSES[args.model_type]</span><br><span class="line"><span class="comment"># 如果是第一轮，则直接加载 bert-base-uncased 模型</span></span><br><span class="line">config = config_class.from_pretrained(args.config_name <span class="keyword">if</span> args.config_name <span class="keyword">else</span> model_name_or_path，num_labels=num_labels)</span><br><span class="line">tokenizer = tokenizer_class.from_pretrained(args.tokenizer_name <span class="keyword">if</span> args.tokenizer_name <span class="keyword">else</span> model_name_or_path,do_lower_case=args.do_lower_case)</span><br><span class="line">model = model_class.from_pretrained(model_name_or_path, from_tf=<span class="built_in">bool</span>(<span class="string">&quot;.ckpt&quot;</span> <span class="keyword">in</span> model_name_or_path),config=config)</span><br></pre></td></tr></table></figure><h3 id="获取训练集">获取训练集</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># train_dataset=TensorDataset(all_input_ids, all_input_mask, all_segment_ids, all_label_ids)</span></span><br><span class="line">train_dataset=load_and_cache_examples(args,tokenizer,labels,pad_token_label_id,mode=<span class="string">&quot;rehearsal&quot;</span>,data_dir=data_dir)</span><br><span class="line"><span class="comment"># 顺序采样</span></span><br><span class="line">train_sampler = SequentialSampler(train_dataset) <span class="keyword">if</span> args.local_rank == -<span class="number">1</span> <span class="keyword">else</span> DistributedSampler(train_dataset)</span><br><span class="line"><span class="comment"># 创建训练数据加载器</span></span><br><span class="line">train_dataloader = DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)  </span><br></pre></td></tr></table></figure><h3 id="获取旧模型的特征">获取旧模型的特征</h3><p><strong>teacher_evaluate()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果当前不是第一个任务，则需要对老师模型进行评估。</span></span><br><span class="line"><span class="keyword">if</span> step_id &gt; <span class="number">0</span>: </span><br><span class="line">    t_logits, out_new_labels = teacher_evaluate(args, train_dataloader, model, tokenizer,labels,</span><br><span class="line">                                                pad_token_label_id, mode=<span class="string">&quot;train&quot;</span>, data_dir=data_dir)</span><br><span class="line">    model.new_classifier()  <span class="comment"># 创建一个新的分类器</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    t_logits = <span class="literal">None</span></span><br><span class="line">    out_new_labels = <span class="literal">None</span></span><br></pre></td></tr></table></figure><h3 id="训练模型">训练模型</h3><p><strong>train()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">global_step, tr_loss = train(args, train_dataset, train_dataloader, model, tokenizer, labels,</span><br><span class="line">                                pad_token_label_id, data_dir=data_dir, output_dir=output_dir,</span><br><span class="line">                                t_logits=t_logits, out_new_labels=out_new_labels)</span><br><span class="line"><span class="comment"># 保存训练过程中得到的模型参数、配置和分词器    </span></span><br><span class="line">model_to_save.save_pretrained(output_dir)</span><br><span class="line">tokenizer.save_pretrained(output_dir)</span><br><span class="line">torch.save(args, os.path.join(output_dir, <span class="string">&quot;training_args.bin&quot;</span>))                            </span><br></pre></td></tr></table></figure><h3 id="在开发集上评估模型">在开发集上评估模型</h3><p><strong>evaluate()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对于每个检查点，加载模型并进行评估</span></span><br><span class="line"><span class="keyword">for</span> checkpoint <span class="keyword">in</span> checkpoints:</span><br><span class="line">    model = model_class.from_pretrained(checkpoint, mode=<span class="string">&quot;dev&quot;</span>)</span><br><span class="line">    train_dataloader=<span class="literal">None</span></span><br><span class="line">     _, result,  _ = evaluate(args, model, tokenizer, labels, pad_token_label_id, mode=<span class="string">&quot;dev&quot;</span>,</span><br><span class="line">                            data_dir=data_dir, prefix=global_step)</span><br></pre></td></tr></table></figure><h3 id="在测试集上进行预测">在测试集上进行预测</h3><p><strong>evaluate()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载模型和分词器</span></span><br><span class="line">tokenizer = tokenizer_class.from_pretrained(output_dir, do_lower_case=args.do_lower_case)</span><br><span class="line">model = model_class.from_pretrained(output_dir, mode=<span class="string">&quot;test&quot;</span>)</span><br><span class="line"><span class="comment"># 调用 evaluate 函数对测试集进行预测，获取macro-F1和micro-F1结果以及预测的标签。</span></span><br><span class="line">macro_results, micro_results, predictions = evaluate(args, model, tokenizer, labels,</span><br><span class="line">                                                    pad_token_label_id, mode=<span class="string">&quot;test&quot;</span>, data_dir=data_dir)</span><br></pre></td></tr></table></figure><h2 id="teacher-evaluate">teacher_evaluate()</h2><h3 id="根据不同模式设置数据集加载器">根据不同模式设置数据集加载器</h3><p>如果模式是 “train”，，则使用训练数集</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> mode == <span class="string">&quot;train&quot;</span>:</span><br><span class="line">    eval_dataloader = train_dataloader</span><br></pre></td></tr></table></figure><p>如果模式是 “dev”，则使用开发集</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> mode == <span class="string">&quot;dev&quot;</span>:</span><br><span class="line">    eval_dataset = load_and_cache_examples(args, tokenizer, labels, pad_token_label_id, mode=mode,data_dir=data_dir)</span><br><span class="line">    eval_sampler = SequentialSampler(eval_dataset) <span class="keyword">if</span> args.local_rank == -<span class="number">1</span> <span class="keyword">else</span> DistributedSampler(eval_dataset)</span><br><span class="line">    eval_dataloader = DataLoader(eval_dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)</span><br></pre></td></tr></table></figure><h3 id="评估模型">评估模型</h3><p>将模型设置为评估模式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model.<span class="built_in">eval</span>()</span><br></pre></td></tr></table></figure><p>使用 get_token_logits_and_labels 函数获取每个batch的预测分数 logits 和输出标签 out_labels</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> batch <span class="keyword">in</span> tqdm(eval_dataloader, desc=<span class="string">&quot;Evaluating&quot;</span>):</span><br><span class="line">    logits, out_labels = get_token_logits_and_labels(args, model, batch)</span><br><span class="line">    <span class="comment"># 对评估步骤计数，以便跟踪已评估的批次数量</span></span><br><span class="line">    nb_eval_steps += <span class="number">1</span></span><br><span class="line">    <span class="comment"># 将每个批次的 logits 分数添加到 logits_list 列表中</span></span><br><span class="line">    logits_list.append(logits.detach().cpu())</span><br></pre></td></tr></table></figure><h3 id="用原型重新标记阈值重新标记旧实体类">用原型重新标记阈值重新标记旧实体类</h3><p>计算原型重新标记阈值和与每个样本的原型相似度最高的实体类别<br><strong>evaluate()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算每个批次样本中原型相似度最大值所在的类别索引 preds</span></span><br><span class="line"><span class="comment"># 每个批次样本与每个类别的原型相似度的最大值 emissions</span></span><br><span class="line"><span class="comment"># 根据原有模型预测的标签索引序列 out_label_ids</span></span><br><span class="line"><span class="comment"># 每个旧类别的原型重新标记阈值列表（还未乘βi）prototype_dists</span></span><br><span class="line">preds, emissions, out_label_ids, prototype_dists = evaluate(args, model, tokenizer, labels, pad_token_label_id, </span><br><span class="line">                                                        mode=<span class="string">&quot;rehearsal&quot;</span>, data_dir=data_dir)</span><br><span class="line"><span class="comment"># 计算原型重新标记阈值 (根据不同的任务步骤i来调整超参数βi)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(current_task_id):</span><br><span class="line">    <span class="keyword">if</span> args.change_th:</span><br><span class="line">        task_para = th_para - (current_task_id - i - <span class="number">1</span>)*th_reduction  <span class="comment"># βi</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        task_para = th_para</span><br><span class="line">        prototype_dists[i*args.per_types+<span class="number">1</span>:(i+<span class="number">1</span>)*args.per_types+<span class="number">1</span>] *= task_para</span><br></pre></td></tr></table></figure><p>重新标记旧实体类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(out_label_ids.shape[<span class="number">0</span>]):  <span class="comment"># 迭代每个batch  </span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(out_label_ids.shape[<span class="number">1</span>]):  <span class="comment"># 迭代每个样本  </span></span><br><span class="line">        idx = preds[i][j]   <span class="comment"># 根据原型相似度预测的类别索引</span></span><br><span class="line">        <span class="comment"># 如果原型的相似度大于重新标记阈值并且预测的标签是旧实体类的标签</span></span><br><span class="line">        <span class="keyword">if</span> emissions[i][j] &gt; prototype_dists[idx].item() <span class="keyword">and</span> out_label_ids[i][j] &lt; <span class="built_in">len</span>(labels) - args.per_types: </span><br><span class="line">                out_label_new_list[i].append(preds[i][j])  <span class="comment"># 则将该“O”预测为这个旧实体类  </span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 否则，保持原始的标签不变</span></span><br><span class="line">            out_label_new_list[i].append(out_label_ids[i][j])</span><br></pre></td></tr></table></figure><h3 id="返回-logits-list-out-label-new-list">返回 logits_list, out_label_new_list</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> logits_list, out_label_new_list</span><br></pre></td></tr></table></figure><h2 id="evaluate">evaluate ()</h2><h3 id="读取数据集">读取数据集</h3><p>读取eval_dataset，support_dataset，support_o_dataset，train_dataset。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">eval_dataset = load_and_cache_examples(args, tokenizer, labels, pad_token_label_id, mode=mode, data_dir=data_dir)</span><br><span class="line">support_dataset = load_and_cache_examples(args, tokenizer, labels, pad_token_label_id, mode=<span class="string">&quot;memory&quot;</span>, data_dir=data_dir)</span><br><span class="line">support_o_dataset = load_and_cache_examples(args, tokenizer, labels, pad_token_label_id, mode=<span class="string">&quot;memory_o&quot;</span>, data_dir=data_dir)</span><br><span class="line">train_dataset = load_and_cache_examples(args, tokenizer, labels, pad_token_label_id, mode=<span class="string">&quot;train&quot;</span>, data_dir=data_dir)</span><br><span class="line"><span class="comment"># 顺序采样</span></span><br><span class="line">eval_sampler = SequentialSampler(eval_dataset) <span class="keyword">if</span> args.local_rank == -<span class="number">1</span> <span class="keyword">else</span> DistributedSampler(eval_dataset)</span><br><span class="line">eval_dataloader = DataLoader(eval_dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)</span><br><span class="line">support_sampler = SequentialSampler(support_dataset) <span class="keyword">if</span> args.local_rank == -<span class="number">1</span> <span class="keyword">else</span> DistributedSampler(support_dataset)</span><br><span class="line">support_o_sampler = SequentialSampler(support_o_dataset) <span class="keyword">if</span> args.local_rank == -<span class="number">1</span> <span class="keyword">else</span> DistributedSampler(support_o_dataset)</span><br><span class="line">train_sampler = SequentialSampler(train_dataset) <span class="keyword">if</span> args.local_rank == -<span class="number">1</span> <span class="keyword">else</span> DistributedSampler(train_dataset)</span><br><span class="line"><span class="comment"># 数据集加载器</span></span><br><span class="line">support_dataloader = DataLoader(support_dataset, sampler=support_sampler, batch_size=args.eval_batch_size)</span><br><span class="line">support_o_dataloader = DataLoader(support_o_dataset, sampler=support_o_sampler, batch_size=args.eval_batch_size)</span><br><span class="line">train_dataloader = DataLoader(train_dataset, sampler=train_sampler, batch_size=args.eval_batch_size)</span><br></pre></td></tr></table></figure><h3 id="获取支持数据集的embbedings和labels">获取支持数据集的embbedings和labels</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">support_encodings, support_labels = get_support_encodings_and_labels_total(args, model, support_dataloader, support_o_dataloader, train_dataloader, pad_token_label_id)</span><br></pre></td></tr></table></figure><h3 id="三种重新标记来自旧类别的“O”的策略">三种重新标记来自旧类别的“O”的策略</h3><h4 id="使用原型重新标记">使用原型重新标记</h4><p>基于“O”样本与原型之间的距离<br><strong>计算每个类别的原型</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exemplar_means = get_exemplar_means(args, support_encodings, support_labels)</span><br></pre></td></tr></table></figure><p><strong>计算原型重新标记阈值以及“O”与原型的最高相似度</strong></p><p>利用 NNClassification() 计算nn_preds，nn_emissions，prototype_dists</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _, batch <span class="keyword">in</span> <span class="built_in">enumerate</span>(eval_iterator):</span><br><span class="line">    batch = <span class="built_in">tuple</span>(t.to(args.device) <span class="keyword">for</span> t <span class="keyword">in</span> batch)</span><br><span class="line">    <span class="comment"># 循环迭代 eval_iterator，使用原有的模型获取每个批次的encodings和labels</span></span><br><span class="line">    encodings, encoding_labels = get_token_encodings_and_labels(args, model, batch)</span><br><span class="line">    <span class="comment"># 如果是rehearsal模式，则去除掉当前task样本的support_encodings和support_labels再进行预测。</span></span><br><span class="line">    <span class="keyword">if</span> mode==<span class="string">&quot;rehearsal&quot;</span>:</span><br><span class="line">        cls = NNClassification()</span><br><span class="line">        support_encodings = support_encodings[support_labels &lt; <span class="built_in">len</span>(labels) - args.per_types]</span><br><span class="line">        support_labels = support_labels[support_labels &lt; <span class="built_in">len</span>(labels) - args.per_types]</span><br><span class="line">        nn_preds(batch_size, sent_len) 包含每个样本中原型相似度最大值所在的类别索引</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        nn_preds(batch_size, sent_len) 包含每个样本中原型相似度最大值所在的类别索引</span></span><br><span class="line"><span class="string">        nn_emissions(batch_size, sent_len, ndim) 包含每个样本与每个类别的原型相似度的最大值</span></span><br><span class="line"><span class="string">        prototype_dists 每个旧类别的原型重新标记阈值列表（还未乘βi）</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        nn_preds, nn_emissions, prototype_dists = cls.nn_classifier_dot_prototype(encodings, support_encodings, support_labels, exemplar_means)</span><br></pre></td></tr></table></figure><h4 id="使用最近邻重新标记">使用最近邻重新标记</h4><p>基于“O”样本与每个类别示例之间的距离</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> args.cls_name == <span class="string">&quot;ncm_dot&quot;</span>:  </span><br><span class="line">    cls = NcmClassification()</span><br><span class="line">    nn_preds = cls.ncm_classifier_dot(encodings, support_encodings, support_labels, exemplar_means)</span><br></pre></td></tr></table></figure><h4 id="使用原有模型重新标记">使用原有模型重新标记</h4><p>作为前两种方法的参考标注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> args.cls_name == <span class="string">&quot;linear&quot;</span>:</span><br><span class="line">    nn_preds, encoding_labels = get_token_logits_and_labels(args, model, batch)</span><br></pre></td></tr></table></figure><h3 id="保存预测结果">保存预测结果</h3><p>将每个批次的预测结果追加到 preds 中，并将作为参考标准的预测标签保存到 out_label_ids 中。如果当前模式是rehearsal模式，还会保存emissions。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> preds <span class="keyword">is</span> <span class="literal">None</span>: <span class="comment"># 第一次预测</span></span><br><span class="line">    preds = nn_preds.detach().cpu().numpy()</span><br><span class="line">    out_label_ids = encoding_labels.detach().cpu().numpy()</span><br><span class="line">    <span class="keyword">if</span> mode == <span class="string">&quot;rehearsal&quot;</span>:</span><br><span class="line">        emissions = nn_emissions.detach().cpu().numpy()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    preds = np.append(preds, nn_preds.detach().cpu().numpy(), axis=<span class="number">0</span>)</span><br><span class="line">    out_label_ids = np.append(out_label_ids, encoding_labels.detach().cpu().numpy(), axis=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> mode == <span class="string">&quot;rehearsal&quot;</span>:</span><br><span class="line">        emissions = np.append(emissions, nn_emissions.detach().cpu().numpy(), axis=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="预测结果">预测结果</h3><p>如果当前模式是rehearsal模式，那么函数直接将返回 preds、 emissions、out_label_ids 和prototype_dists。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> mode == <span class="string">&quot;rehearsal&quot;</span>:</span><br><span class="line">    <span class="keyword">return</span> preds, emissions, out_label_ids, prototype_dists</span><br></pre></td></tr></table></figure><p>如果使用的是线性分类器，根据 preds 得出预测的最大logits？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> args.cls_name == <span class="string">&quot;linear&quot;</span>:</span><br><span class="line">    preds = np.argmax(preds, axis=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>out_label_list 和 preds_list存储使用原有模型和使用自定义方法预测的标签字符串序列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建 label_map 字典，将标签的索引映射到相应标签的字符串名称。</span></span><br><span class="line">label_map = &#123;i: <span class="string">&quot;I-&quot;</span>+label <span class="keyword">for</span> i, label <span class="keyword">in</span> <span class="built_in">enumerate</span>(labels)&#125;</span><br><span class="line">label_map[<span class="number">0</span>] = <span class="string">&quot;O&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(out_label_ids.shape[<span class="number">0</span>]):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(out_label_ids.shape[<span class="number">1</span>]):</span><br><span class="line">        <span class="keyword">if</span> out_label_ids[i, j] != pad_token_label_id:</span><br><span class="line">            out_label_list[i].append(label_map[out_label_ids[i][j]])</span><br><span class="line">            preds_list[i].append(label_map[preds[i][j]])</span><br></pre></td></tr></table></figure><p>输出评价指标结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 seqeval 库计算 F1-score。</span></span><br><span class="line">metric = load_metric(<span class="string">&quot;seqeval&quot;</span>)</span><br><span class="line">metric.add_batch(predictions=preds_list, references=out_label_list)</span><br><span class="line">macro_results, micro_results, _ = compute_metrics(metric)</span><br></pre></td></tr></table></figure><p>返回评价指标结果以及预测的标签序列。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> macro_results, micro_results, preds_list</span><br></pre></td></tr></table></figure><h2 id="train">train()</h2><h3 id="计算训练总步数t-total和训练轮数num-train-epochs">计算训练总步数t_total和训练轮数num_train_epochs</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果设置了训练最大步数max_steps，则t_total = args.max_steps，并计算num_train_epochs，否则根据num_train_epochs计算t_total。</span></span><br><span class="line"><span class="keyword">if</span> args.max_steps &gt; <span class="number">0</span>:</span><br><span class="line">    t_total = args.max_steps</span><br><span class="line">    args.num_train_epochs = args.max_steps // (<span class="built_in">len</span>(train_dataloader) // args.gradient_accumulation_steps) + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    t_total = <span class="built_in">len</span>(train_dataloader) // args.gradient_accumulation_steps * args.num_train_epochs</span><br></pre></td></tr></table></figure><h3 id="配置优化器">配置优化器</h3><p>使用AdamW优化器，使用了。权重衰减和学习率调节器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">no_decay = [<span class="string">&quot;bias&quot;</span>, <span class="string">&quot;LayerNorm.weight&quot;</span>]  <span class="comment"># 不需要衰减的参数</span></span><br><span class="line">optimizer_grouped_parameters = [</span><br><span class="line">    &#123;<span class="string">&quot;params&quot;</span>: [p <span class="keyword">for</span> n, p <span class="keyword">in</span> model.named_parameters() <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">any</span>(nd <span class="keyword">in</span> n <span class="keyword">for</span> nd <span class="keyword">in</span> no_decay)],</span><br><span class="line">    <span class="string">&quot;weight_decay&quot;</span>: args.weight_decay&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;params&quot;</span>: [p <span class="keyword">for</span> n, p <span class="keyword">in</span> model.named_parameters() <span class="keyword">if</span> <span class="built_in">any</span>(nd <span class="keyword">in</span> n <span class="keyword">for</span> nd <span class="keyword">in</span> no_decay)], <span class="string">&quot;weight_decay&quot;</span>: <span class="number">0.0</span>&#125;</span><br><span class="line">]</span><br><span class="line">optimizer = AdamW(optimizer_grouped_parameters, lr=args.learning_rate, eps=args.adam_epsilon)</span><br><span class="line">scheduler = get_linear_schedule_with_warmup(optimizer, num_warmup_steps=args.warmup_steps, num_training_steps=t_total)</span><br></pre></td></tr></table></figure><h3 id="训练">训练</h3><p>迭代每一轮</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> train_iterator:</span><br><span class="line">    <span class="keyword">if</span> epoch &gt;= args.start_train_o_epoch:</span><br></pre></td></tr></table></figure><p>获取每个类别的类别相似度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">prototype_dists = get_rehearsal_prototype(args, model, tokenizer, labels,</span><br><span class="line">                                   pad_token_label_id, mode=<span class="string">&quot;rehearsal&quot;</span>,</span><br><span class="line">                                   data_dir=data_dir)</span><br></pre></td></tr></table></figure><p>获取样本的logits和标签</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按批次遍历训练集中的数据</span></span><br><span class="line"><span class="keyword">for</span> step, batch <span class="keyword">in</span> <span class="built_in">enumerate</span>(epoch_iterator):</span><br><span class="line">    model.train()  <span class="comment"># 将模型切换到训练模式</span></span><br><span class="line">    <span class="keyword">if</span> num_labels-<span class="number">1</span> &gt; args.per_types:  <span class="comment"># 如果不是第一轮训练</span></span><br><span class="line">        t_logits_step = t_logits[step]</span><br><span class="line">        new_labels = out_new_labels[step * args.train_batch_size:step * args.train_batch_size + <span class="built_in">len</span>(batch[<span class="number">3</span>])]</span><br><span class="line">    <span class="keyword">else</span>: <span class="comment"># 如果是第一轮训练，使用训练集的原始标签</span></span><br><span class="line">        t_logits_step = <span class="literal">None</span></span><br><span class="line">        new_labels = batch[<span class="number">3</span>]</span><br><span class="line">    <span class="keyword">if</span> epoch &gt;= args.start_train_o_epoch:</span><br><span class="line">        loss_name = args.loss_name2  <span class="comment"># 实体和“O”的联合损失函数</span></span><br><span class="line">        cls = NNClassification()</span><br><span class="line">        encodings, encoding_labels = get_token_features_and_labels(args, model, batch)</span><br></pre></td></tr></table></figure><p>计算样本之间的余弦相似度分数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    # top_emissions_step(batch_size*set_len, batch_size*set_len):存储样本之间大于实体阈值的余弦相似度分数</span><br><span class="line">    # 选择类别相似度的中位数作为实体阈值 th_dists</span><br><span class="line">    top_emissions_step, _ = cls.get_top_emissions_with_th(encodings, encoding_labels, </span><br><span class="line">                                                        th_dists=torch.median(prototype_dists).item())</span><br><span class="line">else:</span><br><span class="line">    top_emissions_step = top_emissions</span><br></pre></td></tr></table></figure><p>用自定义的模型进行训练，获取损失值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">inputs = &#123;<span class="string">&quot;input_ids&quot;</span>: batch[<span class="number">0</span>],  </span><br><span class="line">        <span class="string">&quot;attention_mask&quot;</span>: batch[<span class="number">1</span>],  </span><br><span class="line">        <span class="string">&quot;token_type_ids&quot;</span>: batch[<span class="number">2</span>] <span class="keyword">if</span> args.model_type <span class="keyword">in</span> [<span class="string">&quot;bert&quot;</span>, <span class="string">&quot;xlnet&quot;</span>] <span class="keyword">else</span> <span class="literal">None</span>,</span><br><span class="line">        <span class="comment"># XLM and RoBERTa don&quot;t use segment_ids</span></span><br><span class="line">        <span class="string">&quot;labels&quot;</span>: new_labels,  </span><br><span class="line">        <span class="string">&quot;t_logits&quot;</span>: t_logits_step,  </span><br><span class="line">        <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;train&quot;</span>,  </span><br><span class="line">        <span class="string">&quot;loss_name&quot;</span>: loss_name,  </span><br><span class="line">        <span class="string">&quot;top_emissions&quot;</span>: top_emissions_step,</span><br><span class="line">        <span class="string">&quot;topk_th&quot;</span>: <span class="literal">True</span>  </span><br><span class="line">        &#125;</span><br><span class="line">outputs = model(**inputs)  </span><br><span class="line">loss = outputs[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 如果设置了梯度累积步数，则需要对损失值进行除以梯度累积步数，以得到平均损失值</span></span><br><span class="line"><span class="keyword">if</span> args.gradient_accumulation_steps &gt; <span class="number">1</span>:</span><br><span class="line">    loss = loss / args.gradient_accumulation_steps</span><br></pre></td></tr></table></figure><p>更新参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">loss.backward()  <span class="comment"># 后向传播</span></span><br><span class="line">tr_loss += loss.item()</span><br><span class="line"><span class="comment"># 如果达到梯度累计步数</span></span><br><span class="line"><span class="keyword">if</span> (step + <span class="number">1</span>) % args.gradient_accumulation_steps == <span class="number">0</span>:</span><br><span class="line">    torch.nn.utils.clip_grad_norm_(model.parameters(), args.max_grad_norm) </span><br><span class="line">    optimizer.step()  </span><br><span class="line">    scheduler.step()  </span><br><span class="line">    optimizer.zero_grad()  <span class="comment"># 清除优化器中所有参数的梯度</span></span><br><span class="line">    global_step += <span class="number">1</span>  <span class="comment"># 更新全局步数</span></span><br></pre></td></tr></table></figure><h3 id="评估">评估</h3><p>在开发集上评估模型性能</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_, results, _ = evaluate(args, model, tokenizer, labels, pad_token_label_id, mode=<span class="string">&quot;dev&quot;</span>,</span><br><span class="line">                                     data_dir=data_dir)</span><br></pre></td></tr></table></figure><p>保存模型及参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model_to_save.save_pretrained(output_dir)</span><br><span class="line">torch.save(args, os.path.join(output_dir, <span class="string">&quot;training_args.bin&quot;</span>)) </span><br></pre></td></tr></table></figure><p>达到最大步数时停止训练</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if args.max_steps &gt; 0 and global_step &gt; args.max_steps:  </span><br><span class="line">    epoch_iterator.close()  # 关闭当前的 epoch 迭代器</span><br><span class="line">    break</span><br></pre></td></tr></table></figure><h3 id="返回全局步数和平均损失">返回全局步数和平均损失</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> global_step, tr_loss / global_step  </span><br></pre></td></tr></table></figure><h1>分类器</h1><h2 id="NNClassification">NNClassification()</h2><h3 id="nn-classifier-dot-prototype">nn_classifier_dot_prototype()</h3><p><strong>根据原型进行重新标记来自旧实体类别的“O”</strong><br>计算“O”与每个类别原型的最大相似度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将输入的表示 reps 重塑为二维张量，并对其进行归一化处理。</span></span><br><span class="line">feature = reps.view(-<span class="number">1</span>, reps.shape[-<span class="number">1</span>])  <span class="comment"># (batch_size, ndim)</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(feature.size(<span class="number">0</span>)):  <span class="comment"># Normalize</span></span><br><span class="line">    feature.data[j] = feature.data[j] / feature.data[j].norm()</span><br><span class="line">    means = torch.stack([exemplar_means[cls] <span class="keyword">for</span> cls <span class="keyword">in</span> <span class="built_in">range</span>(n_tags)])  <span class="comment"># (n_classes, ndim)</span></span><br><span class="line">    dists = torch.matmul(feature, means.T)  <span class="comment"># (batch_size, n_classes)</span></span><br><span class="line">    dists[:, <span class="number">0</span>] = torch.zeros(<span class="number">1</span>).to(reps.device)  <span class="comment"># 将第一列真正的“O” 类别的相似度设为0</span></span><br><span class="line">    <span class="comment"># emissions 包含每个样本中原型相似度的最大值，tags 包含每个样本中原型相似度最大值所在的类别索引。</span></span><br><span class="line">    emissions, tags = dists.<span class="built_in">max</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>计算每个类别的原型重新标记阈值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将support_reps 重塑为二维张量，并对其进行归一化处理。</span></span><br><span class="line">support_reps = support_reps.view(-<span class="number">1</span>, support_reps.shape[-<span class="number">1</span>])</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(support_reps.size(<span class="number">0</span>)):  <span class="comment"># Normalize</span></span><br><span class="line">    support_reps.data[j] = support_reps.data[j] / support_reps.data[j].norm()</span><br><span class="line">support_reps = F.normalize(support_reps)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n_tags):</span><br><span class="line">    <span class="comment"># 计算每个类别原型与支持集中对应类别的样本的相似度</span></span><br><span class="line">    support_reps_dists = torch.matmul(support_reps[support_tags==i], means[i].T)</span><br><span class="line">    <span class="comment"># 沿着最后一个维度（即特征维度）寻找最小值，并返回这些最小值以及对应的索引</span></span><br><span class="line">    prototype_dists.append(support_reps_dists.<span class="built_in">min</span>(-<span class="number">1</span>)[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><h3 id="get-top-emissions-with-th">get_top_emissions_with_th()</h3><p>计算样本之间的余弦相似度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">scores = self._euclidean_metric_dot_2(reps.view(-<span class="number">1</span>, ndim), reps.view(-<span class="number">1</span>, ndim), <span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 排除“O”样本的分数（第二维）</span></span><br><span class="line">        scores = torch.where(reps_labels == <span class="number">0</span>, scores.double(), -<span class="number">100.</span>)  </span><br><span class="line">        <span class="comment"># 排除样本与自身的分数</span></span><br><span class="line">        scores = torch.scatter(scores, <span class="number">1</span>,</span><br><span class="line">                               torch.arange(scores.shape[<span class="number">0</span>]).view(-<span class="number">1</span>, <span class="number">1</span>).to(device), -<span class="number">100.</span>)</span><br></pre></td></tr></table></figure><p>筛选出大于实体阈值的分数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top_emissions = scores &gt; th_dists</span><br></pre></td></tr></table></figure><p>返回 top_emissions, scores</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> top_emissions, scores</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learning_O说明文档</title>
      <link href="/2024/03/18/NER/O%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/"/>
      <url>/2024/03/18/NER/O%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<p>整理自：<a href="https://siljing.github.io/2024/07/21/%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/">J</a></p><h1>概述</h1><h2 id="工具函数">工具函数</h2><table><thead><tr><th>功能</th><th>类/函数</th><th>描述</th></tr></thead><tbody><tr><td>计算类别相似度</td><td><a href="#get_rehearsal_prototype">get_rehearsal_prototype()</a></td><td>根据 memory 和 memory_o 数据集预测的特征和标签计算每个类别的余弦相似度</td></tr><tr><td>预测特征</td><td><a href="#get_token_features_and_labels">get_token_features_and_labels()</a></td><td>使用上一轮的模型预测特征</td></tr><tr><td>预测隐藏状态序列</td><td><a href="#get_token_encodings_and_labels">get_token_encodings_and_labels()</a></td><td>使用上一轮的模型预测最后一层输出端的隐藏状态序列</td></tr><tr><td>计算类别的原型</td><td><a href="#get_exemplar_means">get_exemplar_means()</a></td><td>根据支持集的 encoding 计算每个类别的原型，即均值</td></tr></tbody></table><h2 id="准备数据集">准备数据集</h2><table><thead><tr><th>功能</th><th>类/函数</th><th>描述</th></tr></thead><tbody><tr><td>表示训练/测试样本的对象</td><td><a href="#InputExample">InputExample(object)</a></td><td>包含每个样本的编号，单词序列，标签序列</td></tr><tr><td>表示样本特征集的对象</td><td><a href="#InputFeatures">InputFeatures(object)</a></td><td>包含每个样本特征的 input_ids，input_mask，segment_ids，label_ids</td></tr><tr><td>从文件中读取数据</td><td><a href="#read_examples_from_file">read_examples_from_file()</a></td><td>返回 InputExample 对象的列表</td></tr><tr><td>提取标签集</td><td><a href="#get_labels_dy">get_labels_dy()</a></td><td>提取当前任务及之前的所有标签集</td></tr><tr><td>提取每个样本的 InputFeatures 对象</td><td><a href="#convert_examples_to_features">convert_examples_to_features</a></td><td>将输入的文本样本（通过 InputExample 对象表示）转换为模型输入的特征表示（通过 InputFeatures 对象表示）</td></tr><tr><td>加载并处理数据集样本</td><td><a href="#load_and_cache_examples">load_and_cache_examples()</a></td><td>调用前两个函数从原始数据集中提取特征</td></tr></tbody></table><h2 id="训练和评估">训练和评估</h2><table><thead><tr><th>功能</th><th>类/函数</th><th>描述</th></tr></thead><tbody><tr><td>老师模型函数</td><td><a href="#teacher_evaluate">teacher_evaluate()</a></td><td>使用老师模型预测 logits 分数和进行重新标记旧实体类</td></tr><tr><td>评估及重新标记函数</td><td><a href="#evaluate">evaluate()</a></td><td>评估模型性能以及使用原型对评估集进行重新标记</td></tr><tr><td>训练函数</td><td><a href="#train">train()</a></td><td>训练模型，更新参数</td></tr><tr><td>训练和评估函数</td><td><a href="#train_and_eval">train_and_eval()</a></td><td>调用 teacher_evaluate()，evaluate() 和 train() 进行训练和评估</td></tr></tbody></table><h2 id="损失函数">损失函数</h2><table><thead><tr><th>功能</th><th>类/函数</th><th>描述</th></tr></thead><tbody><tr><td>监督对比损失函数</td><td><a href="#SupConLoss">SupConLoss()</a></td><td>实体的监督对比损失函数</td></tr><tr><td>监督对比损失函数</td><td><a href="#SupConLoss_o">SupConLoss_o()</a></td><td>实体和“O”的联合监督对比损失函数</td></tr></tbody></table><h2 id="自定义模型">自定义模型</h2><p><a href="#MySftBertModel">MySftBertModel()</a></p><h2 id="主函数">主函数</h2><p><a href="#mian">main()</a></p><h1>工具函数</h1><hr><p><a id="get_rehearsal_prototype"> </a></p><h2 id="get-rehearsal-prototype">get_rehearsal_prototype()</h2><h4 id="参数说明：">参数说明：</h4><p>get_rehearsal_prototype(args, model, tokenizer, labels, pad_token_label_id, mode, data_dir)</p><ul><li>labels：当前任务及之前的所有标签集</li><li>pad_token_label_id：PAD 标记的索引</li></ul><h4 id="用法：">用法：</h4><ul><li>加载当前任务的 memory 和 memory_o 数据集，并用当前模型预测特征和标签。</li><li>根据预测特征和标签计算当前任务及之前的所有类别的余弦相似度。</li></ul><h4 id="测试：对-task0-的-memory-和-memory-o-数据集进行测试：">测试：对 task0 的 memory 和 memory_o 数据集进行测试：</h4><p><a id="get_token_features_and_labels"> </a></p><h2 id="get-token-features-and-labels">get_token_features_and_labels()</h2><h4 id="参数说明：-2">参数说明：</h4><p>get_token_features_and_labels(args, model, batch)</p><ul><li>model：当前加载的上一轮的模型</li><li>btach：要预测的批次</li></ul><h4 id="功能：">功能：</h4><p>使用上一轮的模型预测特征，并提取出原数据集的标签。<br><a id="get_token_encodings_and_labels"> </a></p><h2 id="get-token-encodings-and-labels">get_token_encodings_and_labels()</h2><h4 id="功能：-2">功能：</h4><p>同 get_token_features_and_labels()，使用上一轮的模型预测最后一层输出端的隐藏状态序列，并提取出原数据集的标签。<br><a id="get_exemplar_means"> </a></p><h2 id="get-exemplar-means">get_exemplar_means()</h2><h4 id="功能：-3">功能：</h4><p>将每个 label 的所有样本的 encoding 取均值后归一化作为该类别的原型。</p><h1>准备数据集</h1><hr><p><a id="InputExample"></a></p><h2 id="InputExample-object">InputExample(object)</h2><p>表示一个训练或测试的样本的对象，该类包含以下属性：</p><ul><li>guid：句子的编号，用作句子的唯一标识符。</li><li>words：句子中的单词序列，以列表形式存储。</li><li>labels：(可选)序列中每个单词的标签，以列表形式存储。对于测试句子，不需要提供标签列表。</li></ul><p><a id="InputFeatures"></a></p><h2 id="InputFeatures-object">InputFeatures(object)</h2><p>表示一个样本特征集的对象，该类包含以下属性：</p><ul><li>input_ids：表示单词在词汇表中的索引，是模型输入的主要部分。</li><li>input_mask：用于指示哪些部分是真实的输入，哪些部分是填充的。</li><li>segment_ids：在BERT处理句子对中，用于区分不同句子的标识，0表示属于第一个句子，1表示属于第二个句子。</li><li>label_ids：标签的索引。</li></ul><p><a id="get_labels_dy"></a></p><h2 id="get-labels-dy">get_labels_dy()</h2><p>get_labels_dy(path, per_types, step_id)</p><h4 id="参数说明：-3">参数说明：</h4><ul><li>path：标签集的存储路径</li><li>per_types：每个任务要学习的标签数量</li><li>step_id：当前任务的索引</li></ul><h4 id="功能：-4">功能：</h4><p>返回包含当前任务及之前的所有标签的列表。</p><p><a id="read_examples_from_file"></a></p><h2 id="read-examples-from-file">read_examples_from_file()</h2><h4 id="参数说明：-4">参数说明：</h4><p>read_examples_from_file(data_dir, mode)</p><ul><li>data_dir: 数据文件存储的目录，文件读取的路径格式为&quot;data_dir/{mode}.txt&quot;</li><li>mode：根据不同的模式读取不同的样本<ul><li>train：读取 train.txt。</li><li>memory：读取 memory.txt。</li><li>dev：读取 dev.txt。</li><li>rehearsal：同时读取 train.txt 和 memory.txt，并将它们合并成一个列表返回。</li></ul></li></ul><h4 id="用法">用法:</h4><ul><li>使用 os.path.join 构造文件路径，该路径由 data_dir 和 mode 组成。</li><li>打开文件并逐行读取数据。</li><li>对于每一行：<ul><li>如果行以 “-DOCSTART-” 开头或为空行，则表示前一个句子的结束。此时，将累积的words和labels作为一个样本添加到 examples 列表中，并清空 words 和 labels 列表。</li><li>否则，将行按制表符分割，获取单词和标签，并将它们添加到 words 和 labels 列表中。</li></ul></li><li>返回 examples 列表，其中每个元素都是一个 InputExample 对象，代表一个句子。</li></ul><p><a id="convert_examples_to_features"></a></p><h2 id="convert-examples-to-features">convert_examples_to_features()</h2><h4 id="参数说明：-5">参数说明：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">convert_examples_to_features(examples, label_list, max_seq_length, tokenizer, cls_token_at_end=<span class="literal">False</span>, cls_token=<span class="string">&quot;[CLS]&quot;</span>, </span><br><span class="line">                        cls_token_segment_id=<span class="number">1</span>, sep_token=<span class="string">&quot;[SEP]&quot;</span>, sep_token_extra=<span class="literal">False</span>, pad_on_left=<span class="literal">False</span>, pad_token=<span class="number">0</span>, </span><br><span class="line">                        pad_token_segment_id=<span class="number">0</span>, pad_token_label_id=-<span class="number">1</span>, sequence_a_segment_id=<span class="number">0</span>, mask_padding_with_zero=<span class="literal">True</span>):</span><br></pre></td></tr></table></figure><ul><li>examples：经过 read_example_from_file() 函数处理的 InputExample 对象列表</li><li>label_list：当前增量学习任务的标签</li><li>max_seq_length：tokenization 后的最大序列长度，比这个长的会被截断，比这个短的会被填充。</li><li>cls_token_at_end：是否在序列最后加一个 CLS token：<ul><li>False (Default, BERT/XLM pattern): [CLS] + A + [SEP] + B + [SEP]</li><li>True (XLNet/GPT pattern): A + [SEP] + B + [SEP] + [CLS]</li></ul></li><li>cls_token_segment_id：定义关于 CLS token 的段id (0 for BERT, 2 for XLNet)。</li><li>sep_token_extra：是否在结尾再添加 SEP token( for RoBERTa pattern)。</li><li>pad_on_left：是否在句子左边填充 PAD。</li></ul><h4 id="用法-2">用法</h4><ul><li>将增量学习任务的标签从0编号，构建标签到索引映射 label_map。</li><li>遍历每个 example:<ul><li>使用分词器 tokenizer 对句子的每个单词进行分词，并在 label_ids 列表中添加它们的标签编号。</li><li>根据序列的长度和特殊标记的数量，截断序列，使其长度符合 max_seq_length 的要求。</li><li>添加特殊标记 [CLS] 和 [SEP]，以及相应的标签编号。</li><li>构建 segment_ids (全为0) 表示句子的段落编号。</li><li>构建 input_ids 列表，将 tokens 序列映射为其对应的 ID。</li><li>构建输入掩码 input_mask，1 for real tokens and 0 for padding tokens。</li><li>对不足长度的序列进行填充。</li><li>将每个 example 的处理结果存储为一个 InputFeatures 对象，并添加到 features 列表中。</li></ul></li><li>返回 features 列表。</li></ul><p><a id="load_and_cache_examples"></a></p><h2 id="load-and-cache-examples">load_and_cache_examples()</h2><h4 id="参数说明：-6">参数说明：</h4><p>load_and_cache_examples(args, tokenizer, labels, pad_token_label_id, mode, data_dir)</p><ul><li>tokenizer：分词器</li><li>labels: 当前增量学习任务的标签</li><li>pad_token_label_id：PAD 位置的掩码</li><li>mode：指定当前的模式，可能为 train，dev，rehears。</li><li>data_dir: 数据文件存储的目录。</li></ul><p>data_dir，mode 传入 read_examples_from_file 函数读取样本。<br>tokenizer，传入 convert_examples_to_features 函数将样本转换为特征。</p><h4 id="功能：-5">功能：</h4><ol><li>调用 read_examples_from_file() 和 convert_examples_to_features() 函数，根据不同的模式从 data_dir 中读取样本并转换为特征，如果是’rehearsal’模式，则读取 train.txt 和 memory.txt，如果是开发，训练，测试模式，则读取相应的dev.txt，train.txt，test.txt。</li><li>如果是分布式训练的非主进程，直接从缓存文件中加载特征。</li><li>返回一个 TensorDataset 对象 dataset(all_input_ids, all_input_mask, all_segment_ids, all_label_ids)。</li></ol><h4 id="测试">测试</h4><p>对 task0 的训练集的句子进行测试：<br><strong>获取标签集</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">labels = get_labels_dy(path=<span class="string">&quot;../data/labels.txt&quot;</span>, per_types=<span class="number">6</span>, step_id=<span class="number">0</span>)</span><br><span class="line">labels</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;O&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;building-library&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;organization-showorganization&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;other-award&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;building-other&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;organization-religion&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;organization-sportsteam&#x27;</span>]</span><br></pre></td></tr></table></figure><p><strong>运行 load_and_cache_examples() 函数</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_dataset = load_and_cache_examples(args, tokenizer, labels, pad_token_label_id, mode=mode, data_dir=data_dir)</span><br></pre></td></tr></table></figure><p>输出日志()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">03/28/2024 13:38:28 - INFO - __main__ -   Creating features from dataset file at ../data/tasks/task_0</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   Writing example 0 of 100</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   *** Example ***</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   guid: train-1</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   tokens: [CLS] this rivalry intensified in 1919 when arsenal were unexpectedly promoted to the first division , taking a place that tottenham believed should be theirs . [SEP]</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   input_ids: 101 2023 10685 15767 1999 4529 2043 9433 2020 14153 3755 2000 1996 2034 2407 1010 2635 1037 2173 2008 18127 3373 2323 2022 17156 1012 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   label_idsspan><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   *** Example ***</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   guid: train-2</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   tokens: [CLS] only one of four entered corvette ##s - gt ##1 c ##6 ##r of luc alpha ##nd ave ##nt ##ures - eventually finished the race , taking second place in class . [SEP]</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   input_ids: 101 2069 2028 1997 2176 3133 22687 2015 1011 14181 2487 1039 2575 2099 1997 12776 6541 4859 13642 3372 14900 1011 2776 2736 1996 2679 1010 2635 2117 2173 1999 2465 1012 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">03/28/2024 13:38:28 - INFO - util.supervised_util -   label_ids: -100 0 0 0 0 0 0 -100 0 0 -100 0 -100 -100 0 6 6 -100 6 -100 -100 0 0 0 0 0 0 0 0 0 0 0 0 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100 -100</span><br><span class="line">......仅展示前两个句子</span><br><span class="line">03/28/2024 13:38:28 - INFO - __main__ -   Saving features into cached file ../data/tasks/task_0\cached_rehearsal_output_nerd_128</span><br></pre></td></tr></table></figure><h1>训练和评估</h1><p><a id="teacher_evaluate"> </a></p><h2 id="teacher-evaluate">teacher_evaluate()</h2><h4 id="用法：-2">用法：</h4><ol><li>使用老师模型，即上一轮的模型预测训练集的 <code>logits_list</code> 和获取真实标签 <code>out_labels</code>。</li><li>调用 <a href="#evaluate">evaluate(mode=“rehearsal”)</a> 获取训练集的 <code>preds</code>, <code>emissions</code>, <code>out_label_ids</code>, 以及重新标记阈值 <code>prototype_dists</code>。</li><li>重新标记旧实体类：对于训练集的每个样本，如果它的原型的相似度大于重新标记阈值，则将该样本预测为这个旧实体类，否则保持原来的预测标签不变。</li><li>返回 <code>logits_list</code> 和重新标记过的标签列表 <code>out_label_new_list</code>。</li></ol><p><a id="evaluate"> </a></p><h2 id="evaluate">evaluate()</h2><h4 id="用法：-3">用法：</h4><ol><li>加载数据集：调用 <a href="#load_and_cache_examples">load_and_cache_examples()</a> 根据不同模式加载评估集，support 集（提取实体样本），support_o 集（提取“O”样本），训练集。</li><li>计算类别原型：</li></ol><ul><li>使用上一轮模型预测支持集的 encoding 和label。</li><li>调用 <a href="#get_exemplar_means">get_exemplar_means()</a> 根据支持集的 encoding 和label 计算每个类别的原型。</li></ul><ol start="3"><li>调用 <a href="#get_token_encodings_and_labels">get_token_encodings_and_labels()</a> 使用上一轮模型预测评估集的 encoding 和 标签 <code>out_label_ids</code>。</li><li>如果是’rehearsal’模式，则剔除掉支持集中当前任务标签的样本，并调用 NNClassification 的 <a href="#nn_classifier_dot_prototype">nn_classifier_dot_prototype()</a> 计算：</li></ol><ul><li><code>preds</code>：评估集每个样本中原型相似度最大值所在的类别索引</li><li><code>emissions</code>：评估集每个样本与每个类别的原型相似度的最大值</li><li><code>prototype_dists</code>：根据支持集计算的每个旧类别的原型重新标记阈值列表</li></ul><ol start="5"><li>如果是’rehearsal’模式，则直接返回 <code>preds</code>, <code>emissions</code>, <code>out_label_ids</code>, <code>prototype_dists</code>。</li><li>将 <code>out_label_ids</code>，<code>preds</code> 的标签从索引形式转换为真实的字符串形式。</li><li>将评估集的 <code>out_label_list</code> 作为真实标签，将 <code>preds_list</code> 作为预测标签，使用 seqeval 库计算 F1 分数 <code>macro_results</code>,<br><code>micro_results</code>。</li><li>返回 <code>macro_results</code>， <code>micro_results</code>，<code>preds_list</code>。</li></ol><p><a id="train"> </a></p><h2 id="train">train()</h2><h4 id="参数说明：-7">参数说明：</h4><p>train(args, train_dataset, train_dataloader, model, tokenizer, labels, pad_token_label_id, data_dir, output_dir, t_logits, out_new_labels):</p><ul><li>train_dataset：训练集</li><li>train_dataloader：训练集加载器</li><li>labels：当前任务及之前的所有真实标签集</li><li>pad_token_label_id：PAD 标记的索引</li><li>data_dir：输入数据集的文件路径</li><li>output_dir：保存模型的检查点的文件路径</li><li>t_logits：老师模型预测的 logits 分数</li><li>out_new_labels：老师模型预测的标签</li></ul><h4 id="用法：-4">用法：</h4><h6 id="参数配置">参数配置</h6><ol><li>设置训练总步数 t_total（用于传入 warmup 中）：</li></ol><ul><li>通过 <code>args.max_steps</code> 可以指定 t_total，并覆盖 <code>arg.num_train_epochs</code>。</li><li>否则通过 <code>t_total = len(train_dataloader) // args.gradient_accumulation_steps * args.num_train_epochs</code> 计算 t_total。</li></ul><ol start="2"><li>配置优化器：使用AdamW优化器，使用了权重衰减,学习率调节器。</li></ol><ul><li><code>args.learning_rate</code>(default=5e-5) 和 <code>args.adam_epsilon</code>(default=1e-8) 可修改AdamW的学习率和模糊因子。</li><li><code>args.warmup_steps</code>(default=0) 可修改 warmup 的初始预热步数。</li></ul><ol start="3"><li>根据 <code>args.fp16</code> 选择是否启用混合精度训练。</li></ol><h6 id="训练模型：">训练模型：</h6><p>迭代每一轮：</p><ol><li>如果当前轮次 &gt;=  <code>args.start_train_o_epoch</code>：<ul><li>利用 <a href="#get_rehearsal_prototype">get_rehearsal_prototype()</a> 函数计算类别相似度</li><li>将 <code>loss_name</code> 设为 实体和“O”联合损失函数。</li><li>调用 <a href="#get_token_features_and_labels">get_token_features_and_labels()</a> 函数使用当前模型预测特征和标签。</li><li>调用 <a href="#get_top_emissions_with_th">get_top_emissions_with_th()</a> 选择“O”的正样本。</li></ul></li><li>如果是第一个任务，使用原始数据集的标签。</li><li>如果不是第一个任务，使用老师模型 <a href="#tearch_evaluate">tearch_evaluate()</a> 预测 logits 分数 <code>t_logits</code> 和标签 <code>out_new_labels</code>。</li><li>模型前向传播，获取模型输出的损失值。</li><li>模型反向传播。</li><li>更新参数</li><li>调用 <a href="#evaluate">evaluate()</a> 的开发模式对开发集进行评估</li><li>达到 <code>args.save_steps</code> 时保存 checkpoint 文件和模型。</li><li>返回训练总步数和平均损失值。</li></ol><p><a id="train_and_eval"> </a></p><h2 id="train-and-eval">train_and_eval()</h2><h4 id="参数说明：-8">参数说明：</h4><p>train_and_eval(args, labels, num_labels, pad_token_label_id, model_name_or_path, output_dir, data_dir, step_id)</p><ul><li>labels：当前任务及之前的所有标签集</li><li>num_labels：labels 的数量</li><li>pad_token_label_id：PAD 标记的索引</li><li>model_name_or_path：加载模型的路径</li><li>output_dir：输出结果的文件路径</li><li>data_dir：读取数据集的文件路径</li><li>step_id：当前任务的 id</li></ul><h4 id="用法：-5">用法：</h4><ol><li>加载上一个任务的模型参数，分词器，模型。</li><li>调用 <a href="#load_and_cache_examples">load_and_cache_examples(mode=“rehearsal”)</a> 加载训练集（由当前任务的 train.txt 和 memory.txt 组成）</li><li>如果不是第一个任务，则调用 <a href="#teacher_evaluate">teacher_evaluate(mode=“train”)</a> 使用老师模型预测训练集的 logits 分数 <code>t_logits</code> 和 <code>out_new_labels</code>。</li><li>调用 <a href="#train">train()</a> 进行训练。</li><li>存储模型的参数，分词器，模型。</li><li>如果 <code>args.do_eval</code> 为 Ture，对每个 checkpoint 调用 <a href="#evaluate">evaluate()</a> 的开发模式对开发集进行评估，并存储进 eval_results.txt 文件。</li><li>如果 <code>args.do_predict</code> 为 Ture，调用 <a href="#evaluate">evaluate()</a> 的测试模式对测试集进行评估和预测，并保存评估和预测结果。</li></ol><h1>损失函数</h1><p><a id="SupConLoss"> </a></p><h2 id="SupConLoss">SupConLoss()</h2><h4 id="init"><strong>init</strong>():</h4><h6 id="参数说明：-9">参数说明：</h6><p><strong>init</strong>(self, temperature=0.07, contrast_mode=‘all’, base_temperature=0.07, topk_th=False)</p><ul><li>temperature：温度参数，用于调整对比损失函数中余弦相似度的尺度。</li><li>contrast_mod：</li><li>base_temperature：基准温度参数，用于调整对比损失函数的基准尺度。</li><li>topk_th：</li></ul><h4 id="forward">forward():</h4><h6 id="参数说明：-10">参数说明：</h6><p>forward(self, features, labels=None, mask=None, entity_topk=None, ignore_index=CrossEntropyLoss(), per_types=6, aug_feature=None)</p><ul><li>mask：对比损失的掩码，同一标签的样本设为1，不同为0。</li><li>entity_topk: 实体 Top K，表示每个类别的前 K 个样本在对比中的重要性。</li><li>ignore_index: 忽略索引，默认为 CrossEntropyLoss()，表示在计算损失时需要忽略的标签索引。</li></ul><h6 id="用法：-6">用法：</h6><ol><li>根据输入的 <code>labels</code> 和 <code>mask</code> 构建 <code>mask</code>：不同标签的设为0，与自身的设为0，ignore_index 所对应的行设为0，“O”样本所在行设为0。</li><li>选择 Anchor：根据 <code>contrast_mode</code> 选择 anchor 样本，如果 <code>contrast_mode</code> 为 ‘one’, 则将第一个样本设为 anchor，如果 <code>contrast_mode</code> 为 ‘all’, 则将所有样本设为 anchor。</li><li>计算对比损失的 Logits：计算 anchor 和其他样本之间的余弦相似度。</li><li><code>entity_topk</code> 非空: 将 <code>mask</code> 中所有样本与 entity_topk样本设为1，与当前任务训练集的“O”样本设为 0。</li><li>根据监督对比损失函数公式计算损失值，返回所有 anchor 的平均损失值。</li></ol><h1>模型</h1><p><a id="MySftBertModel"> </a></p><h2 id="MySftBertModel">MySftBertModel()</h2><h4 id="forward-2">forward():</h4><ol><li>使用 BertModel 模型前向传播</li><li>提取特征 <code>features </code>：将 <code>ast_hidden_state</code> 通过一个 <code>mlp(Linear-ReLU-Linear)</code> 层变换并归一化后赋给 <code>features </code>。</li><li>提取 <code>logits</code>：将 <code>last_hidden_state</code> 依次通过dropout 层，线性分类器层后赋给 <code>logits</code>。</li><li>如果是非训练模式，直接返回 loss, features_enc, features, logits，其中 <code>loss = None</code>，<code>features_enc = last_hidden_state</code></li><li>计算损失值 <code>loss</code>。：<ul><li>根据 <code>loss_name</code> 计算损失函数的值。</li><li>如果不是第一个任务，计算当前任务样本的 logits 与真实标签的交叉熵损失，当前模型与老师模型 logits 的KL散度。将交叉熵损失或KL散度添加到 <code>loss</code> 中。</li></ul></li><li>返回 loss, features_enc, features, logits。</li></ol><h1>主函数</h1><p><a id="main"> </a></p><h2 id="main">main()</h2><h4 id="功能：-6">功能：</h4><ul><li>创建解释器，添加命令行参数。</li><li>迭代每个任务，调用 <a href="#get_labels_dy">get_labels_dy()</a> 获取当前任务及之前的所有标签集 <code>labels</code>，然后调用 <a href="#train_and_eval">train_and_eval()</a> 进行训练和评估。</li></ul>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各分类简介</title>
      <link href="/2024/02/16/%E5%90%84%E9%A1%B9%E4%BA%8B%E5%AE%9C/"/>
      <url>/2024/02/16/%E5%90%84%E9%A1%B9%E4%BA%8B%E5%AE%9C/</url>
      
        <content type="html"><![CDATA[<h1>关于本站</h1><p>本站几经辗转，目前基于安知鱼主题1.6.12（是 heo的改版），这一版主题有两处可能导致博客崩溃的BUG（遇到同样问题的uu可以看一下我写的详细解决方案），总体还是非常美丽！！（狠狠心动了哈哈）</p><p>本站原用于星火杯比赛，拟作为校园开源平台——慧试使用，现作为个人博客，欢迎闯入我的小世界~👋</p><h1>XDU-CS-lab(月更)</h1><p><a href="https://github.com/Alive0103/XDU-CS-lab">https://github.com/Alive0103/XDU-CS-lab</a></p><p>西电计科软件方向课程资料，试卷，实验通关秘籍</p><p>仓库为本人(22级)计科资料存储地，涵盖自大一开始的部分课程设置，实验，期末试卷，学习心得以及部分速通技巧，只此盏灯，为你长明不息。</p><p>部分PPT已转为PDF格式，需要PPT源文件的uu可以给我发邮件</p><p>仅用于学术交流，内容仅供参考，请勿抄袭，否则后果自负。</p><p>⭐觉得有用的话点个星星~不迷路！你的星星就是我持续上传的动力！！！</p><h1>NER</h1><p>nlp领域的ner命名实体识别方向，我们的项目旨在解决机器学习灾难性遗忘问题，现已成功把SOTA的0.71的F1提高到0.75，好耶！感兴趣的uu可以移步瞧瞧，收获蛮多的（虽然感觉做起来还是挺痛苦的哈哈），强推李沐老师的《动手学深度学习》！！！</p><p>祝大家学深度学习一切顺利，不掉头发！🤯</p><p>另有NLP-NER方向相关学习成果(智慧典藏——面向动态互联网环境的持续记忆系统)，欢迎<a href="https://github.com/Alive0103/NLP-NER">移步探讨</a></p><h1>人类观察录（周更）</h1><p>这里收集了各式各样的人~明媚的，深沉的，我真诚地想记录下来每一个有趣的灵魂（才不要在时间的长河里抹掉你们的印记），欢迎常来看看我的赛博收集手册~</p><blockquote><p>说不定你就是其中珍贵的一页呢？</p></blockquote><p>这个分类其实想写一些我的奇幻经历，会慢慢更新哒，包括但不限于一些恐怖故事，还有一份万言书（希望还有时间以连载的形式更完）哈哈，害怕的宝宝晚上慎看🍀</p><p>还有还有，可能会夹杂一些寻人启事，人和人的相遇真的全凭缘分，有些人错过就是错过了，甚至连说再见的机会都没有，想在这里写下我仅存的印象，如果各位或者本人有幸能看到的话还请留下联系方式，这对我很重要，谢谢谢谢！！！</p><p>好像有点多？哈哈，因为这些同等重要💕</p><h1>技能点</h1><p>AI时代，何去何从，这是个问题，选“工程性技术”狠赚一笔，还是大热的人工智能，亦或是更加机械重复的方向，孰好孰坏？似乎没人能给出标准答案，大学的可能性在于尝试，于是乎，我的大学几乎尝试了计算机传统路线的所有可能。</p><p>前端三大件，Vue，深度学习，Pytorch，数模，烧板子，ACM……本博客技能点板块会记录学习过程中的所思所想，在精不在多，很高兴我的每一分努力都能被你看在眼里💕</p><blockquote><p>才不是万千替代品般的中庸者，欢迎来到我的风暴中心</p></blockquote><h2 id="前端（Vue）">前端（Vue）</h2><p>资料参考于尚硅谷和黑马，个人学习笔记，仅供参考</p><h2 id="数据结构（周更）">数据结构（周更）</h2><p>跟着<a href="https://programmercarl.com/">代码随想录</a>以刷题笔记呈现（C++/Java都有），不会的题可以来瞧瞧~共勉兄弟们！</p><h2 id="深度学习">深度学习</h2><p>记录了NER大模型开发微调的一些心得，比较小白向，希望对你有帮助，也希望路过的高手给出一些意见（不玻璃心）💪</p><h2 id="Java学习笔记（持续更新）">Java学习笔记（持续更新）</h2><p>速成向，预计2025/3左右会更新相关项目，可以多多关注~</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RNN模型</title>
      <link href="/2024/02/15/NER/RNN%E6%A8%A1%E5%9E%8B/"/>
      <url>/2024/02/15/NER/RNN%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1>认识RNN模型</h1><blockquote><p>RNN(Recurrent Neural Network),中文称作循环神经网络，它一般以序列数据为输入，通过网络内部的结构设计有效捕捉序列之间的关系特征，一般也是以序列形式进行输出。</p></blockquote><ul><li><p>一般单层神经网络结构</p></li><li><p>RNN单层结构</p></li><li><p>以时间步对RNN进行展开后的单层网络结构</p></li></ul><p>RNN的循环机制使模型隐层上一时间步产生的结果能够作为当下时间步输入的一部分(当下时间步的输入<strong>除了正常的输入外还包括上一步的隐层输出</strong>)对当下时间步的输出产生影响。</p><ul><li>RNN模型的作用</li></ul><p>因为RNN结构能够很好利用序列之间的关系，因此针对自然界具有连续性的输入序列，如人类的语言，语音等进行很好的处理，广泛应用于NLP领域的各项任务，如文本分类，情感分析，意图识别，机器翻译等。</p><h2 id="分类、">分类、</h2><ul><li><p>按照输入和输出的结构进行分类：</p><ul><li>NvsN-RNN</li><li>Nvs1-RNN</li><li>1vsN-RNN</li><li>NvsM-RNN</li></ul></li><li><p>按照RNN的内部构造进行分类：</p><ul><li>传统RNN</li><li>LSTM</li><li>Bi-LSTM</li><li>GRU</li><li>Bi-GRU</li></ul></li></ul><h3 id="NvsN-RNN">NvsN-RNN</h3><p>它是RNN最基础的结构形式，最大的特点就是：输入和输出序列是等长的.由于这个限制的存在，使其适用范围比较小，可用于生成等长度的合辙诗句。</p><h3 id="Nvs1-RNN">Nvs1-RNN</h3><p>时候我们要处理的向题输入是一个序列，而要求输出是一个单独的值而不是序列，应该怎样建模呢？我们只要在最后一个隐层输出上进行线性变换就可以了，大部分情况下，为了更好的明确结果，还要使用sigmoid或者softmaxi进行处理.这种结构经常被应用在文本分类问题上。</p><h3 id="1vsN-RNN">1vsN-RNN</h3><p>如果输入不是序列而输出为序列的情况怎么处理呢？我们最常采用的一种方式就是使该输入作用于每次的输出之上.这种结构可用于将图片生成文字任务等。</p><h3 id="NvsM-RNN">NvsM-RNN</h3><p>这是一种不限输入输出长度的RNN结构，它由编码器和解码器两部分组成，两者的内部结构都是某类RNN,它也被称为seq2seq架构.输入数据首先通过编码器，最终输出一个隐含变量C,之后最常用的做法是使用这个隐含变量c作用在解码器进行解码的每一步上，以保证输入信息被有效利用。</p><h1>传统RNN模型</h1><ul><li>传统RNN的内部结构图：</li></ul><h2 id="内部结构分析">内部结构分析</h2><p>我们把目光集中在中间的方块部分，它的输入有两部分，分别是h(t-1)以及x(t),代表上一时间步的隐层输出，以及此时间步的输入，它们进入RNN结构体后，会&quot;融合&quot;到一起，这种融合我们根据结构解释可知，是将二者进行拼接，形成新的张量[x(t),h(t1)],<code>行不变，列变</code>之后这个新的张量将通过一个全连接层（线性层），该层使用<code>tanh</code>作为激活函数，最终得到该时间步的输出h(t),它将作为下一个时间步的输入和x(t+1)一起进入结构体.以此类推。</p><ul><li>内部计算公式：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mi>t</mi></msub><mo stretchy="false">[</mo><msub><mi>X</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">]</mo><mo>+</mo><msub><mi>b</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_t=tanh(W_t[X_t,h_{t-1}]+b_t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><ul><li>激活函数tanh的作用：</li></ul><p>用于帮助调节流经网络的值，tanh函数将值压缩在-1和1之间。</p><ul><li>Pytorch中传统RNN工具的使用：</li></ul><p>位置：在torch.nn工具包之中，通过torch.nn.RNN可调用。</p><p>实现过程略</p><h2 id="传统RNN的优势">传统RNN的优势</h2><p>由于内部结构简单，对计算资源要求低，相比之后我们要学习的RNN变体：LSTM和GRU模型参数总量少了很多，在<code>短序列任务</code>上性能和效果都表现优异。</p><h2 id="传统RNN的缺点">传统RNN的缺点</h2><p>传统RNN在解决长序列之间的关联时，通过实践，证明经典RNN表现很差，原因是在进行反向传播的时候，过长的序列导致梯度的计算异常，发生梯度消失或爆炸。</p><blockquote><p>什么是梯度消失或爆炸呢？</p><p>根据反向传播算法和链式法则，梯度的计算可以简化为以下公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>D</mi><mi>n</mi></msub><mo>=</mo><msup><mi>σ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msub><mi>z</mi><mn>1</mn></msub><mo stretchy="false">)</mo><msub><mi>w</mi><mn>1</mn></msub><mo>⋅</mo><msup><mi>σ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msub><mi>z</mi><mn>2</mn></msub><mo stretchy="false">)</mo><msub><mi>w</mi><mn>2</mn></msub><mo>⋅</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>⋅</mo><msup><mi>σ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msub><mi>z</mi><mi>n</mi></msub><mo stretchy="false">)</mo><msub><mi>w</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">D_n=\sigma&#x27;(z_1)w_1\cdot\sigma&#x27;(z_2)w_2\cdot...\cdot\sigma&#x27;(z_n)w_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中sigmoid的导数值域是固定的，在[0,0.25]之间，而一旦公式中的w也小于1，那么通过这样的公式连乘后，最终的梯度就会变得非常非常小，这种现象称作梯度消失.反之，如果我们人为的增大w的值，使其大于1，那么连乘够就可能造成梯度过大，称作梯度爆炸。</p></blockquote><ul><li>梯度消失或爆炸的危害：</li></ul><p>如果在训练过程中发生了梯度消失，权重无法被更新，最终导致训练失败：梯度爆炸所带来的梯度过大，大幅度更新网络参数，在极端情况下，结果会溢出(NaN值)。</p><h1>LSTM模型</h1><p>LSTM(Long Short-Term Memory)，也称长短时记忆结构，它是传统RNN的变体，与经典RNN相比能够有效捕捉长序列之间的语义关联，缓解梯度消失或爆炸现象.同时LSTM的结构更复杂，它的核心结构可以分为四个都分去解析：</p><ul><li>遗忘门</li><li>输入门</li><li>细胞状态</li><li>输出门</li></ul><h2 id="内部结构">内部结构</h2><h3 id="遗忘门部分结构图与计算公式">遗忘门部分结构图与计算公式</h3><p>公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mrow><mo fence="true">(</mo><msub><mi>W</mi><mi>f</mi></msub><mo lspace="0em" rspace="0em">⋅</mo><mo stretchy="false">[</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy="false">]</mo><mo>+</mo><msub><mi>b</mi><mi>f</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f_{t}=\sigma\left(W_{f}{\cdot}[h_{t-1},x_{t}]+b_{f}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">⋅</span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><ul><li>遗忘门结构分析：</li></ul><p>与传统RNN的内部结构计算非常相似首先将当前时间步输入x(t)与上一个时间步隐含状态h(t-1)拼接，得到[x(t),h(1)]，然后通过一个全连接层做变换，最后通过sigmoidi函数进行激活得到f(t)，我们可以将f(t)看作是门值，好比一扇门开合的大小程度，门值都将作用在通过该扇门的张量，遗忘门门值将作用的上一层的细胞状态上，代表遗忘过去的多少信息，又因为遗忘门门值是由f(t)，h(t1)计算得来的，因此整个公式意味着==根据当前时间步输入和上一个时间步隐含状态h(t-1)来决定遗忘多少上一层的细胞状态所携带的过往信息==</p><ul><li>激活函数sigmiod的作用：</li></ul><p>用于帮助调节流经网络的值，sigmoid函数将债压缩在0和1之间。</p><h3 id="输入门部分结构图与计算公式">输入门部分结构图与计算公式</h3><p>公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>it</mtext><mo>=</mo><mi>σ</mi><mrow><mo fence="true">(</mo><msub><mi>W</mi><mi>i</mi></msub><mo separator="true">⋅</mo><mo stretchy="false">[</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy="false">]</mo><mo>+</mo><msub><mi>b</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mover accent="true"><mi>C</mi><mo>~</mo></mover><mi>t</mi></msub><mo>=</mo><mi>tanh</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>W</mi><mi>C</mi></msub><mo>⋅</mo><mo stretchy="false">[</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy="false">]</mo><mo>+</mo><msub><mi>b</mi><mi>C</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;\text{it} =\sigma\left(W_{i}\cdotp[h_{t-1},x_{t}]+b_{i}\right)  \\&amp;\tilde{C}_{t} =\tanh(W_C\cdot[h_{t-1},x_t]+b_C) \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0802em;vertical-align:-1.2901em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7901em;"><span style="top:-3.8703em;"><span class="pstrut" style="height:2.9202em;"></span><span class="mord"></span></span><span style="top:-2.2901em;"><span class="pstrut" style="height:2.9202em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2901em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7901em;"><span style="top:-3.9501em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord">it</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-2.3699em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">tanh</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2901em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>输入门结构分析：</li></ul><p>我们看到输入门的计算公式有两个，第一个就是产生输入门门值的公式，它和遗忘门公式几乎相同，区别只是在于它们之后要作用的目标上.这个公式意味着输入信息有多少需要进行过滤。输入门的第二个公式是与传统RNN的内部结构计算相同.对于LSTM来讲，它得到的是当前的细胞状态，而不是像经典RNN一样得到的是隐含状态。</p><h3 id="细胞状态更新">细胞状态更新</h3><p>公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mi>t</mi></msub><mo>=</mo><msub><mi>f</mi><mi>t</mi></msub><mo>∗</mo><msub><mi>C</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>i</mi><mi>t</mi></msub><mo>∗</mo><msub><mover accent="true"><mi>C</mi><mo>~</mo></mover><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">C_t=f_t*C_{t-1}+i_t*\tilde{C}_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0702em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><ul><li>细胞状态更新分析：</li></ul><p>细胞更新的结构与计算公式非常容易理解，这里没有全连接层，只是将刚刚得到的遗忘门门值与上一个时间步得到的C(t-1)相乘，再加上输入门门值与当前时间步得到的未更新C(t)相乘的结果，最终得到更新后的C(t)作为下一个时间步输入的一部分.整个细胞状态更新过程就是对遗忘门和输入门的应用。</p><h3 id="输出门部分结构图与计算公式">输出门部分结构图与计算公式</h3><p>公式:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>o</mi><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mrow><mo fence="true">(</mo><msub><mi>W</mi><mi>o</mi></msub><mrow><mo fence="true">[</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo fence="true">]</mo></mrow><mo>+</mo><msub><mi>b</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>h</mi><mi>t</mi></msub><mo>=</mo><msub><mi>o</mi><mi>t</mi></msub><mo>∗</mo><mi>tanh</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>C</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c}o_t=\sigma\left(W_o\left[h_{t-1},x_t\right]+b_o\right)\\h_t=o_t*\tanh\left(C_t\right)\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">tanh</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><ul><li>输出门结构分析：</li></ul><p>输出门部分的公式也是两个，第一个即是计算输出门的门值，它和遗忘门，输入门计算方式相同.第二个即是使用这个门值产生隐含状态h(t)，他将作用在更新后的细胞状态C(t)上，并做tanh激活，最终得到h(t)作为下一时间步输入的一部分.整个输出门的过程，就是为了产生隐含状态h(t)。</p><h2 id="Bi-LSTM">Bi-LSTM</h2><p>Bi-LSTM即双向LSTM,它没有改变LSTM本身任何的内部结构，只是将LSTM应用两次且方向不同，再将两次得到的LSTM结果进行拼接作为最终输出。</p><ul><li>Bi-LSTM结构分析：</li></ul><p>我们看到图中对我爱中雨这句话或者叫这个输入序列，进行了从左到右和从右到左两次LSTM处理，将得到的结果张量进行了拼接作为最终输出.这种结构能够捕捉语言语法中一些特定的前置或后置特征，增强语义关联但是模型参数和计算复杂度也随之增加了一倍，一般需要对语料和计算资源进行评估后决定是否使用该结构。</p><ul><li>Pytorch中LSTM工具的使用：</li></ul><p>位置：在torch.nn工具包之中，通过torch.nn.LSTM可调用。</p><h1>注意力机制</h1><h2 id="什么是注意力">什么是注意力</h2><p>我们观察事物时，之所以能够快速判断一种事物（当然允许判断是错误的），是因为我们大脑能够很快把注意力放在事物最具有辨识度的部分从而作出判断，而并非是从头到尾的观察一遍事物后，才能有判断结果.正是基于这样的理论，就产生了注意力机制。</p><blockquote><p>NLP领域中，当前的注意力机制大多数应用与seq2seq架构，即编码器和解码模型</p></blockquote><h2 id="注意力计算规则">注意力计算规则</h2><blockquote><p>它需要三个指定的输入Q(query),K(key),V(value),然后通过计算公式得到注意力的结果，这个结果代表query（查询）在key和value作用下的注意力表示.当输入的Q=K=V时，称作自注意力计算规则。</p></blockquote><ul><li>常见的注意力计算规则：</li></ul><ol><li>将Q,K进行纵轴拼接，做一次线性变化，再使用softmax处理获得结果最后与V做张量乘法。</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>L</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mo stretchy="false">[</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>⋅</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">Attention(Q,K,V)=Softmax(Linear([Q,K]))\cdot V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">tt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mord mathnormal">in</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">([</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">]))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></span></p><ol start="2"><li>将Q,K进行纵轴拼接，做一次线性变化后再使用tanh函数激活，然后再进行内部求和，最后使用softmax处理获得结果再与V做张量乘法。</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><mi>L</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mo stretchy="false">[</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>⋅</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">Attention(Q,K,V)=Softmax(sum(tanh(Linear([Q,K]))))\cdot V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">tt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mord mathnormal">in</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">([</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">]))))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></span></p><ol start="3"><li>将Q与K的转置做点积运算，然后除以一个缩放系数，再使用softmax处理获得结果最后与V做张量乘法。</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>Q</mi><mo>⋅</mo><msup><mi>K</mi><mi>T</mi></msup></mrow><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac><mo stretchy="false">)</mo><mo>⋅</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">Attention(Q,K,V)=Softmax(\frac{Q\cdot K^{T}}{\sqrt{d_{k}}})\cdot V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">tt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4483em;vertical-align:-0.93em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-2.2528em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8572em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8172em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1828em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></span></p><blockquote><p>说明：++当注意力权重矩阵和V都是三维张量且第一维代表为batch条数时++，则做bmm运算.bmm是一种特殊的张量乘法运算。</p></blockquote><ul><li>bmm运算演示：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果参数1形状是(b×n×m),参数2形状是(b×m×p)，则输出为(b×n×p)</span></span><br><span class="line">&gt;&gt;<span class="built_in">input</span> torch.randn(<span class="number">10</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">&gt;&gt;mat2 torch.randn(<span class="number">10</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">&gt;&gt;res torch.bmm(<span class="built_in">input</span>,mat2)</span><br><span class="line">&gt;&gt;&gt;res.size()</span><br><span class="line">torch.Size([<span class="number">10</span>,<span class="number">3</span>,<span class="number">5</span>])</span><br></pre></td></tr></table></figure><h3 id="注意力机制的作用">注意力机制的作用</h3><ul><li>在解码器端的注意力机制：</li></ul><p>能够根据模型目标有效的聚焦编码器的输出结果，当其作为解码器的输入时提升效果.改善以往编码器输出是单一定长张量，无法存储过多信息的情况<br>在编码器端的注意力机制：主要解决表征问题，相当于特征提取过程，得到输入的注意力表示。一般使用自注意力(self-attention)。</p><ul><li>注意力机制实现步骤<ul><li>根据注意力计算规则对Q,K,V进行相应的计算。</li><li>根据第一步采用的计算方法，如果是拼接方法，则需要将Q与第二步的计算结果再<br>进行拼接，如果是转置点积一般是自注意力，Q与V相同，则不需要进行与Q的拼接。</li><li>最后为了使整个attention机制按照指定尺寸输出，使用线性层作用在第二步的结果上做一个线性变换，得到最终对Q的注意力表示。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BERT &amp; Transformer &amp; CRF</title>
      <link href="/2024/02/15/NER/BERT&amp;Transformer/"/>
      <url>/2024/02/15/NER/BERT&amp;Transformer/</url>
      
        <content type="html"><![CDATA[<h1>BERT</h1><h2 id="什么是BERT">什么是BERT</h2><ul><li>BERT是2018年10月由Google Al研究院提出的一种预训练模型</li><li>BERT的全称是Bidirectional Encoder Representation from Transformers</li><li>BERT在机器阅读理解顶级水平测试SQuAD1.1中表现出惊人的成绩：全部两个衡量指标上全面超越人类，并且在11种不同NLP测试中创出S0TA表现.包括将GLUE基准推高至80.4%<br>(绝对改进7.6%)，MultiNL准确度达到86.7%（绝对改进5.6%）.成为NLP发展史上的里程碑式的模型成就</li></ul><h2 id="BERT的架构">BERT的架构</h2><p>总体架构：BERT采用了Transformer Encoder block进行连接，因为是一个典型的双向编码模型。</p><ul><li>从上面的架构图中可以看到，宏观上BERT分三个主要模块：<ul><li>最底层黄色标记的Embedding模块</li><li>中间层蓝色标记的Transformer模块</li><li>最上层绿色标记的预微调模块</li></ul></li></ul><h3 id="Embedding模块">Embedding模块</h3><p>BERT中的该模块是由三种Embedding共同组成而成:</p><ul><li>Token Embeddings是词嵌入张量，第一个单词是CLS标志，可以用于之后的分类任务</li><li>Segment Embeddings是句子分段嵌入张量，是为了服务后续的两个句子为输入的预训练任务</li><li>Position Embeddings是位置编码张量，此处注意和传统的Transformer不同，不是三角函数计算的固定位置编码，而是通过学习得出来的</li><li>整个Embedding模块的输出张量就是这3个张量的直接加和结果</li></ul><h3 id="双向Transformer模块">双向Transformer模块</h3><p>BERT中只使用了经典Transformer架构中的Encoder部分，完全舍弃了Decoder部分，而两大预训练任务也集中体现在训练Transformer模块中。</p><h3 id="预微调模块">预微调模块</h3><p>经过中间层Transformer的处理后，BERT的最后一层根据任务的不同需求而做不同的调整<br>即可，比如对于sequence-levelf的分类任务，BERT直接取第一个[CLS]token的final hidden state,再加一层全连接层后进行softmax来预测最终的标签。</p><blockquote><p>对于不同的任务，微调都集中在预微调模块，几种重要的NLP微调任务架构图展示如下</p></blockquote><p>在面对特定任务时，只需要对预微调层进行微调，就可以利用Transformer强大的注意力机制来模拟很多下游任务，并得到SOTA的结果.（句子对关系判断，单文本主题分类，问答任务——句子理解(QA),单句贴标签(NER)。</p><p>若干可选的超参数建议如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Batch size:16,32</span><br><span class="line">Learning rate (Adam):5e-5,3e-5,2e-5</span><br><span class="line">Epochs:3,4</span><br></pre></td></tr></table></figure><h2 id="BERT的预训练任务">BERT的预训练任务</h2><p>BERT包含两个预训练任务</p><ul><li>任务一：Masked LM(带mask的语言模型训练)</li><li>任务二：Next Sentence Prediction(下一句话预测任务)</li></ul><h3 id="任务一：Masked-LM-带mask的语言模型训练">任务一：Masked LM(带mask的语言模型训练)</h3><blockquote><p>关于传统的语言模型训练，都是采用left-to-right,或者left-to-right+right-to-left结合的方式，但这种单向方式或者拼接的方式提取特征的能力有限.为此BET提出一个深度双向表达模型(deep bidirectional representation).即采用MASK任务来训练模型。</p></blockquote><ul><li>在原始训练文本中，随机的抽取15%的tokn作为参与MASK任务的对象。</li><li>在这些被选中的tokn中，数据生成器并不是把它们全部变成[MASK],而是有下列3种情<br>况。<ul><li>在80%的概率下，用MASK标记替换该token,比如my dog is hairy&gt;my dog is<br>[MASK]</li><li>在10%的概率下，用一个随机的单词替换token,比如my dog is hairy&gt;my dog is<br>apple。</li><li>在10%的概率下，保持该token不变，比如my dog is hairy-&gt;my dog is hairy。</li></ul></li><li>模型在训练的过程中，并不知道它将要预测哪些单词？哪些单词是原始的样子？哪些单词被遮掩成了[MASK]?哪些单词被替换成了其他单词？正是在这样一种高度不确定的情况下，反倒逼着模型快速学习该tokn的分布式上下文的语义，尽最大努力学习原始语言说话的样子.同时因为原始文本中只有15%的tokn参与了MASK操作，并不会破坏原语言的表达能力和语言规则。</li></ul><h3 id="任务二：Next-Sentence-Prediction-下一句话预测任务">任务二：Next Sentence Prediction(下一句话预测任务)</h3><blockquote><p>在NLP中有一类重要的问题比如QA(Quention-Answer),NLI(Natural Language Inference),需要模型能够很好的理解两个句子之间的关系，从而需要在模型的训练中引入对应的任务，在BERT中引入的就是Next Sentence Prediction任务.采用的方式是输入句子对(A,B),模型来预测句子B是不是句子A的真实的下一句话。</p></blockquote><ul><li>所有参与任务训练的语句都被选中作为句子A。<ul><li>其中50%的B是原始文本中真实跟随A的下一句话。（标记为IsNext,代表正样本）</li><li>其中50%的B是原始文本中随机抽取的一句话。（标记为NotNext,代表负样本）</li></ul></li><li>在任务二中，BERT模型可以在测试集上取得97%-98%的准确率。</li></ul><h1>Transformer</h1><h2 id="Encoder模块">Encoder模块</h2><h3 id="Encoder模块的结构和作用">Encoder模块的结构和作用</h3><ul><li>经典的Transformer结构中的Encoder模块包含6个Encoder Block</li><li>每个Encoder Block包含一个多头自注意力层，和一个前馈全连接层，</li></ul><h3 id="关于Encoder-Block">关于Encoder Block</h3><p>在Transformer架构中，6个一模一样的Encoder Block层层堆叠在一起，共同组成完整的Encoder,因此剖析一个Block就可以对整个Encoder的内部结构有清晰的认识。</p><h3 id="多头自注意力层-self-attention">多头自注意力层(self-attention)</h3><ul><li>self-attention的计算规则：</li></ul><blockquote><p>上述attention可以被描述为将quey和key-value键值对的一组集合映射到输出，输出被计算为values的加权和，其中分配给每个value的权重由quey与对应key的相似性函数计算得来。这种attention的形式被称为Scaled Dot-Product Attention,对应的数学公式形式如下：</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>Attention</mtext><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>softmax</mtext><mo stretchy="false">(</mo><mfrac><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac><mo stretchy="false">)</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">\text{Attention}(Q,K,V)=\text{softmax}(\frac{QK^T}{\sqrt{d_k}})V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">Attention</span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4483em;vertical-align:-0.93em;"></span><span class="mord text"><span class="mord">softmax</span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-2.2528em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8572em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8172em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1828em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>MultiHead</mtext><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi>C</mi><mi>o</mi><mi>n</mi><mi>c</mi><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mi>h</mi></msub><mo stretchy="false">)</mo><msup><mi>W</mi><mi>O</mi></msup></mrow><annotation encoding="application/x-tex">\text{MultiHead}(Q,K,V)= Concat (head_1,...,head_h)W^O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">MultiHead</span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1413em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>e</mi><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mrow><mo fence="true">(</mo><mi>Q</mi><msubsup><mi>W</mi><mi>i</mi><mi>Q</mi></msubsup><mo separator="true">,</mo><mi>K</mi><msubsup><mi>W</mi><mi>i</mi><mi>K</mi></msubsup><mo separator="true">,</mo><mi>V</mi><msubsup><mi>W</mi><mi>i</mi><mi>V</mi></msubsup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">where head_i = Attention \left(QW_{i}^{Q},KW_{i}^{K},VW_{i}^{V}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">h</span><span class="mord mathnormal">ere</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">tt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9592em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">Q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>W</mi><mi>i</mi><mi>Q</mi></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msub><mi>d</mi><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">l</mi></mrow></msub><mo>×</mo><msub><mi>d</mi><mi>k</mi></msub></mrow></msup><mo separator="true">,</mo><msubsup><mi>W</mi><mi>i</mi><mi>K</mi></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msub><mi>d</mi><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">l</mi></mrow></msub><mo>×</mo><msub><mi>d</mi><mi>k</mi></msub></mrow></msup><mo separator="true">,</mo><msubsup><mi>W</mi><mi>i</mi><mi>V</mi></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msub><mi>d</mi><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">l</mi></mrow></msub><mo>×</mo><msub><mi>d</mi><mi>v</mi></msub></mrow></msup><mo separator="true">,</mo><msup><mi>W</mi><mi>O</mi></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>h</mi><msub><mi>d</mi><mi>v</mi></msub><mo>×</mo><msub><mi>d</mi><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">l</mi></mrow></msub></mrow></msup></mrow><annotation encoding="application/x-tex">W_i^Q\in\mathbb{R}^{d_{\mathrm{model}}\times d_k},W_i^K\in\mathbb{R}^{d_{\mathrm{model}}\times d_k},W_i^V\in\mathbb{R}^{d_{\mathrm{model}}\times d_v},W^O\in\mathbb{R}^{hd_v\times d_{\mathrm{model}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2361em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9592em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">model</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">model</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0935em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">model</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8991em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">model</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>多头self-attention,层的作用：实验结果表明，Multi–head可以在更细致的层面上提取不同head的特征，总体计算量和单一head相同的情况下，提取特征的效果更佳。</p></blockquote><h3 id="前馈全连接层模块">前馈全连接层模块</h3><p>前馈全连接层模块，由两个线性变换组成，中间有一个Relu激活函数（max()），对应的数学公式形式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mi mathvariant="normal">F</mi><mi mathvariant="normal">F</mi><mi mathvariant="normal">N</mi></mrow><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>0</mn><mo separator="true">,</mo><mi>x</mi><msub><mi>W</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mo fence="true">)</mo></mrow><msub><mi>W</mi><mn>2</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\mathrm{FFN}(x)=\max\left(0,xW_1+b_1\right)W_2+b_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">FFN</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><ul><li>注意：原版论文中的前馈全连接层，输入和输出的维度均为d_model=512,层内的连接维度df仟=2048，均采用4倍的大小关系。</li></ul><blockquote><p>前馈全连接层的作用：单纯的多头注意力机制并不足以提取到理想的特征，因此增加全连接层来提升网络的能力。</p></blockquote><h2 id="剩下的视频看完了还在写……">剩下的视频看完了还在写……</h2><h1>CRF</h1><h2 id="CRF模型的输入和输出">CRF模型的输入和输出</h2><p>CRF(Conditional Random Fields),中文称作条件随机场，同HMM一样，它一般也以文本序列数据为输入，以该序列对应的隐含序列为输出。</p><h2 id="CRF模型的作用：">CRF模型的作用：</h2><p>同HMM一样，在NLP领域，CRF用来解决文本序列标注问题.如分词，词性标注，命名实体识别。</p><h2 id="CRF模型使用过程简述">CRF模型使用过程简述</h2><ul><li>首先，CRF模型表示为：lambda=CRF(w1,w2,wn),其中w1到wn是模型参数</li><li>接着，我们开始训练CRF模型，语料同样是事先准备好的一定数量的观测序列及其对应的隐含序列</li><li>与此同时我们还需要做人工特征工程，然后通过不断训练求得一组参数，使由观测序列到对应隐含序列的概率最大</li><li>训练后，我们就得到了具备预测能力的新模型：lambda=CRF(w1,w2,.,wn),其中的模型参数已经改变</li><li>之后给定输入序列(x1,x2,n),经过模型计算lambda(x1,x2,n)得到对应隐含序列的<br>条件概率分布</li><li>最后，还是使用维特比算法从隐含序列的条件概率分布中找出概率最大的一条序列路径就是我们需要的隐含序列：(y1,y2,yn)</li></ul><h2 id="HMM与CRF模型之间差异">HMM与CRF模型之间差异</h2><ul><li>HMM模型存在隐马假设，而CRF不存在，因此HMM的计算速度要比CRF模型快很多，适用于对预测性能要求较高的场合</li><li>同样因为隐马假设，当预测问题中隐含序列单元并不是只与上一个单元有关时，HMM的准确率会大大降低，而CRF不受这样限制，准确率明显高于HMM</li></ul><h2 id="HMM和CRF的发展现状">HMM和CRF的发展现状</h2><ul><li>HMM和CRF模型曾在多种序列任务中表现出色，伴随NLP工程师度过漫长的一段时期</li><li>但由于近年来深度学习发展迅速，经典序列模型，如HMM和CRE已经开始慢慢淡出人们的<br>视野</li><li>因此，我们这里也是对其做了简洁的总结知识，让大家对其有一定的基本认识</li></ul>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pytorch安装环境问题</title>
      <link href="/2024/02/07/NER/pytorch%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E9%97%AE%E9%A2%98/"/>
      <url>/2024/02/07/NER/pytorch%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1>自己安</h1><p>突然兴起想重装Anaconda和Pycharm,好家伙,整整两天才给全部整明白,最大的原因见文末，在此记录一下我踩的坑。</p><p>参考【PyTorch深度学习快速入门教程（绝对通俗易懂！）【小土堆】】 <a href="https://www.bilibili.com/video/BV1hE411t7RN/?share_source=copy_web&amp;vd_source=4bd852f834f2d9a6a8ce0609a36001d4">https://www.bilibili.com/video/BV1hE411t7RN/?share_source=copy_web&amp;vd_source=4bd852f834f2d9a6a8ce0609a36001d4</a></p><p>Anaconda（<code>Anaconda3-2023.09-0-Windows-x86 64.exe</code>）,pycharm，pytorch已下好且pytorch（本机没有满足要求的GPU，选的CPU）可正常激活，中文路径问题可参考CSDN通过配置环境变量解决，仅最后一步不对。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(pytorch) PS C:\Users\王越洋&gt; python</span><br><span class="line">Python 3.6.13 |Anaconda, Inc.| (default, Mar 16 2021, 11:37:27) [MSC v.1916 64 bit (AMD64)] on win32</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line">&gt;&gt;&gt; import torch</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>但配置时报错如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">D:\ruanjian\Pycharm\PyCharm 2023.3.2\plugins\python\helpers\pydev\_pydev_bundle\pydev_import_hook.py:21: UserWarning: mkl-service package failed to import, therefore Intel(R) MKL initialization ensuring its correct out-of-the box operation under condition when Gnu OpenMP had already been loaded by Python process is not assured. Please install mkl-service package, see http://github.com/IntelPython/mkl-service</span><br><span class="line">  module = self._system_import(name, *args, **kwargs)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;C:\Users\王越洋\.conda\envs\pytorch\lib\site-packages\numpy\core\__init__.py&quot;, line 22, in &lt;module&gt;</span><br><span class="line">    from . import multiarray</span><br><span class="line">  File &quot;D:\ruanjian\Pycharm\PyCharm 2023.3.2\plugins\python\helpers\pydev\_pydev_bundle\pydev_import_hook.py&quot;, line 21, in do_import</span><br><span class="line">    module = self._system_import(name, *args, **kwargs)</span><br><span class="line">  File &quot;C:\Users\王越洋\.conda\envs\pytorch\lib\site-packages\numpy\core\multiarray.py&quot;, line 12, in &lt;module&gt;</span><br><span class="line">    from . import overrides</span><br><span class="line">  File &quot;D:\ruanjian\Pycharm\PyCharm 2023.3.2\plugins\python\helpers\pydev\_pydev_bundle\pydev_import_hook.py&quot;, line 21, in do_import</span><br><span class="line">    module = self._system_import(name, *args, **kwargs)</span><br><span class="line">  File &quot;C:\Users\王越洋\.conda\envs\pytorch\lib\site-packages\numpy\core\overrides.py&quot;, line 7, in &lt;module&gt;</span><br><span class="line">    from numpy.core._multiarray_umath import (</span><br><span class="line">  File &quot;D:\ruanjian\Pycharm\PyCharm 2023.3.2\plugins\python\helpers\pydev\_pydev_bundle\pydev_import_hook.py&quot;, line 21, in do_import</span><br><span class="line">    module = self._system_import(name, *args, **kwargs)</span><br><span class="line">ImportError: DLL load failed: 找不到指定的模块。</span><br><span class="line">During handling of the above exception, another exception occurred:</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;C:\Users\王越洋\.conda\envs\pytorch\lib\code.py&quot;, line 91, in runcode</span><br><span class="line">    exec(code, self.locals)</span><br><span class="line">  File &quot;&lt;input&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">  File &quot;D:\ruanjian\Pycharm\PyCharm 2023.3.2\plugins\python\helpers\pydev\_pydev_bundle\pydev_import_hook.py&quot;, line 21, in do_import</span><br><span class="line">    module = self._system_import(name, *args, **kwargs)</span><br><span class="line">  File &quot;C:\Users\王越洋\.conda\envs\pytorch\lib\site-packages\torch\__init__.py&quot;, line 613, in &lt;module&gt;</span><br><span class="line">    _C._initExtension(manager_path())</span><br><span class="line">  File &quot;D:\ruanjian\Pycharm\PyCharm 2023.3.2\plugins\python\helpers\pydev\_pydev_bundle\pydev_import_hook.py&quot;, line 21, in do_import</span><br><span class="line">    module = self._system_import(name, *args, **kwargs)</span><br><span class="line">  File &quot;C:\Users\王越洋\.conda\envs\pytorch\lib\site-packages\torch\cuda\__init__.py&quot;, line 685, in &lt;module&gt;</span><br><span class="line">    from . import amp</span><br><span class="line">  File &quot;D:\ruanjian\Pycharm\PyCharm 2023.3.2\plugins\python\helpers\pydev\_pydev_bundle\pydev_import_hook.py&quot;, line 21, in do_import</span><br><span class="line">    module = self._system_import(name, *args, **kwargs)</span><br><span class="line">  File &quot;C:\Users\王越洋\.conda\envs\pytorch\lib\site-packages\torch\cuda\amp\__init__.py&quot;, line 1, in &lt;module&gt;</span><br><span class="line">    from .autocast_mode import autocast, custom_fwd, custom_bwd  # noqa: F401</span><br><span class="line">  File &quot;D:\ruanjian\Pycharm\PyCharm 2023.3.2\plugins\python\helpers\pydev\_pydev_bundle\pydev_import_hook.py&quot;, line 21, in do_import</span><br><span class="line">    module = self._system_import(name, *args, **kwargs)</span><br><span class="line">  File &quot;C:\Users\王越洋\.conda\envs\pytorch\lib\site-packages\torch\cuda\amp\autocast_mode.py&quot;, line 5, in &lt;module&gt;</span><br><span class="line">    import numpy as np</span><br><span class="line">  File &quot;D:\ruanjian\Pycharm\PyCharm 2023.3.2\plugins\python\helpers\pydev\_pydev_bundle\pydev_import_hook.py&quot;, line 21, in do_import</span><br><span class="line">    module = self._system_import(name, *args, **kwargs)</span><br><span class="line">  File &quot;C:\Users\王越洋\.conda\envs\pytorch\lib\site-packages\numpy\__init__.py&quot;, line 140, in &lt;module&gt;</span><br><span class="line">    from . import core</span><br><span class="line">  File &quot;D:\ruanjian\Pycharm\PyCharm 2023.3.2\plugins\python\helpers\pydev\_pydev_bundle\pydev_import_hook.py&quot;, line 21, in do_import</span><br><span class="line">    module = self._system_import(name, *args, **kwargs)</span><br><span class="line">  File &quot;C:\Users\王越洋\.conda\envs\pytorch\lib\site-packages\numpy\core\__init__.py&quot;, line 48, in &lt;module&gt;</span><br><span class="line">    raise ImportError(msg)</span><br><span class="line">ImportError: </span><br><span class="line">IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!</span><br><span class="line">Importing the numpy C-extensions failed. This error can happen for</span><br><span class="line">many reasons, often due to issues with your setup or how NumPy was</span><br><span class="line">installed.</span><br><span class="line">We have compiled some common reasons and troubleshooting tips at:</span><br><span class="line">    https://numpy.org/devdocs/user/troubleshooting-importerror.html</span><br><span class="line">Please note and check the following:</span><br><span class="line">  * The Python version is: Python3.6 from &quot;C:\Users\王越洋\.conda\envs\pytorch\python.exe&quot;</span><br><span class="line">  * The NumPy version is: &quot;1.19.2&quot;</span><br><span class="line">and make sure that they are the versions you expect.</span><br><span class="line">Please carefully study the documentation linked above for further help.</span><br><span class="line">Original error was: DLL load failed: 找不到指定的模块。</span><br></pre></td></tr></table></figure><p><s>初步怀疑问题在于</s>（是小白没错了，后面人家说和这个没关系，看到这个报错的uu不要惊慌）</p><p>但当时我不知道啊，遂运行提示命令，无果，约半小时后提示某文件没有admission，CSDN有文指出该问题可以重新更新conda，下载一小时没下完。两个都运行了两次左右，各种重装Anaconda，结果人家输出我没有admission，如果你和我一样装Anaconda时选的<code>给所有人装</code>的选项，记得在权限里设置<code>所有人可修改</code>即可解决。当然，不设置也可以。</p><p>最后，这个错无伤大雅，重点不在这，不要运行<code>conda update -n base -c defaults conda</code> 就是了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(pytorch) PS C:\Users\王越洋&gt; conda install pytorch torchvision torchaudio cpuonly -c pytorch</span><br><span class="line">Collecting package metadata (current_repodata.json): done</span><br><span class="line">Solving environment: done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==&gt; WARNING: A newer version of conda exists. &lt;==</span><br><span class="line">  current version: 23.7.4</span><br><span class="line">  latest version: 24.1.0</span><br><span class="line"></span><br><span class="line">Please update conda by running</span><br><span class="line"></span><br><span class="line">    $ conda update -n base -c defaults conda</span><br><span class="line"></span><br><span class="line">Or to minimize the number of packages updated during conda update use</span><br><span class="line"></span><br><span class="line">     conda install conda=24.1.0</span><br><span class="line"></span><br><span class="line"># All requested packages already installed.</span><br></pre></td></tr></table></figure><p>这个报错的意思是你有库安了，但是没安全。</p><h1>深夜寻求某宝</h1><p>凌晨00:23，解决无果，遂面向某宝解决（cost20￥），次日早，某阿里员工给我一波各种操作，两小时后告诉我问题是numpy库没安全，然后各种调试，找版本，然后安，解决！</p><p>下午，感觉自己又行了，于是自己重新建了一个虚拟环境，把人家建的删了，报错依旧，重装numpy无果，<s>发疯发疯</s>，感觉这个人解决问题不能一劳永逸（其实是我没学会。。。人家还是很厉害滴）~</p><h1>晚上寻求拼夕夕🌟</h1><p>已是晚10：20,继第10次左右重新安装调试后，随便捞了个能安的人（cost15￥），看得出来他也很焦灼，甚至还出现了新错误:</p><p>(1)Environment创建失败（这个和库没关系，是说你的源或者网络问题，建议换源即可）</p><p>(2)系统找不到指定路径。这个就比较棘手了，人家配了环境变量，各种调试，无果。通过装<code>Anaconda3-2020.11 Windows-x86 64.exe</code>，再来一遍pip配置，成功！！！</p><p>通过pip安装就不会像通过conda安装报错，成功解决！！！</p><p>小问题：conda安装的虚拟环境位置在<code>C:/User/XXX/.conda/env/</code>下的,但这种方式安装的虚拟环境位置在Anaconda3的安装目录下，其他运行均正常，虽然还是会报版本不一致的错，但无碍。本次配置终于完成！！</p><h1>结果</h1><p>综上，出现此类错误的人建议装低版本一点的Anaconda(卸的时候记得用自带的工具卸，写完检查环境变量删干净没)，安装时记得把PATH选项勾上（要不然要自己配，容易配错），最新版的Anaconda应该是有小毛病（库不全），[谨慎安装！！！]{.red}</p><p>祝看到这里的各位PyTorch学习顺利！🌟</p>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文本预处理</title>
      <link href="/2024/02/07/NER/%E6%96%87%E6%9C%AC%E9%A2%84%E5%A4%84%E7%90%86/"/>
      <url>/2024/02/07/NER/%E6%96%87%E6%9C%AC%E9%A2%84%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1>文本处理的基本方法</h1><h2 id="分词">分词</h2><h3 id="什么是分词？">什么是分词？</h3><blockquote><p>分词就是将连续的字序列按照一定的规范重新组合成词序列的过程。我们知道，在英文的<br>行文中，单词之间是以空格作为自然分界符的，而中文只是字、句和段能通过明显的分界<br>符来简单划界，唯独词没有一个形式上的分界符，分词过程就是找到这样分界符的过程，</p></blockquote><ul><li>举例：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">女干事每月经过下属科室都</span><br><span class="line">==&gt;</span><br><span class="line">[<span class="string">&#x27;女干事&#x27;</span>，<span class="string">&#x27;每月&#x27;</span>，<span class="string">&#x27;经过&#x27;</span>，<span class="string">&#x27;下属&#x27;</span>，<span class="string">&#x27;科室&#x27;</span>，<span class="string">&#x27;都&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="分词的作用">分词的作用</h3><ul><li>词作为语言语义理解的最小单元，是人类理解文本语言的基础.因此也是AI解决NLP领域高阶任务，如自动问答，机器翻译，文本生成的重要基础环节。</li></ul><h3 id="流行中文分词工具jieba">流行中文分词工具jieba</h3><blockquote><p>&quot;结巴&quot;中文分词，做最好的Python中文分词组件。</p></blockquote><ul><li><p>jiebal的特性：</p><ul><li>支持多种分词模式</li><li>精确模式</li><li>全模式</li><li>搜索引擎摸式</li><li>支持中文繁体分词</li><li>支持用户自定义词典</li></ul></li><li><p>jieba使用</p></li></ul><blockquote><p>精确模式分词：试图将句子最精确地切开，适合文本分析</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> jieba</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>content = <span class="string">&quot;女干事每月经过下属科室都&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>jieba.cut(content,cut_all=<span class="literal">False</span>)(默认为<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成器对象</span></span><br><span class="line">&lt;generator <span class="built_in">object</span> Tokenizer.cut at <span class="number">0x000001ED13237350</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>jieba.lcut(content,cut_all=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#列表内容</span></span><br><span class="line">Building prefix <span class="built_in">dict</span> <span class="keyword">from</span> the default dictionary ...</span><br><span class="line">Dumping model to file cache C:\WINDOWS\TEMP\jieba.cache</span><br><span class="line">Loading model cost <span class="number">0.607</span> seconds.</span><br><span class="line">Prefix <span class="built_in">dict</span> has been built successfully.</span><br><span class="line">Out[<span class="number">9</span>]: [<span class="string">&#x27;女干事&#x27;</span>, <span class="string">&#x27;每月&#x27;</span>, <span class="string">&#x27;经过&#x27;</span>, <span class="string">&#x27;下属&#x27;</span>, <span class="string">&#x27;科室&#x27;</span>, <span class="string">&#x27;都&#x27;</span>]</span><br></pre></td></tr></table></figure><blockquote><p>全模式分词：把句子中所有的可以成词的词语都扫描出来，速度非常快，但是不能消除歧义。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>content = <span class="string">&quot;女干事每月经过下属科室都&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>jieba.cut(content,cut_all=<span class="literal">True</span>)</span><br><span class="line"> &lt;generator <span class="built_in">object</span> Tokenizer.cut at <span class="number">0x000001ED13237D60</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>jieba.lcut(content,cut_all=<span class="literal">True</span>)</span><br><span class="line"> [<span class="string">&#x27;女干事&#x27;</span>, <span class="string">&#x27;干事&#x27;</span>, <span class="string">&#x27;每月&#x27;</span>, <span class="string">&#x27;月经&#x27;</span>, <span class="string">&#x27;经过&#x27;</span>, <span class="string">&#x27;下属&#x27;</span>, <span class="string">&#x27;科室&#x27;</span>, <span class="string">&#x27;都&#x27;</span>]</span><br></pre></td></tr></table></figure><blockquote><p>搜索引擎模式分词：在精确模式的基础上，对长词再次切分，提高召回率，适合用于搜索引擎分词。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>content = <span class="string">&quot;女干事每月经过下属科室都&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>jieba.cut_for_search(content)</span><br><span class="line"> &lt;generator <span class="built_in">object</span> Tokenizer.cut_for_search at <span class="number">0x000001ED14A014A0</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>jieba.lcut_for_search(content)</span><br><span class="line">[<span class="string">&#x27;干事&#x27;</span>, <span class="string">&#x27;女干事&#x27;</span>, <span class="string">&#x27;每月&#x27;</span>, <span class="string">&#x27;经过&#x27;</span>, <span class="string">&#x27;下属&#x27;</span>, <span class="string">&#x27;科室&#x27;</span>, <span class="string">&#x27;都&#x27;</span>]</span><br></pre></td></tr></table></figure><blockquote><p>中文繁体分词：针对中国香港，台湾地区的繁体文本进行分词</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>content = <span class="string">&quot;烦惱即是菩提，我暂且不提&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>jieba.lcut_for_search(content)</span><br><span class="line"> [<span class="string">&#x27;烦惱&#x27;</span>, <span class="string">&#x27;即&#x27;</span>, <span class="string">&#x27;是&#x27;</span>, <span class="string">&#x27;菩提&#x27;</span>, <span class="string">&#x27;，&#x27;</span>, <span class="string">&#x27;我&#x27;</span>, <span class="string">&#x27;暂且&#x27;</span>, <span class="string">&#x27;不提&#x27;</span>]</span><br></pre></td></tr></table></figure><blockquote><p>使用用户自定义词典</p></blockquote><ul><li>添加自定义词典后，jieba能够准确识别词典中出现的词汇，提升整体的识别准确率，</li><li>词典格式：每一行分三部分：词语、词频（可省略）、词性（可省略），用空格隔开<br>顺序不可颠倒</li><li>词典样式如下，具体词性含义请参照附录：jieba词性对照表，将该词典存userdict.txt,方便之后加载使用。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">云计算5n</span><br><span class="line">李小福2nr</span><br><span class="line">easy_install <span class="number">3</span> eng</span><br><span class="line">好用<span class="number">300</span></span><br><span class="line">韩玉赏鉴3nZ</span><br><span class="line">八一双鹿3nz</span><br></pre></td></tr></table></figure><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="keyword">import</span> jieba</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>jieba<span class="number">.1</span>cut(<span class="string">&quot;八一双鹿更名为八一南昌篮球队！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#没有使用用户自定义词典前的结果：</span></span><br><span class="line">&gt;&gt;&gt;[<span class="string">&#x27;八一双鹿&#x27;</span>，<span class="string">&#x27;更名&#x27;</span>，<span class="string">&#x27;为&#x27;</span>，<span class="string">&#x27;八一&#x27;</span>，<span class="string">&#x27;南昌&#x27;</span>，<span class="string">&#x27;篮球队&#x27;</span>，<span class="string">&#x27;!&#x27;</span>]</span><br><span class="line"></span><br><span class="line">&gt;&gt;jieba.load_userdict(<span class="string">&quot;./userdict.txt&quot;</span>)</span><br><span class="line"><span class="comment">#使用了用户自定义词典后的结果：</span></span><br><span class="line">[<span class="string">&#x27;八一双鹿&#x27;</span>，<span class="string">&#x27;更名&#x27;</span>，<span class="string">&#x27;为&#x27;</span>,<span class="string">&#x27;八一&#x27;</span>,<span class="string">&#x27;南昌&#x27;</span>，<span class="string">&#x27;篮球队&#x27;</span>，<span class="string">&#x27;!&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="命名实体识别">命名实体识别</h2><p>顾名思义，命名实体识别(Named Entity Recognition,简称NER)就是识别出一段文本中可能存在的命名实体。</p><ul><li>命名实体识别的作用：</li></ul><p>同词汇一样，命名实体也是人类理解文本的基础单元，因此也是A解决NLP领域高阶任务的重要基础环节</p><h2 id="词性标注">词性标注</h2><blockquote><p>词性：语言中对词的一种分类方法，以语法特征为主要依据、兼顾词汇意义对词进行划分的结果，常见的词性有143如：名词，动词，形容词等</p></blockquote><p>顾名思义，词性标注(Part-Of-Speech tagging,简称POS)就是标注出一段文本中每个词汇的词性。</p><ul><li>词性标注的作用</li></ul><p>词性标注以分词为基础，是对文本语言的另一个角度的理解，因此也常常成为A解决NLP领域高阶任务的重要基础环节。</p><ul><li>使用jieba进行中文词性标注</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> jieba.posseg <span class="keyword">as</span> pseg</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pseg.lcut(<span class="string">&quot;我爱北京天安门&quot;</span>)</span><br><span class="line">[pair(<span class="string">&#x27;我&#x27;</span>, <span class="string">&#x27;r&#x27;</span>), pair(<span class="string">&#x27;爱&#x27;</span>, <span class="string">&#x27;v&#x27;</span>), pair(<span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;ns&#x27;</span>), pair(<span class="string">&#x27;天安门&#x27;</span>, <span class="string">&#x27;ns&#x27;</span>)]</span><br><span class="line"></span><br><span class="line">rr:人称代词</span><br><span class="line">v:动词</span><br><span class="line">n:名词</span><br><span class="line">vn:动名词</span><br></pre></td></tr></table></figure><h1>文本张量表示方法</h1><ul><li>什么是文本张量表示</li></ul><p>将一段文本使用张量进行表示，其中一般将词汇为表示成向量，称作词向量，再由各个词向量按顺序组成矩阵形成文本表示。</p><p>举个栗子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&quot;人生&quot;</span>，<span class="string">&quot;该&quot;</span>，<span class="string">&quot;如何&quot;</span>，<span class="string">&quot;起头&quot;</span>]</span><br><span class="line"></span><br><span class="line">==&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#每个词对应矩阵中的一个向量</span></span><br><span class="line">[[<span class="number">1.32</span>,<span class="number">4</span>,<span class="number">32</span>,<span class="number">6</span>,<span class="number">32</span>,<span class="number">5.2</span>],</span><br><span class="line">[<span class="number">3.1</span>,<span class="number">5.43</span>,<span class="number">0.34</span>,<span class="number">3.2</span>],</span><br><span class="line">[<span class="number">3.21</span>,<span class="number">5.32</span>,<span class="number">2</span>,<span class="number">4.32</span>],</span><br><span class="line">[<span class="number">2.54</span>,<span class="number">7.32</span>,<span class="number">5.12</span>,<span class="number">9.54</span>]]</span><br></pre></td></tr></table></figure><ul><li>文本张量表示的作用</li></ul><p>将文本表示成张量（矩阵）形式，能够使语言文本可以作为计算机处理程序的输入，进行接下来一系列的解析工作。</p><blockquote><ul><li>文本张量表示的方法：<ul><li>one-hot编码</li><li>Word2vec</li><li>Word Embedding</li></ul></li></ul></blockquote><h2 id="one-hot-独热编码">one-hot(独热编码)</h2><ul><li>什么是one-hot(独热编码)词向量表示</li></ul><p>又称独热编码，将每个词表示成具有个元素的向量，这个词向量中只有一个元素是1，其他元素都是0，不同词汇元素为0的位置不同，其中的大小是整个语料中不同词汇的总数。</p><p>举个栗子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&quot;改变&quot;</span>，<span class="string">&quot;要&quot;</span>，<span class="string">&quot;如何&quot;</span>，<span class="string">&quot;起手&quot;</span>]</span><br><span class="line"></span><br><span class="line">==&gt;</span><br><span class="line"></span><br><span class="line">[[<span class="number">1</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">6</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">6</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">6</span>],</span><br><span class="line">[<span class="number">6</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>]]</span><br></pre></td></tr></table></figure><ul><li>实现</li></ul><ol><li>进行one-hot(独热编码)</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入用于对象保存与加载的job11b</span></span><br><span class="line"><span class="keyword">from</span> sklearn.externals <span class="keyword">import</span> joblib</span><br><span class="line"><span class="comment">#导入keras中的词汇映射器Tokenizer</span></span><br><span class="line"><span class="keyword">from</span> keras.preprocessing.text <span class="keyword">import</span> Tokenizer</span><br><span class="line"><span class="comment">#假定vocab为语料集所有不同词汇集合</span></span><br><span class="line">vocab = &#123;<span class="string">&quot;周杰伦&quot;</span>,<span class="string">&quot;陈奕迅&quot;</span>,<span class="string">&quot;王力宏&quot;</span>,<span class="string">&quot;李宗盛&quot;</span>,<span class="string">&quot;吴亦凡&quot;</span>,<span class="string">&quot;鹿晗&quot;</span>&#125;</span><br><span class="line"><span class="comment">#实例化一个词汇映射器对象</span></span><br><span class="line">t = Tokenizer(num_words=<span class="literal">None</span>,char_level=<span class="literal">False</span>)</span><br><span class="line"><span class="comment">#使用映射器拟合现有文本数据</span></span><br><span class="line">t.fit_on_texts(vocab)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> token <span class="keyword">in</span> vocab:</span><br><span class="line">    zero_list = [<span class="number">0</span>]*<span class="built_in">len</span>(vocab)</span><br><span class="line">    <span class="comment">#使用映射器转化现有文本数据，**每个词汇对应从1开始的自然数</span></span><br><span class="line">    <span class="comment">#返回样式如：[[2]]，取出其中的数字需要使用[0][0]</span></span><br><span class="line">    token_index = t.texts_to_sequences([token])[<span class="number">0</span>][<span class="number">0</span>] - <span class="number">1</span></span><br><span class="line">    zero_list[token_index] = <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(token,<span class="string">&quot;的one-hot编码为：&quot;</span>,zero_list)</span><br><span class="line"></span><br><span class="line">李宗盛 的one-hot编码为： [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">王力宏 的one-hot编码为： [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">鹿晗 的one-hot编码为： [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">吴亦凡 的one-hot编码为： [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">陈奕迅 的one-hot编码为： [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">周杰伦 的one-hot编码为： [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用jobl1b工具保存映射器，以便之后使用</span></span><br><span class="line">tokenizer_path <span class="string">&quot;./Tokenizer&quot;</span></span><br><span class="line">joblib.dump(t,tokenizer_path)</span><br></pre></td></tr></table></figure><blockquote><p>注意 ！！！ 务必用conda安装tensorflow,会自动匹配对应的版本，pip会有不兼容问题。<br>cpu的直接<code>conda install tensorflow</code>即可，不要指定版本，会找不到包。然后根据对应的报错进行<code>conda install chardet</code>,大功告成！</p></blockquote><ol start="2"><li>使用</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入用于对象保存与加载的job11b</span></span><br><span class="line"><span class="keyword">from</span> sklearn.externals <span class="keyword">import</span> joblib</span><br><span class="line"><span class="comment">#加载之前保存的Tokenizer,实例化一个t对象</span></span><br><span class="line">t = joblib.load(tokenizer_path)</span><br><span class="line"></span><br><span class="line"><span class="comment">#编码token为&quot;李宗盛&quot;</span></span><br><span class="line">token=<span class="string">&quot;李宗盛&quot;</span></span><br><span class="line"><span class="comment">#使用t获得token-index</span></span><br><span class="line">token_index = t.texts_to_sequences([token])[<span class="number">0</span>][<span class="number">0</span>] - <span class="number">1</span></span><br><span class="line"><span class="comment">#初始化一个zero-11st</span></span><br><span class="line">zero_list = [<span class="number">0</span>]*<span class="built_in">len</span>(vocab)</span><br><span class="line"><span class="comment">#令zero-L1st的对应索引为1</span></span><br><span class="line">zero_list[token_index] = <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(token,<span class="string">&quot;的one-hot编码为：&quot;</span>，zero_list)</span><br></pre></td></tr></table></figure><ol start="3"><li>输出效果</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">李宗盛的one-hot编码为：[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">6</span>]</span><br></pre></td></tr></table></figure><ol start="4"><li>one-hot编码的优劣势：</li></ol><p>优势：摄作简单，容易理解。</p><p>劣势：完全割裂了词与词之间的联系，而且在大语料集下，每个向量的长度过大，占据大量内存。</p><blockquote><p>说明</p></blockquote><p>正因为one-hot编码明显的劣势，这种编码方式被应用的地方越来越少，取而代之的是<br>接下来我们要学习的稠密向量的表示方法word2vec和word embedding。</p><h2 id="Word2vec">Word2vec</h2><p>是一种流行的将词汇表示成向量的无监督训练方法，该过程将构建神经网络模型，将网络参<br>数作为词汇的向量表示，它包含CBOW和skipgram两种训练模式。</p><h3 id="CBOW-Continuous-bag-of-words-模式">CBOW(Continuous bag of words)模式</h3><p>给定一段用于训练的文本语料，再选定某段长度（窗口）作为研究对象，使用上下文词汇预测目标词汇。</p><h4 id="Word2vec过程">Word2vec过程</h4><p>假设我们给定的训练语料只有一句话：<code>Hope can set you free</code>(愿你自由成长)，窗口大小为<br>3,因此模型的第一个训练样本来自<code>Hope can set</code>,因为是CBOW模式，所以将使用<code>Hope</code>和<br><code>set</code>作为输入，<code>can</code>作为输出，在模型训练时，<code>Hope</code>,<code>can</code>,<code>set</code>等词汇都使用它们的one-hot编码。如图所示：每个one-hot编码的单词与各自的变换矩阵(即参数矩阵3x5,这里的3是指最后得到的词向量维度)相乘之后再相加，得到上下文表示矩阵(3x1)。</p><p>接着，将上下文表示矩阵与变换矩阵（参数矩阵5x3,所有的变换矩阵共享参数）相乘，得到5x1的结果矩阵，它将与我们真正的目标矩阵即can的one-hot编码矩阵(5x1)进行损失的计算，然后更新网络参数完成一次模型迭代。</p><p>最后窗口按序向后移动，重新更新参数，直到所有语料被遍历完成，得到最终的变换矩阵<br>(3x5),这个变换矩阵与每个词汇的one-hot编码(5x1)相乘，得到的3x1的矩阵就是该词汇的Word2Vec张量表示。</p><h3 id="skipgram模式">skipgram模式</h3><p>给定一段用于训练的文本语料，再选定某段长度（窗口）作为研究对象，使用目标词汇预测上下文词汇。</p><p>可设窗口大小为9，使用目标词汇对前后4个词汇进行预测。</p><h4 id="Word2vec过程-2">Word2vec过程</h4><p>假设我们给定的训练语料只有一句话：<code>Hope can set you free</code>(愿你自由成长)，窗口大小为3,因此模型的第一个训练样本来自Hope can set,因为是skipgram模式，所以将使用<code>can</code>作为输入，<code>Hope</code>和<code>set</code>作为输出，在模型训练时，<code>Hope</code>,<code>can</code>,<code>set</code>等词汇都使用它们的one-hot编码。如图所示：将<code>can</code>的one-hot编码与变换矩阵(即参数矩阵3x5,这里的3是指最后得到的词向量维度)相乘，得到目标词汇表示矩阵(3x1)。</p><p>接着，将目标词汇表示矩阵与多个变换矩阵(参数矩阵5x3)相乘，得到多个5x1的结果矩阵，它将与我们Hope和set对应的one-hot编码矩阵(5x1)进行损失的计算，然后更新网络参数完成一次模型迭代。</p><p>最后窗口按序向后移动，重新更新参数，直到所有语料被追历完成，得到最终的变换矩阵即参数矩阵(3x5),这个变换矩阵与每个词汇的one-hot编码(5x1)相乘，得到的3x1的矩阵就是该词汇的word2vec张量表示。</p><h3 id="使用fasttext工具实现word2vec的训练和使用：">使用fasttext工具实现word2vec的训练和使用：</h3><p>第一步：获取训练数据</p><p>第二步：训练词向量</p><p>第三步：模型超参数设定</p><p>第四步：模型效果检验</p><p>第五步：模型的保存与重加载</p><p>实现过程有待补充</p><h2 id="word-embedding-词嵌入">word embedding(词嵌入)</h2><blockquote><p>通过一定的方式将词汇映射到指定维度（一般是更高维度）的空间.</p></blockquote><ul><li>广义的word embedding包括所有密集词汇向量的表示方法，如之前学习的word2vec,即可认为是word embedding的一种。</li><li>狭义的word embedding是指在神经网络中加入的embedding层，对整个网络进行训练的同时产生的embedding矩阵(embedding层的参数)，这个embedding矩阵就是训练过程中所有输入词汇的向量表示组成的矩阵。</li></ul><h1>文本数据分析</h1><h2 id="作用">作用</h2><p>文本数据分析能够有效帮助我们理解数据语料，快速检查递语料可能存在的问题，并指导之后模型训练过程中一些超参数的选择</p><ul><li>常用的几种文本数据分析方法<ul><li>标签数量分布</li><li>句子长度分布</li><li>词频统计与关键词词云</li></ul></li></ul><h1>文本特征处理</h1><h2 id="作用-2">作用</h2><p>文本特征处理包括为语料添加具有普适性的文本特征，如：n-gram特征，以及对加入特征之后的文本语料进行必要的处理，如：长度规范.这些特征处理工作能够有效的将重要的文本特征加入模型训练中，增强模型评估指标。</p><ul><li>常见的文本特征处理方法<ul><li>添加n-gram特征</li><li>文本长度规范</li></ul></li></ul><h3 id="n-gram特征">n-gram特征</h3><blockquote><p>给定一段文本序列，其中n个词或字的相邻共现特征即n-gram特征，常用的n-gram特征是bigram和tri-gram特征，分别对应n为2和3。</p></blockquote><h3 id="文本长度规范及其作用（padding函数）">文本长度规范及其作用（padding函数）</h3><p>一般模型的输入需要等尺寸大小的矩阵，因此在进入模型前需要对每条文本数值映射后的<br>长度进行规范，此时将根据句子长度分布分析出覆盖绝大多数文本的合理长度，对超长文本进行截断，对不足文本进行补齐（一般使用数字0），这个过程就是仪本长度规范。</p><h1>文本数据增强</h1><blockquote><p>常见的文本数据增强方法:回译数据增强法</p></blockquote><h2 id="回译数据增强法">回译数据增强法</h2><p>回译数据增强目前是文本数据增强方面效果较好的增强方法，一般基于goog翻译接口，将文本数据翻译成另外一种语言（一般选择小语种），之后再翻译回原语言，即可认为得到与与原语料同标签的新语料，新语料加入到原数据集中即可认为是对原数据集数据增强。</p><blockquote><p>优势：操作简便，获得新语料质量高。</p></blockquote><blockquote><ul><li>问题<ul><li>在短文本回译过程中，新语料与原语料可能存在很高的重复率，并不能有效增大样本的特征空间。</li></ul></li></ul></blockquote><blockquote><ul><li>解决办法<ul><li>进行连续的多语言翻译，如：中文-&gt;韩文一&gt;日语-&gt;英文-&gt;中文，根据经验，最多只采用3次连续翻译，更多的翻译次数将产生效率低下，语义失真等问题。</li></ul></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计语言模型（n元语言模型）</title>
      <link href="/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/04%20%E7%BB%9F%E8%AE%A1%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%EF%BC%88n%E5%85%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%EF%BC%89/"/>
      <url>/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/04%20%E7%BB%9F%E8%AE%A1%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%EF%BC%88n%E5%85%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>预训练</h1><p>预先训练</p><p>我们有两个相似的任务 A 和 B，任务 A 已经完成了得到了一个模型 A</p><p>任务 B（数据量小）</p><p>用到了一个特性：CNN 浅层参数通用</p><p>任务 B 就可以使用模型 A 的浅层参数，后面的参数通过任务 B 训练–》1. 冻结（浅层参数不变）2. 微调（变）</p><p>任务 B（大数据）可以训练出模型 B（我还可以使用模型 A 的浅层参数，节省训练时间，节省成本）</p><h1>统计语言模型</h1><h2 id="语言模型">语言模型</h2><p>语言（人说的话）+模型（表示某个东西，完成某个任务）</p><ol><li>P(“判断这个词的词性”)，P(“判断这个词的磁性”)</li><li>“判断这个词的<code>______</code>”</li></ol><h2 id="统计语言模型">统计语言模型</h2><p>用统计的方法去解决上述两个问题</p><p>“判断这个词的词性” = “判断”，“这个”，“词”，“的”，“词性”</p><p>这句话是序列（有顺序的）</p><p>用了一个条件概率的链式法则（概率论）</p><p>通过这个法则，我们可以求出每一个词出现的概率，然后连乘，就是这句话出现的概率</p><p>解决第二个问题：</p><p>“判断这个词的<code>__</code>”</p><p>P(w_next | “判断”，“这个”，“词”，“的”)  （1）</p><p>词库（词典）V–》新华字典，高处一个集合，把所有词装到集合 V 里</p><p>把集合里的每一个词，都进行上一步（1）的计算</p><p>词库 V = { “词性”， “火星”}</p><p>P(词性| “判断”，“这个”，“词”，“的”)</p><p>P(火星| “判断”，“这个”，“词”，“的”)</p><p>P(词性| “判断”，“这个”，“词”，“的”，……， “……”)</p><h2 id="n-元统计语言模型">n 元统计语言模型</h2><p>P(词性|“这个”，“词”，“的”)</p><p>P(火星| “这个”，“词”，“的”)</p><p>P(词性|“词”，“的”)</p><p>P(火星|“词”，“的”)</p><p>P(词性|“的”)</p><p>P(火星|“的”)</p><p>把 n 个词，取 2 个词（2 元），取 3 个词（3 元）</p><h1>如何去计算</h1><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">“词性是动词”</span><br><span class="line">“判断单词的词性”</span><br><span class="line">“磁性很强的磁铁”</span><br><span class="line">“北京的词性是名词”</span><br></pre></td></tr></table></figure><p>𝑃(词性|的) = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>t</mi><mo stretchy="false">(</mo><mtext>词性，的</mtext><mo stretchy="false">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mtext>的</mtext><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{cout(词性，的)}{count(的)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">的</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">词性，的</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>2</mn><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{2}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h1>平滑策略</h1><p>P(策略|平滑) = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>0</mn><mn>0</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{0}{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h1>统计语言模型</h1><p>语言模型：计算一句话的概率，计算下一个词可能是什么</p><p>统计语言模型：统计的方法去解决语言模型的问题（条件概率）</p><p>a 元语言模型：只取 a 个词（马尔科夫链）</p><p>平滑策略：</p><h1>下节课：神经网络语言模型</h1><p>统计语言模型：神经网络的方法去解决语言模型的问题</p>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是预训练（Transformer 前奏）</title>
      <link href="/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/03%20%E4%BB%80%E4%B9%88%E6%98%AF%E9%A2%84%E8%AE%AD%E7%BB%83%EF%BC%88Transformer%20%E5%89%8D%E5%A5%8F%EF%BC%89/"/>
      <url>/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/03%20%E4%BB%80%E4%B9%88%E6%98%AF%E9%A2%84%E8%AE%AD%E7%BB%83%EF%BC%88Transformer%20%E5%89%8D%E5%A5%8F%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>预训练有什么用</h1><p>机器学习：偏数学（《统计学习方法》-李航）</p><p>深度学习（人工智能）的项目：大数据支持（主流）</p><p>我们很多项目没有大数据支持（小数据）</p><p>猫狗分类任务：100 张猫和狗的图片 --》给你一张图片，分出是猫还是狗（无法解决的一个问题，精度很低）</p><p>100000 张鹅和鸭的图片（已知，有人做过的，通过这10w 张图片做了一个模型 A）</p><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E5%9B%BE%E5%83%8F%E9%A2%84%E8%AE%AD%E7%BB%83%E7%A4%BA%E4%BE%8B.jpg" alt="img"></p><p>有人发现，浅层通用的（横竖撇捺）</p><p>我通过10w个鹅和鸭训练了一个模型 A，100 层的 CNN</p><p>任务 B：100 张猫和狗的图片，分类 --》 训练处 100层的 CNN，不可能实现的</p><p>尝试使用 A 的前 50 层，使用 100 层去完成任务 B</p><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E9%A2%84%E8%AE%AD%E7%BB%83%E7%9A%84%E5%BA%94%E7%94%A8.jpg" alt="img"></p><ol><li>冻结：浅层参数不变</li><li>微调：浅层参数会跟着任务 B 训练而改变</li></ol><h1>预训练是什么</h1><p>通过一个已经训练好的模型 A，去完成一个小数据量的任务 B（使用了模型 A 的浅层参数）</p><p>任务 A 和任务 B 极其相似</p><h1>预训练怎么用</h1><p>fairseq 、transformers 库</p><h1>总结</h1><p>一个任务 A，一个任务 B，两者极其相似，任务 A 已经训练处一个模型 A，使用模型 A 的浅层参数去训练任务 B，得到模型 B’。</p>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>预训练语言模型的前世今生</title>
      <link href="/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/00%20%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E5%85%A8%E6%96%87%2024854%20%E4%B8%AA%E8%AF%8D%EF%BC%89/"/>
      <url>/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/00%20%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E5%85%A8%E6%96%87%2024854%20%E4%B8%AA%E8%AF%8D%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 style='text-align:center;'>预训练语言模型的前世今生 - 从Word Embedding到BERT</h1><p>本篇文章共 25027 个词，一个字一个字手码的不容易，转载请标明出处：<br><a href='https://www.cnblogs.com/nickchen121/p/15105048.html'>预训练语言模型的前世今生 - 从Word Embedding到BERT - 二十三岁的有德</a></p><p>[TOC]</p><p>Bert 最近很火，应该是最近最火爆的 AI 进展，网上的评价很高，从模型创新角度看一般，创新不算大。但是架不住效果太好了，基本刷新了很多 NLP 的任务的最好性能，有些任务还被刷爆了，这个才是关键。另外一点是 Bert 具备广泛的通用性，就是说绝大部分 NLP 任务都可以采用类似的两阶段模式直接去提升效果，这个第二关键。客观的说，把 Bert 当做最近两年 NLP 重大进展的集大成者更符合事实。</p><p>本文的主题是预训练语言模型的前世今生，会大致说下 NLP 中的预训练技术是一步一步如何发展到 Bert 模型的，从中可以很自然地看到 Bert 的思路是如何逐渐形成的，Bert 的历史沿革是什么，继承了什么，创新了什么，为什么效果那么好，主要原因是什么，以及为何说模型创新不算太大，为何说 Bert 是近年来 NLP 重大进展的集大成者。</p><p>预训练语言模型的发展并不是一蹴而就的，而是伴随着诸如词嵌入、序列到序列模型及 Attention 的发展而产生的。</p><p>DeepMind 的计算机科学家 Sebastian Ruder 给出了 21 世纪以来，从神经网络技术的角度分析，自然语言处理的里程碑式进展，如下表所示：</p><table><thead><tr><th>年份</th><th>2013 年</th><th>2014 年</th><th>2015 年</th><th>2016 年</th><th>2017 年</th></tr></thead><tbody><tr><td>技术</td><td>word2vec</td><td>GloVe</td><td>LSTM/Attention</td><td>Self-Attention</td><td>Transformer</td></tr></tbody></table><table><thead><tr><th>年份</th><th>2018 年</th><th>2019 年</th><th>2020 年</th></tr></thead><tbody><tr><td>技术</td><td>GPT/ELMo/BERT/GNN</td><td>XLNet/BoBERTa/GPT-2/ERNIE/T5</td><td>GPT-3/ELECTRA/ALBERT</td></tr></tbody></table><p>本篇文章将会通过上表显示的 NLP 中技术的发展史一一叙述，由于 19 年后的技术大都是 BERT 的变体，在这里不会多加叙述，读者可以自行加以了解。</p><h1>一、预训练</h1><h2 id="1-1-图像领域的预训练">1.1 图像领域的预训练</h2><p>在介绍图像领域的预训练之前，我们首先介绍下卷积神经网络（CNN），CNN 一般用于图片分类任务，并且CNN 由多个层级结构组成，不同层学到的图像特征也不同，<strong>越浅的层学到的特征越通用（横竖撇捺），越深的层学到的特征和具体任务的关联性越强（人脸-人脸轮廓、汽车-汽车轮廓）</strong>，如下图所示：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/图像预训练示例.jpg" style="zoom:50%;" /><p>由此，当领导给我们一个任务：阿猫、阿狗、阿虎的图片各十张，然后让我们设计一个深度神经网络，通过该网络把它们三者的图片进行分类。</p><p>对于上述任务，如果我们亲手设计一个深度神经网络基本是不可能的，<strong>因为深度学习一个弱项就是在训练阶段对于数据量的需求特别大</strong>，而领导只给我们合计三十张图片，显然这是不够的。</p><p>虽然领导给我们的数据量很少，<strong>但是我们是否可以利用网上现有的大量已做好分类标注的图片</strong>。比如 ImageNet 中有 1400 万张图片，并且这些图片都已经做好了分类标注。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/预训练的应用.jpg" style="zoom:50%;" /><p>上述利用网络上现有图片的思想就是预训练的思想，具体做法就是：</p><ol><li>通过 ImageNet 数据集我们训练出一个模型 A</li><li>由于上面提到 CNN 的浅层学到的特征通用性特别强，我们可以对模型 A 做出一部分改进得到模型 B（两种方法）：<ol><li>冻结：浅层参数使用模型 A 的参数，高层参数随机初始化，<strong>浅层参数一直不变</strong>，然后利用领导给出的 30 张图片训练参数</li><li>微调：浅层参数使用模型 A 的参数，高层参数随机初始化，然后利用领导给出的 30 张图片训练参数，<strong>但是在这里浅层参数会随着任务的训练不断发生变化</strong></li></ol></li></ol><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/预训练在图像领域的应用.jpg" style="zoom:50%;" /><p>通过上述的讲解，对图像预训练做个总结（可参照上图）：对于一个具有少量数据的任务 A，首先通过一个现有的大量数据搭建一个 CNN 模型 A，由于 CNN的浅层学到的特征通用性特别强，因此在搭建一个 CNN 模型 B，其中模型 B 的浅层参数使用模型 A 的浅层参数，模型 B 的高层参数随机初始化，然后通过冻结或微调的方式利用任务 A 的数据训练模型 B，模型 B 就是对应任务 A 的模型。</p><h2 id="1-2-预训练的思想">1.2 预训练的思想</h2><p>有了图像领域预训练的引入，我们在此给出预训练的思想：任务 A 对应的模型 A 的参数不再是随机初始化的，而是通过任务 B 进行预先训练得到模型 B，然后利用模型 B 的参数对模型 A 进行初始化，再通过任务 A 的数据对模型 A 进行训练。注：模型 B 的参数是随机初始化的。</p><h1>二、语言模型</h1><p>想了解预训练语言模型，首先得了解什么是语言模型。</p><p>语言模型通俗点讲就是**计算一个句子的概率。**也就是说，对于语言序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">w_1,w_2,\cdots,w_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，语言模型就是计算该序列的概率，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(w_1,w_2,\cdots,w_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><p>下面通过两个实例具体了解上述所描述的意思：</p><ol><li>假设给定两句话 “判断这个词的磁性” 和 “判断这个词的词性”，语言模型会认为后者更自然。转化成数学语言也就是：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mtext>判断，这个，词，的，词性</mtext><mo stretchy="false">)</mo><mo>&gt;</mo><mi>P</mi><mo stretchy="false">(</mo><mtext>判断，这个，词，的，磁性</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(判断，这个，词，的，词性) \gt P(判断，这个，词，的，磁性)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">判断，这个，词，的，词性</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">判断，这个，词，的，磁性</span><span class="mclose">)</span></span></span></span></li><li>假设给定一句话做填空 “判断这个词的____”，则问题就变成了给定前面的词，找出后面的一个词是什么，转化成数学语言就是：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mtext>词性</mtext><mi mathvariant="normal">∣</mi><mtext>判断，这个，词，的</mtext><mo stretchy="false">)</mo><mo>&gt;</mo><mi>P</mi><mo stretchy="false">(</mo><mtext>磁性</mtext><mi mathvariant="normal">∣</mi><mtext>判断，这个，词，的</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(词性|判断，这个，词，的) \gt P(磁性|判断，这个，词，的)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">词性</span><span class="mord">∣</span><span class="mord cjk_fallback">判断，这个，词，的</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">磁性</span><span class="mord">∣</span><span class="mord cjk_fallback">判断，这个，词，的</span><span class="mclose">)</span></span></span></span></li></ol><p>通过上述两个实例，可以给出语言模型更加具体的描述：给定一句由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个词组成的句子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">W=w_1,w_2,\cdots,w_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，计算这个句子的概率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(w_1,w_2,\cdots,w_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，或者计算根据上文计算下一个词的概率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(w_n|w_1,w_2,\cdots,w_{n-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><p>下面将介绍语言模型的两个分支，统计语言模型和神经网络语言模型。</p><h2 id="2-1-统计语言模型">2.1 统计语言模型</h2><p>统计语言模型的基本思想就是<strong>计算条件概率</strong>。</p><p>给定一句由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个词组成的句子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">W=w_1,w_2,\cdots,w_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，计算这个句子的概率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(w_1,w_2,\cdots,w_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的公式如下（条件概率乘法公式的推广，链式法则）：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>3</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>⋯</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∏</mo><mi>i</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>w</mi><mn>1</mn><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*}P(w_1,w_2,\cdots,w_n) &amp; =  P(w_1)P(w_2|w_1)P(w_3|w_1,w_2)\cdots p(w_n|w_1,w_2,\cdots,w_{n-1}) \\&amp; = \prod_i P(w_i|w1,w_2,\cdots,w_{i-1})\end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.1277em;vertical-align:-1.8138em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3138em;"><span style="top:-4.5238em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.8138em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8138em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3138em;"><span style="top:-4.5238em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.8138em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8138em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>对于上一节提到的 “判断这个词的词性” 这句话，利用上述的公式，可以得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo stretchy="false">(</mo><mtext>判断，这个，词，的，词性</mtext><mo stretchy="false">)</mo><mo>=</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo stretchy="false">(</mo><mtext>判断</mtext><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mtext>这个</mtext><mi mathvariant="normal">∣</mi><mtext>判断</mtext><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mtext>词</mtext><mi mathvariant="normal">∣</mi><mtext>判断，这个</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo stretchy="false">(</mo><mtext>的</mtext><mi mathvariant="normal">∣</mi><mtext>判断，这个，词</mtext><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mtext>词性</mtext><mi mathvariant="normal">∣</mi><mtext>判断，这个，词，的</mtext><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mtext>判断，这个，词，的，词性</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*}&amp; P(判断，这个，词，的，词性) = \\&amp; P(判断)P(这个|判断)P(词|判断，这个) \\&amp; P(的|判断，这个，词)P(词性|判断，这个，词，的)P(判断，这个，词，的，词性)\end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">判断，这个，词，的，词性</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">判断</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">这个</span><span class="mord">∣</span><span class="mord cjk_fallback">判断</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">词</span><span class="mord">∣</span><span class="mord cjk_fallback">判断，这个</span><span class="mclose">)</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">的</span><span class="mord">∣</span><span class="mord cjk_fallback">判断，这个，词</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">词性</span><span class="mord">∣</span><span class="mord cjk_fallback">判断，这个，词，的</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">判断，这个，词，的，词性</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>对于上一节提到的另外一个问题，当给定前面词的序列 “判断，这个，词，的” 时，想要知道下一个词是什么，可以直接计算如下概率：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub><mi mathvariant="normal">∣</mi><mtext>判断，这个，词，的</mtext><mo stretchy="false">)</mo><mspace width="1em"/><mtext>公式(1)</mtext></mrow><annotation encoding="application/x-tex">P(w_{next}|判断，这个，词，的)\quad\text{公式(1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord cjk_fallback">判断，这个，词，的</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord cjk_fallback">公式</span><span class="mord">(1)</span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub><mo>∈</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">w_{next} \in V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 表示词序列的下一个词，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 是一个具有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|V|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span></span></span></span> 个词的词典（词集合）。</p><p>对于公式（1），可以展开成如下形式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub><mi mathvariant="normal">∣</mi><mtext>判断，这个，词，的</mtext><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub><mtext>，判断，这个，词，的</mtext><mo stretchy="false">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mtext>判断，这个，词，的</mtext><mo stretchy="false">)</mo></mrow></mfrac><mspace width="1em"/><mtext>公式(2)</mtext></mrow><annotation encoding="application/x-tex">P(w_{next}|判断，这个，词，的) = \frac{count(w_{next}，判断，这个，词，的)}{count(判断，这个，词，的)} \quad\text{公式(2)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord cjk_fallback">判断，这个，词，的</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord cjk_fallback">判断，这个，词，的</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，判断，这个，词，的</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord cjk_fallback">公式</span><span class="mord">(2)</span></span></span></span></span></span></p><p>对于公式（2），可以把字典 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 中的多有单词，逐一作为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{next}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，带入计算，最后取最大概率的词作为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{next}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的候选词。</p><p>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|V|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span></span></span></span> 特别大，公式（2）的计算将会非常困难，但是我们可以引入马尔科夫链的概念（当然，在这里只是简单讲讲如何做，关于马尔科夫链的数学理论知识可以自行查看其他参考资料）。</p><p>假设字典 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 中有 “火星” 一词，可以明显发现 “火星” 不可能出现在 “判断这个词的” 后面，因此（火星，判断，这个，词，的）这个组合是不存在的，并且词典中会存在很多类似于 “火星” 这样的词。</p><p>进一步，可以发现我们把（火星，判断，这个，词，的）这个组合判断为不存在，是因为 “火星” 不可能出现在 “词的” 后面，也就是说我们可以考虑是否把公式（1）转化为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub><mi mathvariant="normal">∣</mi><mtext>判断，这个，词，的</mtext><mo stretchy="false">)</mo><mo>≈</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub><mi mathvariant="normal">∣</mi><mtext>词，的</mtext><mo stretchy="false">)</mo><mspace width="1em"/><mtext>公式(3)</mtext></mrow><annotation encoding="application/x-tex">P(w_{next}|判断，这个，词，的) \approx P(w_{next}|词，的)\quad\text{公式(3)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord cjk_fallback">判断，这个，词，的</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord cjk_fallback">词，的</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord cjk_fallback">公式</span><span class="mord">(3)</span></span></span></span></span></span></p><p>公式（3）就是马尔科夫链的思想：假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{next}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 只和它之前的 <strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个词有相关性</strong>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时称作一个单元语言模型，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">k=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 时称为二元语言模型。</p><p>可以发现通过马尔科夫链后改写的公式计算起来将会简单很多，下面我们举个简单的例子介绍下如何计算一个二元语言模型的概率。</p><p>其中二元语言模型的公式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mfrac><mspace width="1em"/><mtext>公式(4)</mtext></mrow><annotation encoding="application/x-tex">P(w_i|w_{i-1})=\frac{count(w_{i-1},w_i)}{count(w_{i-1})}\quad\text{公式(4)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord cjk_fallback">公式</span><span class="mord">(4)</span></span></span></span></span></span></p><p>假设有一个文本集合：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">“词性是动词”</span><br><span class="line">“判断单词的词性”</span><br><span class="line">“磁性很强的磁铁”</span><br><span class="line">“北京的词性是名词”</span><br></pre></td></tr></table></figure><p>对于上述文本，如果要计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mtext>词性</mtext><mi mathvariant="normal">∣</mi><mtext>的</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(词性|的)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">词性</span><span class="mord">∣</span><span class="mord cjk_fallback">的</span><span class="mclose">)</span></span></span></span> 的概率，通过公式（4），需要统计 “的，词性” 同时按序出现的次数，再除以 “的” 出现的次数：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mtext>词性</mtext><mi mathvariant="normal">∣</mi><mtext>的</mtext><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mtext>的，词性</mtext><mo stretchy="false">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mtext>的</mtext><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><mspace width="1em"/><mtext>公式(5)</mtext></mrow><annotation encoding="application/x-tex">P(词性|的) = \frac{count(的，词性)}{count(的)} = \frac{2}{3}\quad\text{公式(5)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">词性</span><span class="mord">∣</span><span class="mord cjk_fallback">的</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord cjk_fallback">的</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord cjk_fallback">的，词性</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord cjk_fallback">公式</span><span class="mord">(5)</span></span></span></span></span></span></p><p>上述文本集合是我们自定制的，然而对于绝大多数具有现实意义的文本，会出现数据稀疏的情况，例如<strong>训练时未出现，测试时出现了的未登录单词</strong>。</p><p>由于数据稀疏问题，则会出现概率值为 0 的情况（填空题将无法从词典中选择一个词填入），为了避免 0 值的出现，会使用一种平滑的策略——分子和分母都加入一个非 0 正数，例如可以把公式（4）改为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mspace width="1em"/><mtext>公式(6)</mtext></mrow><annotation encoding="application/x-tex">P(w_i|w_{i-1}) = \frac{count(w_{i-1},w_i)+1}{count(w_{i-1})+|V|}\quad\text{公式(6)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord cjk_fallback">公式</span><span class="mord">(6)</span></span></span></span></span></span></p><p>##2.2 神经网络语言模型</p><p>上一节简单的介绍了统计语言模型，并且在结尾处讲到统计语言模型存在数据稀疏问题，针对该问题，我们也提出了平滑方法来应对这个问题。</p><p>神经网络语言模型则引入神经网络架构来估计单词的分布，<strong>并且通过词向量的距离衡量单词之间的相似度，因此，对于未登录单词，也可以通过相似词进行估计，进而避免出现数据稀疏问题</strong>。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/神经网络语言模型.jpg" style="zoom:50%;" /><p>上图为神经网络语言模型结构图，它的学习任务是输入某个句中单词 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>t</mi></msub><mo>=</mo><mi>b</mi><mi>e</mi><mi>r</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">w_t = bert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal">t</span></span></span></span> 前的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6984em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 个单词，要求网络正确预测单词 “bert”，即最大化：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>t</mi></msub><mo>=</mo><mi>b</mi><mi>e</mi><mi>r</mi><mi>t</mi><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mspace width="1em"/><mtext>公式(7)</mtext></mrow><annotation encoding="application/x-tex">P(w_t=bert|w_1,w_2,\cdots,w_{t-1};\theta)\quad\text{公式(7)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord cjk_fallback">公式</span><span class="mord">(7)</span></span></span></span></span></span></p><p>上图所示的神经网络语言模型分为三层，接下来我们详细讲解这三层的作用：</p><ol><li>神经网络语言模型的第一层，为输入层。首先将前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 个单词用 Onehot 编码（例如：0001000）作为原始单词输入，之后乘以一个随机初始化的矩阵 Q 后获得词向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(w_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，对这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 个词向量处理后得到输入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>，记作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=(C(w_1),C(w_2),\cdots,C(w_{t-1}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></li><li>神经网络语言模型的第二层，为隐层，包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span></span></span></span> 个隐变量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span> 代表权重矩阵，因此隐层的输出为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>x</mi><mo>+</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">Hx+d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span> 为偏置项。并且在此之后使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span></span></span></span> 作为激活函数。</li><li>神经网络语言模型的第三层，为输出层，一共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|V|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span></span></span></span>  个输出节点（字典大小），直观上讲，每个输出节点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是词典中每一个单词概率值。最终得到的计算公式为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>b</mi><mo>+</mo><mi>W</mi><mi>x</mi><mo>+</mo><mi>U</mi><mi>tanh</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>d</mi><mo>+</mo><mi>H</mi><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = softmax(b+Wx+U\tanh(d+Hx))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">so</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">tanh</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 是直接从输入层到输出层的权重矩阵，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span> 是隐层到输出层的参数矩阵。</li></ol><h1>三、词向量</h1><p>在描述神经网络语言模型的时候，提到 Onehot 编码和词向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(w_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，但是并没有具体提及他们到底是什么玩意。</p><p>由于他们对于未来 BERT 的讲解非常重要，所以在这里重开一章来描述词向量到底是什么，如何表示。</p><h2 id="3-1-独热（Onehot）编码">3.1 独热（Onehot）编码</h2><p><strong>把单词用向量表示，是把深度神经网络语言模型引入自然语言处理领域的一个核心技术。</strong></p><p>在自然语言处理任务中，训练集大多为一个字或者一个词，把他们转化为计算机适合处理的数值类数据非常重要。</p><p>早期，人们想到的方法是使用独热（Onehot）编码，如下图所示：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/单词的独热表示.jpg" style="zoom:50%;" /><p>对于上图的解释，假设有一个包含 8 个次的字典 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>，“time” 位于字典的第 1 个位置，“banana” 位于字典的第 8 个位置，因此，采用独热表示方法，对于 “time” 的向量来说，除了第 1 个位置为 1，其余位置为 0；对于 “banana” 的向量来说，除了第 8 个位置为 1，其余位置为 0。</p><p>但是，对于独热表示的向量，如果采用余弦相似度计算向量间的相似度，<strong>可以明显的发现任意两者向量的相似度结果都为 0</strong>，即任意二者都不相关，也就是说独热表示无法解决词之间的相似性问题。</p><h2 id="3-2-Word-Embedding">3.2 Word Embedding</h2><p>由于独热表示无法解决词之间相似性问题，这种表示很快就被词向量表示给替代了，这个时候聪明的你可能想到了在神经网络语言模型中出现的一个词向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(w_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，对的，<strong>这个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(w_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 其实就是单词对应的 Word Embedding 值，也就是我们这节的核心——词向量。</strong></p><p>在神经网络语言模型中，我们并没有详细解释词向量是如何计算的，现在让我们重看神经网络语言模型的架构图：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/神经网络语言模型.jpg" style="zoom:50%;" /><p>上图所示有一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>×</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">V×m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 的矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span>，这个矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span> 包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 行，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 代表词典大小，每一行的内容代表对应单词的 Word Embedding 值。</p><p>只不过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span> 的内容也是网络参数，需要学习获得，训练刚开始用随机值初始化矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span>，当这个网络训练好之后，矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span> 的内容被正确赋值，每一行代表一个单词对应的 Word embedding 值。</p><p>但是这个词向量有没有解决词之间的相似度问题呢？为了回答这个问题，我们可以看看词向量的计算过程：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>17</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>24</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>23</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>13</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>12</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>19</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>11</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>18</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>25</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>12</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>19</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace width="1em"/><mtext>公式(8)</mtext></mrow><annotation encoding="application/x-tex">\begin{bmatrix}0&amp;0&amp;0&amp;1&amp;0\end{bmatrix}\begin{bmatrix}17&amp;24&amp;1\\23&amp;5&amp;7\\4&amp;6&amp;13\\10&amp;12&amp;19\\11&amp;18&amp;25\end{bmatrix}=\begin{bmatrix}10&amp;12&amp;19\end{bmatrix}\quad\text{公式(8)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="6.000em" viewBox="0 0 667 6000"><path d="M403 1759 V84 H666 V0 H319 V1759 v2400 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v2400 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">17</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">23</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">11</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">24</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">12</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">18</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">13</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">19</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">25</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="6.000em" viewBox="0 0 667 6000"><path d="M347 1759 V0 H0 V84 H263 V1759 v2400 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v2400 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">12</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">19</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord cjk_fallback">公式</span><span class="mord">(8)</span></span></span></span></span></span></p><p>通过上述词向量的计算，可以发现第 4 个词的词向量表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>10</mn><mtext> </mtext><mn>12</mn><mtext> </mtext><mn>19</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[10\,12\,19]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">10</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">12</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">19</span><span class="mclose">]</span></span></span></span>。</p><p>如果再次采用余弦相似度计算两个词之间的相似度，结果不再是 0 ，既可以一定程度上描述两个词之间的相似度。</p><p>下图给了网上找的几个例子，可以看出有些例子效果还是很不错的，一个单词表达成 Word Embedding 后，很容易找出语义相近的其它词汇。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/wordembedding例子.jpg" style="zoom:50%;" /><h1>四、Word2Vec 模型</h1><p>2013 年最火的用语言模型做 Word Embedding 的工具是 Word2Vec ，后来又出了Glove（由于 Glove 和 Word2Vec 的作用类似，并对 BERT 的讲解没有什么帮助，之后不再多加叙述），Word2Vec是怎么工作的呢？看下图：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/word2vec.jpg" style="zoom:50%;" /><p>Word2Vec 的网络结构其实和神经网络语言模型（NNLM）是基本类似的，只是这个图长得清晰度差了点，看上去不像，其实它们是亲兄弟。不过这里需要指出：尽管网络结构相近，而且都是做语言模型任务，但是他们训练方法不太一样。</p><p>Word2Vec 有两种训练方法：</p><ol><li>第一种叫 CBOW，<strong>核心思想是从一个句子里面把一个词抠掉</strong>，用这个词的上文和下文去预测被抠掉的这个词；</li><li>第二种叫做 Skip-gram，和 CBOW 正好反过来，输入某个单词，要求网络预测它的上下文单词。</li></ol><p>而你回头看看，NNLM 是怎么训练的？是输入一个单词的上文，去预测这个单词。这是有显著差异的。</p><p>为什么 Word2Vec 这么处理？原因很简单，因为 Word2Vec 和 NNLM 不一样，NNLM 的主要任务是要学习一个解决语言模型任务的网络结构，语言模型就是要看到上文预测下文，而 Word Embedding只是 NNLM 无心插柳的一个副产品；但是 Word2Vec 目标不一样，它单纯就是要 Word Embedding 的，这是主产品，所以它完全可以随性地这么去训练网络。</p><p>为什么要讲 Word2Vec 呢？这里主要是要引出 CBOW 的训练方法，BERT 其实跟它有关系，后面会讲解它们之间的关系，当然它们的关系 BERT 作者没说，是我猜的，至于我猜的对不对，你看完这篇文章之后可以自行判断。</p><h1>五、自然语言处理的预训练模型</h1><p>突然在文章中插入这一段，其实就是给出一个问题：Word Embedding 这种做法能算是预训练吗？这其实就是标准的预训练过程。要理解这一点要看看学会 Word Embedding 后下游任务是怎么使用它的。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/we模式下的预训练.jpg" style="zoom:50%;" /><p>假设如上图所示，我们有个NLP的下游任务，比如 QA，就是问答问题，所谓问答问题，指的是给定一个问题 X，给定另外一个句子 Y，要判断句子 Y 是否是问题 X 的正确答案。</p><p>问答问题假设设计的网络结构如上图所示，这里不展开讲了，懂得自然懂，不懂的也没关系，因为这点对于本文主旨来说不关键，关键是网络如何使用训练好的 Word Embedding 的。</p><p>它的使用方法其实和前面讲的 NNLM 是一样的，句子中每个单词以 Onehot 形式作为输入，然后乘上学好的 Word Embedding 矩阵 Q，就直接取出单词对应的 Word Embedding 了。</p><p>这乍看上去好像是个查表操作，不像是预训练的做法是吧？其实不然，<strong>那个Word Embedding矩阵Q其实就是网络 Onehot 层到 embedding 层映射的网络参数矩阵。</strong></p><p>所以你看到了，使用 Word Embedding 等价于什么？等价于把 Onehot 层到 embedding 层的网络用预训练好的参数矩阵 Q 初始化了。这跟前面讲的图像领域的低层预训练过程其实是一样的，<strong>区别无非 Word Embedding 只能初始化第一层网络参数，再高层的参数就无能为力了</strong>。</p><p>下游NLP任务在使用 Word Embedding 的时候也类似图像有两种做法，一种是 Frozen，就是 Word Embedding 那层网络参数固定不动；另外一种是 Fine-Tuning，就是 Word Embedding 这层参数使用新的训练集合训练也需要跟着训练过程更新掉。</p><p>上面这种做法就是18年之前NLP领域里面采用预训练的典型做法，并且 Word Embedding 其实对于很多下游 NLP 任务是有帮助的，只是帮助没有大到闪瞎忘记戴墨镜的围观群众的双眼而已。</p><h1>六、RNN 和 LSTM</h1><p>为什么要在这里穿插一个 RNN（Recurrent Neural Network） 和 LSTM（Long Short-Term Memory） 呢？</p><p>因为接下来要介绍的 ELMo（Embeddings from Language Models） 模型在训练过程中使用了双向长短期记忆网络（Bi-LSTM）。</p><p>当然，这里只是简单地介绍，想要详细了解的可以去查看网上铺天盖地的参考资料。</p><h2 id="6-1-RNN">6.1 RNN</h2><p>传统的神经网络无法获取时序信息，然而<strong>时序信息在自然语言处理任务中非常重要</strong>。</p><p>例如对于这一句话 “我吃了一个苹果”，“苹果” 的词性和意思，在这里取决于前面词的信息，如果没有 “我吃了一个” 这些词，“苹果” 也可以翻译为乔布斯搞出来的那个被咬了一口的苹果。</p><p>也就是说，RNN 的出现，让处理时序信息变为可能。</p><p>RNN 的基本单元结构如下图所示：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/RNN-unrolled.png" style="zoom:36%;" /><p>上图左边部分称作 RNN 的一个 timestep，在这个 timestep 中可以看到，在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 时刻，输入变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，通过 RNN 的一个基础模块 A，输出变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">h_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 时刻的信息，将会传递到下一个时刻 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6984em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</p><p>如果把模块按照时序展开，则会如上图右边部分所示，<strong>由此可以看到 RNN 为多个基础模块 A 的互连，每一个模块都会把当前信息传递给下一个模块</strong>。</p><p>RNN 解决了时序依赖问题，但这里的时序一般指的是短距离的，首先我们先介绍下短距离依赖和长距离依赖的区别：</p><ul><li>短距离依赖：对于这个填空题 “我想看一场篮球____”，我们很容易就判断出 “篮球” 后面跟的是 “比赛”，这种短距离依赖问题非常适合 RNN。</li><li>长距离依赖：对于这个填空题 “我出生在中国的瓷都景德镇，小学和中学离家都很近，……，我的母语是____”，对于短距离依赖，“我的母语是” 后面可以紧跟着 “汉语”、“英语”、“法语”，但是如果我们想精确答案，则必须回到上文中很长距离之前的表述 “我出生在中国的瓷都景德镇”，进而判断答案为 “汉语”，而 RNN 是很难学习到这些信息的。</li></ul><h2 id="6-2-RNN-的梯度消失问题">6.2 RNN 的梯度消失问题</h2><p>在这里我简单讲解下 RNN 为什么不适合长距离依赖问题。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/RNN模型结构.jpg" style="zoom:50%;" /><p>如上图所示，为RNN模型结构，前向传播过程包括：</p><ul><li><strong>隐藏状态：</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>U</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>W</mi><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h^{(t)} = \sigma (z^{(t)}) = \sigma(Ux^{(t)} + Wh^{(t-1)} + b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9713em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span> ，此处激活函数一般为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span></span></span></span> 。</li><li><strong>模型输出：</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>o</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mi>V</mi><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">o^{(t)} = Vh^{(t)} + c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9713em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span></li><li><strong>预测输出：</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>o</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{y}^{(t)} = \sigma(o^{(t)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，此处激活函数一般为softmax。</li><li><strong>模型损失：</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></msubsup><msup><mi>L</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">L = \sum_{t = 1}^{T} L^{(t)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2809em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></li></ul><p>RNN 所有的 timestep 共享一套参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo separator="true">,</mo><mi>V</mi><mo separator="true">,</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">U,V,W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>，在 RNN 反向传播过程中，需要计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo separator="true">,</mo><mi>V</mi><mo separator="true">,</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">U,V,W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 等参数的梯度，以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 的梯度表达式为例（假设 RNN 模型的损失函数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>）：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mo>=</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>o</mi><mrow><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>o</mi><mrow><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mfrac><mrow><mo fence="true">(</mo><munderover><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></munderover><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow></mfrac><mo fence="true">)</mo></mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mtext> </mtext><mspace linebreak="newline"></mspace><mo>=</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>o</mi><mrow><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>o</mi><mrow><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mfrac><mrow><mo fence="true">(</mo><munderover><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></munderover><mi>t</mi><mi>a</mi><mi>n</mi><msup><mi>h</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mi>W</mi><mo fence="true">)</mo></mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mtext> </mtext><mspace linebreak="newline"></mspace><mspace width="1em"/><mtext>公式(9)</mtext></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial W} = \sum_{t = 1}^{T} \frac{\partial L}{\partial y^{(T)}} \frac{\partial y^{(T)}}{\partial o^{(T)}} \frac{\partial o^{(T)}}{\partial h^{(T)}} \left( \prod_{k=t + 1}^{T} \frac{\partial h^{(k)}}{\partial h^{(k - 1)}} \right) \frac{\partial h^{(t)}}{\partial W} \  \\ = \sum_{t = 1}^{T} \frac{\partial L}{\partial y^{(T)}} \frac{\partial y^{(T)}}{\partial o^{(T)}} \frac{\partial o^{(T)}}{\partial h^{(T)}} \left( \prod_{k=t+1}^{T} tanh^{&#x27;}(z^{(k)}) W \right) \frac{\partial h^{(t)}}{\partial W} \  \\\quad\text{公式(9)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1888em;vertical-align:-1.3604em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8984em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.704em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.704em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3604em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.704em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace"> </span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1888em;vertical-align:-1.3604em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8984em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.704em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.704em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3604em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">an</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9925em;"><span style="top:-2.9925em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace"> </span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord cjk_fallback">公式</span><span class="mord">(9)</span></span></span></span></span></span></p><p>对于公式（9）中的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mi>t</mi><mi>a</mi><mi>n</mi><msup><mi>h</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mi>W</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\left( \prod_{k=t + 1}^{T} \frac{\partial h^{(k)}}{\partial h^{(k - 1)}} \right) = \left( \prod_{k=t+1}^{T} tanh^{&#x27;}(z^{(k)}) W \right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0707em;"><span style="top:-2.6146em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.822em;"><span style="top:-2.822em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667em;"><span style="top:-2.9667em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3854em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">an</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>tanh</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">tanh</span></span></span></span> 的导数总是小于 1 的，由于是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>−</mo><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T-(t+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 个 timestep 参数的连乘，<strong>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 的主特征值小于 1，梯度便会消失；如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 的特征值大于 1，梯度便会爆炸。</strong></p><p>需要注意的是，RNN和DNN梯度消失和梯度爆炸含义并不相同。</p><p>RNN中权重在各时间步内共享，最终的梯度是各个时间步的梯度和，梯度和会越来越大。因此，RNN中总的梯度是不会消失的，即使梯度越传越弱，也只是远距离的梯度消失。 从公式（9）中的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mi>t</mi><mi>a</mi><mi>n</mi><msup><mi>h</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mi>W</mi><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left( \prod_{k=t+1}^{T} tanh^{&#x27;}(z^{(k)}) W \right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">an</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span> 可以看到，<strong>RNN所谓梯度消失的真正含义是，梯度被近距离（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>+</mo><mn>1</mn><mtext>趋向于</mtext><mi>T</mi></mrow><annotation encoding="application/x-tex">t+1 趋向于 T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6984em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">1</span><span class="mord cjk_fallback">趋向于</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>）梯度主导，远距离（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>+</mo><mn>1</mn><mtext>远离</mtext><mi>T</mi></mrow><annotation encoding="application/x-tex">t+1 远离 T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6984em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">1</span><span class="mord cjk_fallback">远离</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>）梯度很小，导致模型难以学到远距离的信息。</strong></p><h2 id="6-3-LSTM">6.3 LSTM</h2><p>为了解决 RNN 缺乏的序列长距离依赖问题，LSTM 被提了出来，首先我们来看看 LSTM 相对于 RNN 做了哪些改进：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/LSTM模型结构.jpg" style="zoom:50%;" /><p>如上图所示，为 LSTM 的 RNN 门控结构（LSTM 的 timestep），LSTM 前向传播过程包括：</p><ul><li>**遗忘门：**决定了丢弃哪些信息，遗忘门接收 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6984em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时刻的状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">h_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>，以及当前的输入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，经过 Sigmoid 函数后输出一个 0 到 1 之间的值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">f_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><ul><li>输出： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mi>f</mi></msub><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>U</mi><mi>f</mi></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mi>f</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{t} = \sigma(W_fh_{t-1} + U_fx_{t} + b_f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li></ul></li><li>**输入门：**决定了哪些新信息被保留，并更新细胞状态，输入们的取值由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">h_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 决定，通过 Sigmoid 函数得到一个 0 到 1 之间的值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>i</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">i_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>tanh</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">tanh</span></span></span></span> 函数则创造了一个当前细胞状态的候选 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">a_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><ul><li>输出：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>i</mi><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mi>i</mi></msub><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>U</mi><mi>i</mi></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i_{t} = \sigma(W_ih_{t-1} + U_ix_{t} + b_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>C</mi><mi>t</mi></msub><mo>~</mo></mover><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><msub><mi>W</mi><mi>a</mi></msub><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>U</mi><mi>a</mi></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">\tilde{C_{t} }= tanhW_ah_{t-1} + U_ax_{t} + b_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0702em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul></li><li>**细胞状态：**旧细胞状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 被更新到新的细胞状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">C_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 上，<ul><li>输出：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>t</mi></msub><mo>=</mo><msub><mi>C</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>⊙</mo><msub><mi>f</mi><mi>t</mi></msub><mo>+</mo><msub><mi>i</mi><mi>t</mi></msub><mo>⊙</mo><mover accent="true"><msub><mi>C</mi><mi>t</mi></msub><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">C_{t} = C_{t-1}\odot f_{t} + i_{t}\odot \tilde{C_{t} }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0702em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></li></ul></li><li>**输出门：**决定了最后输出的信息，输出门取值由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">h_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 决定，通过 Sigmoid 函数得到一个 0 到 1 之间的值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>o</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">o_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，最后通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>tanh</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">tanh</span></span></span></span> 函数决定最后输出的信息<ul><li>输出：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>o</mi><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mi>o</mi></msub><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>U</mi><mi>o</mi></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mi>o</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">o_{t} = \sigma(W_oh_{t-1} + U_ox_{t} + b_o)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub><mo>=</mo><msub><mi>o</mi><mi>t</mi></msub><mo>⊙</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><msub><mi>C</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">h_{t} = o_{t}\odot tanhC_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul></li><li><strong>预测输出：</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>V</mi><msub><mi>h</mi><mi>t</mi></msub><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{y}_{t} = \sigma(Vh_{t}+c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></li></ul><h2 id="6-4-LSTM-解决-RNN-的梯度消失问题">6.4 LSTM 解决 RNN 的梯度消失问题</h2><p>明白了 RNN 梯度消失的原因之后，我们看 LSTM 如何解决问题的呢？</p><p>RNN 梯度消失的原因是，随着梯度的传导，梯度被近距离梯度主导，模型难以学习到远距离的信息。具体原因也就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>h</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>h</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\prod_{k=t+1}^{T}\frac{\partial h_{k}}{\partial h_{k - 1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4738em;vertical-align:-0.4925em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.902em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2107em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4925em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 部分，在迭代过程中，每一步 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>h</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>h</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial h_{k}}{\partial h_{k - 1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3945em;vertical-align:-0.4925em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.902em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2107em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4925em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> <strong>始终在 [0,1) 之间或者始终大于 1。</strong></p><p>而对于 LSTM 模型而言，针对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>C</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>C</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\prod _{k=t+1}^{T} \frac{\partial C_{k}}{\partial C_{k-1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4738em;vertical-align:-0.4925em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.902em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2107em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4925em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 求得：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>C</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>C</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac><mo>=</mo><msub><mi>f</mi><mi>k</mi></msub><mo>+</mo><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><munderover><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></munderover><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>C</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>C</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac><mo>=</mo><msub><mi>f</mi><mi>k</mi></msub><msub><mi>f</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>f</mi><mi>T</mi></msub><mo>+</mo><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}&amp; \frac{\partial C_{k}}{\partial C_{k-1}} = f_k + other \\&amp; \prod _{k=t+1}^{T} \frac{\partial C_{k}}{\partial C_{k-1}} = f_{k}f_{k+1}...f_{T} + other  \\\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.0546em;vertical-align:-2.7773em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2773em;"><span style="top:-5.7342em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span><span style="top:-2.7115em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7773em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2773em;"><span style="top:-5.7342em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8943em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span></span></span><span style="top:-2.7115em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3604em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8943em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7773em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2773em;"><span style="top:-5.7342em;"><span class="pstrut" style="height:3.8283em;"></span><span class="eqn-num"></span></span><span style="top:-2.7115em;"><span class="pstrut" style="height:3.8283em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7773em;"><span></span></span></span></span></span></span></span></span></p><p>在 LSTM 迭代过程中，针对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>C</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>C</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\prod_{k=t+1}^{T} \frac{\partial C_{k}}{\partial C_{k-1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4738em;vertical-align:-0.4925em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.902em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2107em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4925em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 而言，每一步<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>C</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>C</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial C_{k}}{\partial C_{k-1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3945em;vertical-align:-0.4925em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.902em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2107em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4925em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> <strong>可以自主的选择在 [0,1] 之间，或者大于1</strong>，因为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">f_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是可训练学习的。那么整体 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>C</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>C</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\prod _{k=t+1}^{T} \frac{\partial C_{k}}{\partial C_{k-1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4738em;vertical-align:-0.4925em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.902em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2107em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4925em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 也就不会一直减小，远距离梯度不至于完全消失，也就能够解决 RNN 中存在的梯度消失问题。</p><p>LSTM 遗忘门值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">f_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 可以选择在 [0,1] 之间，让 LSTM 来改善梯度消失的情况。也可以选择接近 1，让遗忘门饱和，此时远距离信息梯度不消失；也可以选择接近 0，此时模型是故意阻断梯度流，遗忘之前信息。</p><p>另外需要强调的是LSTM搞的这么复杂，<strong>除了在结构上天然地克服了梯度消失的问题，更重要的是具有更多的参数来控制模型</strong>；通过四倍于RNN的参数量，可以更加精细地预测时间序列变量。</p><p>此外，我记得有一篇文章讲到，<strong>LSTM 在 200左右长度的文本上，就已经捉襟见肘了</strong>。</p><h1>七、ELMo 模型</h1><h2 id="7-1-ELMo-的预训练">7.1 ELMo 的预训练</h2><p>在讲解 Word Embedding 时，细心地读者一定已经发现，这些词表示方法本质上是静态的，每一个词都有一个唯一确定的词向量，不能根据句子的不同而改变，无法处理自然语言处理任务中的多义词问题。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/we多义词问题.jpg" style="zoom:50%;" /><p>如上图所示，例如多义词 Bank，有两个常用含义，但是 Word Embedding 在对 bank 这个单词进行编码的时候，是区分不开这两个含义的。</p><p>因为尽管这两句含有 bank 的句子中 bank 上下文环境中出现的单词不同，但是在用语言模型训练的时候，不论什么上下文的句子经过 Word2Vec，都是预测相同的单词 bank，而同一个单词占用的是同一行的参数空间，这会导致两种不同的上下文信息都会编码到相同的 Word Embedding 空间里，进而导致Word Embedding 无法区分多义词的不同语义。</p><p>所以对于比如 Bank 这个词，它事先学好的 Word Embedding 中混合了几种语义 ，在应用中来了个新句子，即使从上下文中（比如句子包含 money 等词）明显可以看出它代表的是 “银行” 的含义，但是对应的 Word Embedding 内容也不会变，它还是混合了多种语义。</p><p>针对 Word Embedding 中出现的多义词问题，ELMo 提供了一个简洁优雅的解决方案。</p><p>ELMo 的本质思想是：我事先用语言模型学好一个单词的 Word Embedding，此时多义词无法区分，不过这没关系。在我实际使用 Word Embedding 的时候，单词已经具备了特定的上下文了，这个时候我可以根据上下文单词的语义再去调整单词的 Word Embedding 表示，这样经过调整后的 Word Embedding 更能表达在这个上下文中的具体含义，自然也就解决了多义词的问题了。所以 ELMo 本身是个根据当前上下文对 Word Embedding 动态调整的思路。</p><p>ELMo 采用了典型的两阶段过程：</p><ol><li>第一个阶段是利用语言模型进行预训练；</li><li>第二个阶段是在做下游任务时，从预训练网络中提取对应单词的网络各层的 Word Embedding 作为新特征补充到下游任务中。</li></ol><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/基于上下文的emedding.jpg" style="zoom:50%;" /><p>上图展示的是其第一阶段预训练过程，它的网络结构采用了双层双向 LSTM，目前语言模型训练的任务目标是根据单词 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的上下文去正确预测单词 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 之前的单词序列 Context-before 称为上文，之后的单词序列 Context-after 称为下文。</p><p>图中左端的前向双层 LSTM 代表正方向编码器，输入的是从左到右顺序的除了预测单词外 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">W_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的上文 Context-before；右端的逆向双层 LSTM 代表反方向编码器，输入的是从右到左的逆序的句子下文Context-after；每个编码器的深度都是两层 LSTM 叠加。</p><p>这个网络结构其实在 NLP 中是很常用的。使用这个网络结构利用大量语料做语言模型任务就能预先训练好这个网络，如果训练好这个网络后，输入一个新句子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">s_{new}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，句子中每个单词都能得到对应的三个 Embedding：</p><ul><li>最底层是单词的 Word Embedding；</li><li>往上走是第一层双向 LSTM 中对应单词位置的 Embedding，这层编码单词的句法信息更多一些；</li><li>再往上走是第二层 LSTM 中对应单词位置的 Embedding，这层编码单词的语义信息更多一些。</li></ul><p>也就是说，ELMo 的预训练过程不仅仅学会单词的 Word Embedding，还学会了一个双层双向的 LSTM 网络结构，而这两者后面都有用。</p><h2 id="7-2-ELMo-的-Feature-based-Pre-Training">7.2 ELMo 的 Feature-based Pre-Training</h2><p>上面介绍的是 ELMo 的第一阶段：预训练阶段。那么预训练好网络结构后，如何给下游任务使用呢？</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/elmo训练后的使用.jpg" style="zoom:50%;" /><p>上图展示了下游任务的使用过程，比如我们的下游任务仍然是 QA 问题，此时对于问句 X：</p><ol><li>我们可以先将句子 X 作为预训练好的 ELMo 网络的输入，这样句子 X 中每个单词在 ELMO 网络中都能获得对应的三个 Embedding；</li><li>之后给予这三个 Embedding 中的每一个 Embedding 一个权重 a，这个权重可以学习得来，根据各自权重累加求和，将三个 Embedding 整合成一个；</li><li>然后将整合后的这个 Embedding 作为 X 句在自己任务的那个网络结构中对应单词的输入，以此作为补充的新特征给下游任务使用。</li><li>对于上图所示下游任务 QA 中的回答句子 Y 来说也是如此处理。</li></ol><p><strong>因为 ELMo 给下游提供的是每个单词的特征形式，所以这一类预训练的方法被称为 “Feature-based Pre-Training”。</strong></p><p>至于为何这么做能够达到区分多义词的效果，原因在于在训练好 ELMo 后，<strong>在特征提取的时候，每个单词在两层 LSTM 上都会有对应的节点，这两个节点会编码单词的一些句法特征和语义特征，并且它们的 Embedding 编码是动态改变的</strong>，会受到上下文单词的影响，周围单词的上下文不同应该会强化某种语义，弱化其它语义，进而就解决了多义词的问题。</p><h1>八、Attention</h1><p>上面巴拉巴拉了一堆，都在为 BERT 的讲解做铺垫，而接下来要叙述的 Attention 和 Transformer 同样如此，它们都只是 BERT 构成的一部分。</p><h2 id="8-1-人类的视觉注意力">8.1 人类的视觉注意力</h2><p>Attention 是注意力的意思，从它的命名方式看，很明显借鉴了人类的注意力机制，因此，我们首先介绍人类的视觉注意力。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/人类的视觉注意力.jpg" style="zoom:50%;" /><p>视觉注意力机制是人类视觉所特有的大脑信号处理机制。人类视觉通过快速扫描全局图像，获得需要重点关注的目标区域，也就是一般所说的注意力焦点，而后对这一区域投入更多注意力资源，以获取更多所需要关注目标的细节信息，而抑制其他无用信息。</p><p>这是人类利用有限的注意力资源从大量信息中快速筛选出高价值信息的手段，是人类在长期进化中形成的一种生存机制，人类视觉注意力机制极大地提高了视觉信息处理的效率与准确性。</p><p>上图形象化展示了人类在看到一副图像时是如何高效分配有限的注意力资源的，<strong>其中红色区域表明视觉系统更关注的目标</strong>，很明显对于上图所示的场景，人们会把注意力更多投入到人的脸部，文本的标题以及文章首句等位置。</p><p>深度学习中的注意力机制从本质上讲和人类的选择性视觉注意力机制类似，<strong>核心目标也是从众多信息中选择出对当前任务目标更关键的信息。</strong></p><h2 id="8-2-Attention-的本质思想">8.2 Attention 的本质思想</h2><p>从人类的视觉注意力可以看出，注意力模型 Attention 的本质思想为：从大量信息中有选择地筛选出少量重要信息并聚焦到这些重要信息上，忽略不重要的信息。</p><p>在详细讲解 Attention之前，我们在讲讲 Attention的其他作用。之前我们讲解 LSTM 的时候说到，虽然 LSTM 解决了序列长距离依赖问题，但是单词超过 200 的时候就会失效。<strong>而 Attention 机制可以更加好的解决序列长距离依赖问题，并且具有并行计算能力</strong>。现在不明白这点不重要，随着我们对 Attention 的慢慢深入，相信你会明白。</p><p>首先我们得明确一个点，注意力模型从大量信息 Values 中筛选出少量重要信息，这些重要信息一定是相对于另外一个信息 Query 而言是重要的，例如对于上面那张婴儿图，Query 就是观察者。也就是说，我们要搭建一个注意力模型，我们必须得要有一个 Query 和一个 Values，然后通过 Query 这个信息从 Values 中筛选出重要信息。</p><p>通过 Query 这个信息从 Values 中筛选出重要信息，简单点说，<strong>就是计算 Query 和 Values 中每个信息的相关程度。</strong></p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/attention-计算图.png" style="zoom:50%;" /><p>再具体点，通过上图，Attention 通常可以进行如下描述，表示为将 Query(Q) 和 key-value pairs（<strong>把 Values 拆分成了键值对的形式</strong>） 映射到输出上，其中 query、每个 key、每个 value 都是向量，输出是 V 中所有 values 的加权，其中权重是由 Query 和每个 key 计算出来的，计算方法分为三步：</p><ol><li>第一步：计算比较 Q 和 K 的相似度，用 f 来表示：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mspace width="1em"/><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">f(Q,K_i)\quad i=1,2,\cdots,m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span></span></span></span>，一般第一步计算方法包括四种<ol><li>点乘（<strong>Transformer 使用</strong>）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msup><mi>Q</mi><mi>T</mi></msup><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">f(Q,K_i) = Q^T K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>权重：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msup><mi>Q</mi><mi>T</mi></msup><mi>W</mi><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">f(Q,K_i) = Q^TWK_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>拼接权重：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>W</mi><mo stretchy="false">[</mo><msup><mi>Q</mi><mi>T</mi></msup><mo separator="true">;</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f(Q,K_i) = W[Q^T;K_i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></li><li>感知器：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msup><mi>V</mi><mi>T</mi></msup><mi>tanh</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>W</mi><mi>Q</mi><mo>+</mo><mi>U</mi><msub><mi>K</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(Q,K_i)=V^T \tanh(WQ+UK_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">tanh</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li></ol></li><li>第二步：将得到的相似度进行 softmax 操作，进行归一化：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><msub><msqrt><mi>d</mi></msqrt><mi>k</mi></msub></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\alpha_i = softmax(\frac{f(Q,K_i)}{\sqrt d_k})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.598em;vertical-align:-0.588em;"></span><span class="mord mathnormal">so</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.5335em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9378em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal mtight" style="padding-left:0.833em;">d</span></span><span style="top:-2.8978em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1022em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3224em;"><span style="top:-2.3264em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1736em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">Q</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.588em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><ol><li>这里简单讲解除以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><msqrt><mi>d</mi></msqrt><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\sqrt d_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0897em;vertical-align:-0.1575em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="padding-left:0.833em;">d</span></span><span style="top:-2.8922em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1078em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3286em;"><span style="top:-2.5425em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1575em;"><span></span></span></span></span></span></span></span></span></span> 的作用：假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 里的元素的均值为0，方差为 1，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mi>T</mi></msup><mo>=</mo><msup><mi>Q</mi><mi>T</mi></msup><mi>K</mi></mrow><annotation encoding="application/x-tex">A^T=Q^TK</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 中元素的均值为 0，方差为 d。当 d 变得很大时， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 中的元素的方差也会变得很大，如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 中的元素方差很大(分布的方差大，分布集中在绝对值大的区域)，<strong>在数量级较大时， softmax 将几乎全部的概率分布都分配给了最大值对应的标签</strong>，由于某一维度的数量级较大，进而会导致 softmax 未来求梯度时会消失。总结一下就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">softmax</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mi>A</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\operatorname{softmax}\left(A\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">softmax</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">A</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 的分布会和d有关。因此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 中每一个元素乘上 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{\sqrt{d_k}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3831em;vertical-align:-0.538em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.5864em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8622em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8222em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1778em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 后，方差又变为 1，并且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 的数量级也将会变小。</li></ol></li><li>第三步：针对计算出来的权重 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\alpha_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 中的所有 values 进行加权求和计算，得到 Attention 向量：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><msub><mi>α</mi><mi>i</mi></msub><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Attention = \sum_{i=1}^m \alpha_i V_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">tt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ol><h2 id="8-3-Self-Attention-模型">8.3 Self Attention 模型</h2><p>上面已经讲了 Attention 就是从一堆信息中筛选出重要的信息，现在我们来通过 Self Attention 模型来详细讲解如何找到这些重要的信息。</p><p>Self Attention 模型的架构如下图所示，接下来我们将按照这个模型架构的顺序来逐一解释。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention.jpg" style="zoom:50%;" /><p>首先可以看到 Self Attention 有三个输入 Q、K、V：<strong>对于 Self Attention，Q、K、V 来自句子 X 的 词向量 x 的线性转化，即对于词向量 x，给定三个可学习的矩阵参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>Q</mi></msub><mo separator="true">,</mo><msub><mi>W</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>W</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">W_Q,W_k,W_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，x 分别右乘上述矩阵得到 Q、K、V</strong>。</p><p>接下来为了表示的方便，我们先通过向量的计算叙述 Self Attention 计算的流程，然后再描述 Self Attention 的矩阵计算过程</p><ol><li><p>第一步，Q、K、V 的获取</p><ol><li></li></ol>   <img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qkv.jpg" style="zoom:50%;" /><p>上图操作：两个单词 Thinking 和 Machines。通过线性变换，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 两个向量分别与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>q</mi></msub><mo separator="true">,</mo><msub><mi>W</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>W</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">W_q,W_k,W_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 三个矩阵点乘得到 ${q_1,q_2},{k_1,k_2},{v_1,v_2} $ 共 6 个向量。矩阵 Q 则是向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_1,q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的拼接，K、V 同理。</p></li><li><p>第二步，MatMul</p><ol><li><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/Q-K乘积.jpg" style="zoom:50%;" /><p>上图操作：向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">{q_1,k_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 做点乘得到得分 112， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">{q_1,k_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 做点乘得到得分96。注意：<strong>这里是通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 这个信息找到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_1,x_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 中的重要信息。</strong></p></li></ol></li><li><p>第三步和第四步，Scale + Softmax</p><ol><li><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qk-scale.jpg" style="zoom:50%;" /></li></ol><p>上图操作：对该得分进行规范，除以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">\sqrt {d_k} = 8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.1828em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8572em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8172em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1828em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">8</span></span></span></span></p></li><li><p>第五步，MatMul</p><ol><li><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qk-softmax.jpg" style="zoom:50%;" /></li></ol></li></ol><p>用得分比例 [0.88，0.12] 乘以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[v_1,v_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span> 值得到一个加权后的值，将这些值加起来得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>上述所说就是 Self Attention 模型所做的事，仔细感受一下，用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">K=[k_1,k_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span> 去计算一个 Thinking 相对于 Thinking 和 Machine 的权重，再用权重乘以 Thinking 和 Machine 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">V=[v_1,v_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span> 得到加权后的 Thinking 和 Machine 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">V=[v_1,v_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，最后求和得到针对各单词的输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>同理可以计算出 Machine 相对于 Thinking 和 Machine 的加权输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">z_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，拼接 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">z_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 即可得到 Attention 值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>z</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">Z=[z_1,z_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，这就是 Self Attention 的矩阵计算，如下所示。</p><p>之前的例子是单个向量的运算例子。这张图展示的是矩阵运算的例子，输入是一个 [2x4] 的矩阵（句子中每个单词的词向量的拼接），每个运算是 [4x3] 的矩阵，求得 Q、K、V。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/QKV-矩阵表示.jpg" style="zoom:50%;" /><p>Q 对 K 转制做点乘，除以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><msqrt><mi>d</mi></msqrt><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\sqrt d_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0897em;vertical-align:-0.1575em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="padding-left:0.833em;">d</span></span><span style="top:-2.8922em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1078em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3286em;"><span style="top:-2.5425em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1575em;"><span></span></span></span></span></span></span></span></span></span>，做一个 softmax 得到合为 1 的比例，对 V 做点乘得到输出 Z。那么这个 Z 就是一个考虑过 Thinking 周围单词 Machine 的输出。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/QKVZ-结果.jpg" style="zoom:50%;" /><p>注意看这个公式，<strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">QK^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 其实就会组成一个 word2word 的 attention map！</strong>（加了 softmax 之后就是一个合为 1 的权重了）。比如说你的输入是一句话 “i have a dream” 总共 4 个单词，这里就会形成一张 4x4 的注意力机制的图：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/注意力机制矩阵图.jpg" style="zoom:50%;" /><p>这样一来，每一个单词对应每一个单词都会有一个权重，<strong>这也是 Self Attention 名字的来源，即 Attention 的计算来源于 Source（源句） 和 Source 本身，通俗点讲就是 Q、K、V 都来源于输入 X 本身。</strong></p><h2 id="8-4-Self-Attention-和-RNN、LSTM-的区别">8.4 Self Attention 和 RNN、LSTM 的区别</h2><p>引入 Self Attention 有什么好处呢？或者说通过 Self Attention 到底学到了哪些规律或者抽取出了哪些特征呢？我们可以通过下述两幅图来讲解：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention-好处1.jpg" style="zoom:50%;" /><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention-好处2.jpg" style="zoom:50%;" /><p>从上述两张图可以看出，Self Attention 可以捕获同一个句子中单词之间的一些句法特征（例如第一张图展示的有一定距离的短语结构）或者语义特征（例如第二张图展示的 its 的指代对象为 Law）。</p><p>有了上述的讲解，我们现在可以来看看 Self Attention 和 RNN、LSTM 的区别：</p><ul><li>RNN、LSTM：如果是 RNN 或者 LSTM，需要依次序列计算，对于远距离的相互依赖的特征，<strong>要经过若干时间步步骤的信息累积才能将两者联系起来，而距离越远，有效捕获的可能性越小</strong>。</li><li>Self Attention：<ul><li>通过上述两幅图，很明显的可以看出，引入 Self Attention 后会更容易捕获句子中长距离的相互依赖的特征，<strong>因为 Self Attention 在计算过程中会直接将句子中任意两个单词的联系通过一个计算步骤直接联系起来，所以远距离依赖特征之间的距离被极大缩短，有利于有效地利用这些特征</strong>；</li><li>除此之外，Self<br>Attention 对于<strong>一句话中的每个单词都可以单独的进行 Attention 值的计算</strong>，也就是说 Self Attention 对计算的并行性也有直接帮助作用，而对于必须得依次序列计算的 RNN 而言，是无法做到并行计算的。</li></ul></li></ul><p>从上面的计算步骤和图片可以看出，<strong>无论句子序列多长，都可以充分捕获近距离上往下问中的任何依赖关系，进而可以很好的提取句法特征还可以提取语义特征</strong>；而且对于一个句子而言，<strong>每个单词的计算是可以并行处理的</strong>。</p><p>理论上 Self-Attention （Transformer 50 个左右的单词效果最好）解决了 RNN 模型的长序列依赖问题，但是由于文本长度增加时，训练时间也将会呈指数增长，因此在处理长文本任务时可能不一定比 LSTM（200 个左右的单词效果最好） 等传统的 RNN 模型的效果好。</p><p>上述所说的，则是为何 Self Attention 逐渐替代 RNN、LSTM 被广泛使用的原因所在。</p><h2 id="8-5-Masked-Self-Attention-模型">8.5 Masked Self Attention 模型</h2><p>趁热打铁，我们讲讲 Transformer 未来会用到的 Masked Self Attention 模型，这里的 Masked 就是要在做语言模型（或者像翻译）的时候，不给模型看到未来的信息，它的结构如下图所示：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/masked-attention.jpg" style="zoom:50%;" /><p>上图中和 Self Attention 重复的部分此处就不讲了，主要讲讲 Mask 这一块。</p><p>假设在此之前我们已经通过 scale 之前的步骤得到了一个 attention map，<strong>而 mask 就是沿着对角线把灰色的区域用0覆盖掉，不给模型看到未来的信息</strong>，如下图所示：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/mask-attention-map.jpg" style="zoom:50%;" /><p>详细来说：</p><ol><li>“i” 作为第一个单词，只能有和 “i” 自己的 attention；</li><li>“have” 作为第二个单词，有和 “i、have” 前面两个单词的 attention；</li><li>“a” 作为第三个单词，有和 “i、have、a” 前面三个单词的 attention；</li><li>“dream” 作为最后一个单词，才有对整个句子 4 个单词的 attention。</li></ol><p>并且在做完 softmax 之后，横轴结果合为 1。如下图所示：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/mask-attention-map-softmax.jpg" style="zoom:50%;" /><p>具体为什么要 mask，未来再讲解 Transformer 的时候我们会详细解释。</p><h2 id="8-6-Multi-head-Self-Attention-模型">8.6 Multi-head Self Attention 模型</h2><p>由于 Transformer 使用的都是 Self Attention 的进阶版 Multi-head Self Attention，我们简单讲讲  Multi-head Self Attention 的架构，并且在该小节结尾处讲讲它的优点。</p><p>Multi-Head Attention 就是把 Self Attention 得到的注意力值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 切分成 n 个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Z</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>Z</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>Z</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">Z_1,Z_2,\cdots,Z_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，然后通过全连接层获得新的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Z</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">Z&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>.</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/multi-head-attention.png" style="zoom:50%;" /><p>我们还是以上面的形式来解释，我们对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 进行 8 等份的切分得到 8 个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Z</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Z_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 矩阵：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/8-head-attention.jpg" style="zoom:50%;" /><p>为了使得输出与输入结构相同，拼接矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Z</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Z_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 后乘以一个线性 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">W_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 得到最终的Z：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/8-z-拼接.jpg" style="zoom:50%;" /><p>可以通过下图看看 multi-head attention 的整个流程：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/multi-head-拼接.jpg" style="zoom:50%;" /><p>上述操作有什么好处呢？<strong>多头相当于把原始信息 Source 放入了多个子空间中，也就是捕捉了多个信息，对于使用 multi-head（多头） attention 的简单回答就是，多头保证了 attention 可以注意到不同子空间的信息，捕捉到更加丰富的特征信息</strong>。其实本质上是论文原作者发现这样效果确实好。</p><h1>九、Position Embedding</h1><p>在 Attention 和 RNN、LSTM 的对比中，我们说到 Attention 解决了长距离依赖问题，并且可以支持并行化，但是它就真的百利而无一害了吗？</p><p>其实不然，我们往前回顾，Self Attention 的 Q、K、V 三个矩阵是由同一个输入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X_1=(x_1,x_2,\cdots,x_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 线性转换而来，也就是说对于这样的一个被打乱序列顺序的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X_2=(x_2,x_1,\cdots,x_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 而言，<strong>由于 Attention 值的计算最终会被加权求和，也就是说两者最终计算的 Attention 值都是一样的，进而也就表明了 Attention 丢掉了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">X_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的序列顺序信息。</strong></p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/位置向量.jpg" style="zoom:50%;" /><p>如上图所示，为了解决 Attention 丢失的序列顺序信息，Transformer 的提出者提出了 Position Embedding，也就是对于输入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 进行 Attention 计算之前，在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 的词向量中加上位置信息，也就是说 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 的词向量为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>f</mi><mi>i</mi><mi>n</mi><mi>a</mi><mi>l</mi><mi mathvariant="normal">_</mi><mi>e</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi></mrow></msub><mo>=</mo><mi>E</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>+</mo><mi>P</mi><mi>o</mi><mi>s</mi><mi>i</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>l</mi><mtext> </mtext><mi>E</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi></mrow><annotation encoding="application/x-tex">X_{final\_embedding} = Embedding + Positional\, Embedding</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0503em;vertical-align:-0.367em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">ina</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">mb</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">dd</span><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">mb</span><span class="mord mathnormal">e</span><span class="mord mathnormal">dd</span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">os</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">na</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">mb</span><span class="mord mathnormal">e</span><span class="mord mathnormal">dd</span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span></p><p>但是如何得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 的位置向量呢？</p><p>其中位置编码公式如下图所示：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/位置编码公式.png" style="zoom:33%;" /><p>其中 pos 表示位置、i 表示维度、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">d_{model}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示位置向量的向量维度 、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>i</mi><mtext>、</mtext><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2i、2i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">、</span><span class="mord">2</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 表示的是奇偶数（奇偶维度），上图所示就是偶数位置使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\sin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mop">sin</span></span></span></span> 函数，奇数位置使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>cos</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\cos</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mop">cos</span></span></span></span> 函数。</p><p>有了位置编码，我们再来看看位置编码是如何嵌入单词编码的（其中 512 表示编码维度），<strong>通过把单词的词向量和位置向量进行叠加，这种方式就称作位置嵌入</strong>，如下图所示：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/位置编码和词向量之和.png" style="zoom:50%;" /><p><strong>Position Embedding 本身是一个绝对位置的信息</strong>，但在语言模型中，相对位置也很重要。那么为什么位置嵌入机制有用呢？</p><p>我们不要去关心三角函数公式，可以看看下图公式（3）中的第一行，我们做如下的解释，对于 “我爱吃苹果” 这一句话，有 5 个单词，假设序号分别为 1、2、3、4、5。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/位置嵌入解释.png" style="zoom:50%;" /><p>假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi><mo>=</mo><mn>1</mn><mo>=</mo><mtext>我、</mtext><mi>k</mi><mo>=</mo><mn>2</mn><mo>=</mo><mtext>爱、</mtext><mi>p</mi><mi>o</mi><mi>s</mi><mo>+</mo><mi>k</mi><mo>=</mo><mn>3</mn><mo>=</mo><mtext>吃</mtext></mrow><annotation encoding="application/x-tex">pos=1=我、k=2=爱、pos+k=3=吃</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">os</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord cjk_fallback">我、</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">爱、</span><span class="mord mathnormal">p</span><span class="mord mathnormal">os</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">吃</span></span></span></span>，也就是说 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi><mo>+</mo><mi>k</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">pos+k=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">os</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span> 位置的位置向量的某一维可以通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">pos=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">os</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 位置的位置向量的某一维线性组合加以线性表示，通过该线性表示可以得出 “吃” 的位置编码信息蕴含了相对于前两个字 “我” 的位置编码信息。</p><p>总而言之就是，<strong>某个单词的位置信息是其他单词位置信息的线性组合，这种线性组合就意味着位置向量中蕴含了相对位置信息。</strong></p><h1>十、Transformer</h1><h2 id="10-1-Transformer-的结构">10.1 Transformer 的结构</h2><p>万事俱备，只欠东风，下面我们来讲讲我们的重点之一，Transformer，你可以先记住这一句话：<strong>Transformer 简单点看其实就是 self-attention 模型的叠加</strong>，首先我们来看看 Transformer 的整体框架。</p><p>Transformer 的整体框架如下图所示：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-整体框架.jpg" style="zoom:50%;" /><p>上图所示的整体框架乍一眼一看非常复杂，由于 Transformer 起初是作为翻译模型，因此我们以翻译举例，简化一下上述的整体框架：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-框架简化.jpg" style="zoom:50%;" /><p>从上图可以看出 Transformer 相当于一个黑箱，左边输入 “Je suis etudiant”，右边会得到一个翻译结果 “I am a student”。</p><p>再往细里讲，Transformer 也是一个 Seq2Seq 模型（Encoder-Decoder 框架的模型），左边一个 Encoders 把输入读进去，右边一个 Decoders 得到输出，如下所示：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-ed-框架.jpg" style="zoom:50%;" /><blockquote><p>在这里，我们穿插描述下 Encoder-Decoder 框架的模型是如何进行文本翻译的：</p><ol><li>将序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_1,x_2,\cdots,x_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 作为 Encoders 的输入，得到输出序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>z</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>z</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(z_1,z_2,\cdots,z_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>把 Encoders 的输出序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>z</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>z</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(z_1,z_2,\cdots,z_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 作为 Decoders 的输入，生成一个输出序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>y</mi><mi>m</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(y_1,y_2,\cdots,y_m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。注：<strong>Decoders 每个时刻输出一个结果</strong></li></ol></blockquote><p>第一眼看到上述的 Encodes-Decoders 框架图，随之产生问题就是 Transformer 中 左边 Encoders 的输出是怎么和右边 Decoders 结合的。因为decoders 里面是有N层的，再画张图直观的看就是这样：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-ed-复杂.jpg" style="zoom:50%;" /><p>也就是说，Encoders 的输出，会和<strong>每一层的 Decoder 进行结合</strong>。</p><p>现在我们取其中一层进行详细的展示：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed-细分.jpg" style="zoom:50%;" /><p>通过上述分析，发现我们想要详细了解 Transformer，只要了解 Transformer 中的 Encoder 和 Decoder 单元即可，接下来我们将详细阐述这两个单元。</p><h2 id="10-2-Encoder">10.2 Encoder</h2><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed-细分.jpg" style="zoom:50%;" /><p>有了上述那么多知识的铺垫，我们知道 Eecoders 是 N=6 层，通过上图我们可以看到每层 Encoder 包括两个 sub-layers：</p><ul><li>第一个 sub-layer 是 multi-head self-attention，用来计算输入的 self-attention；</li><li>第二个 sub-layer 是简单的前馈神经网络层 Feed Forward；</li></ul><p>注意：在每个 sub-layer 我们都模拟了残差网络（在下面的数据流示意图中会细讲），每个sub-layer的输出都是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>a</mi><mi>y</mi><mi>e</mi><mi>r</mi><mi>N</mi><mi>o</mi><mi>r</mi><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>S</mi><mi>u</mi><mi>b</mi><mi mathvariant="normal">_</mi><mi>l</mi><mi>a</mi><mi>y</mi><mi>e</mi><mi>r</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">LayerNorm(x+Sub\_layer(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">yer</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">yer</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>u</mi><mi>b</mi><mi mathvariant="normal">_</mi><mi>l</mi><mi>a</mi><mi>y</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">sub\_layer</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">yer</span></span></span></span> 表示的是该层的上一层的输出</p><p>现在我们给出 Encoder 的数据流示意图，一步一步去剖析</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/encoder-详细图.png" style="zoom:50%;" /><ol><li>深绿色的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示 Embedding 层的输出，加上代表 Positional Embedding 的向量之后，得到最后输入 Encoder 中的特征向量，也就是浅绿色向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；</li><li>浅绿色向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示单词 “Thinking” 的特征向量，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 经过 Self-Attention 层，变成浅粉色向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 作为残差结构的直连向量，直接和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 相加，之后进行 Layer Norm 操作，得到粉色向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；<ol><li>残差结构的作用：避免出现梯度消失的情况</li><li>Layer Norm 的作用：为了保证数据特征分布的稳定性，并且可以加速模型的收敛</li></ol></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 经过前馈神经网络（Feed Forward）层，经过残差结构与自身相加，之后经过 LN 层，得到一个输出向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">r_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；<ol><li>该前馈神经网络包括两个线性变换和一个ReLU激活函数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>F</mi><mi>N</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>x</mi><msub><mi>W</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mo stretchy="false">)</mo><msub><mi>W</mi><mn>2</mn></msub><mo>+</mo><mi>b</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">FFN(x) = max(0,xW_1+b_1)W_2+b2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">FFN</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mord">2</span></span></span></span></li></ol></li><li>由于 Transformer 的 Encoders 具有 6 个 Encoder，<strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">r_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 也将会作为下一层 Encoder 的输入，代替 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的角色</strong>，如此循环，直至最后一层 Encoder。</li></ol><p>需要注意的是，<strong>上述的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mtext>、</mtext><mi>z</mi><mtext>、</mtext><mi>r</mi></mrow><annotation encoding="application/x-tex">x、z、r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> 都具有相同的维数</strong>，论文中为 512 维。</p><h2 id="10-3-Decoder">10.3 Decoder</h2><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed-细分.jpg" style="zoom:50%;" /><p>Decoders 也是 N=6 层，通过上图我们可以看到每层 Decoder 包括 3 个 sub-layers：</p><ul><li>第一个 sub-layer 是 Masked multi-head self-attention，也是计算输入的 self-attention；<ul><li>在这里，先不解释为什么要做 Masked，后面在 “Transformer 动态流程展示” 这一小节会解释</li></ul></li><li>第二个 sub-layer 是 Encoder-Decoder Attention 计算，对 Encoder 的输入和 Decoder 的Masked multi-head self-attention 的输出进行 attention 计算；<ul><li>在这里，同样不解释为什么要对 Encoder 和 Decoder 的输出一同做 attention 计算，后面在 “Transformer 动态流程展示” 这一小节会解释</li></ul></li><li>第三个 sub-layer 是前馈神经网络层，与 Encoder 相同。</li></ul><h2 id="10-4-Transformer-输出结果">10.4 Transformer 输出结果</h2><p>以上，就讲完了 Transformer 编码和解码两大模块，那么我们回归最初的问题，将 “机器学习” 翻译成 “machine learing”，解码器的输出是一个浮点型的向量，怎么转化成 “machine learing” 这两个词呢？让我们来看看 Encoders 和 Decoders 交互的过程寻找答案：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed-交互.jpg" style="zoom:50%;" /><p>从上图可以看出，Transformer 最后的工作是让解码器的输出通过线性层 Linear 后接上一个 softmax</p><ul><li>其中线性层是一个简单的全连接神经网络，它将解码器产生的向量 A 投影到一个更高维度的向量 B 上，假设我们模型的词汇表是10000个词，那么向量 B 就有10000个维度，每个维度对应一个惟一的词的得分。</li><li>之后的softmax层将这些分数转换为概率。选择概率最大的维度，并对应地生成与之关联的单词作为此时间步的输出就是最终的输出啦！</li></ul><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-最后输出.jpg" style="zoom:50%;" /><p>假设词汇表维度是 6，那么输出最大概率词汇的过程如下：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-最终输出结果.jpg" style="zoom:50%;" /><h1>十一、Transformer 动态流程展示</h1><p>首先我们来看看拿 Transformer 作翻译时，如何生成翻译结果的：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-动态生成.gif" style="zoom:50%;" /><p>继续进行：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-动态结果-2.gif" style="zoom:50%;" /><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-整体框架.jpg" style="zoom:33%;" /><p>假设上图是训练模型的某一个阶段，我们来结合 Transformer 的完整框架描述下这个动态的流程图：</p><ol><li>输入 “je suis etudiant” 到 Encoders，然后得到一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">K_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">V_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 矩阵；</li><li>输入 “I am a student” 到 Decoders ，首先通过 Masked Multi-head Attention 层得到 “I am a student” 的 attention 值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">Q_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，然后用 attention 值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">Q_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 Encoders 的输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">K_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">V_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 矩阵进行 attention 计算，得到第 1 个输出 “I”；</li><li>输入 “I am a student” 到 Decoders ，首先通过 Masked Multi-head Attention 层得到 “I am a student” 的 attention 值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">Q_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，然后用 attention 值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">Q_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 Encoders 的输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">K_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">V_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 矩阵进行 attention 计算，得到第 2 个输出 “am”；</li><li>……</li></ol><p>现在我们来解释我们之前遗留的两个问题。</p><h2 id="11-1-为什么-Decoder-需要做-Mask">11.1 为什么 Decoder 需要做 Mask</h2><ul><li><p>训练阶段：我们知道 “je suis etudiant” 的翻译结果为 “I am a student”，我们把 “I am a student” 的 Embedding 输入到 Decoders 里面，翻译第一个词 “I” 时</p><ul><li>如果对 “I am a student”  attention 计算不做 mask，“am，a，student” 对 “I” 的翻译将会有一定的贡献</li><li>如果对 “I am a student”  attention 计算做 mask，“am，a，student” 对 “I” 的翻译将没有贡献</li></ul></li><li><p>测试阶段：我们不知道 “我爱中国” 的翻译结果为 “I love China”，我们只能随机初始化一个 Embedding 输入到 Decoders 里面，翻译第一个词 “I” 时：</p><ul><li>无论是否做 mask，“love，China” 对 “I” 的翻译都不会产生贡献</li><li>但是翻译了第一个词 “I” 后，随机初始化的 Embedding 有了 “I” 的 Embedding，也就是说在翻译第二词 “love” 的时候，“I” 的 Embedding 将有一定的贡献，但是 “China” 对 “love” 的翻译毫无贡献，随之翻译的进行，<strong>已经翻译的结果将会对下一个要翻译的词都会有一定的贡献，这就和做了 mask 的训练阶段做到了一种匹配</strong></li></ul></li></ul><p>总结下就是：Decoder 做 Mask，是为了让训练阶段和测试阶段行为一致，不会出现间隙，避免过拟合</p><h2 id="11-2-为什么-Encoder-给予-Decoders-的是-K、V-矩阵">11.2 为什么 Encoder 给予 Decoders 的是 K、V 矩阵</h2><p>我们在讲解 Attention 机制中曾提到，Query 的目的是借助它从一堆信息中找到重要的信息。</p><p>现在 Encoder 提供了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>e</mi></msub><mtext>、</mtext><msub><mi>V</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">K_e、V_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 矩阵，Decoder 提供了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">Q_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 矩阵，通过  “我爱中国” 翻译为 “I love China” 这句话详细解释下。</p><p>当我们翻译 “I” 的时候，由于 Decoder 提供了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">Q_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 矩阵，通过与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>e</mi></msub><mtext>、</mtext><msub><mi>V</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">K_e、V_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 矩阵的计算，它可以在 “我爱中国” 这四个字中找到对 “I” 翻译最有用的单词是哪几个，并以此为依据翻译出 “I” 这个单词，这就很好的体现了注意力机制想要达到的目的，把焦点放在对自己而言更为重要的信息上。</p><ul><li>其实上述说的就是 Attention 里的 soft attention机制，解决了曾经的 Encoder-Decoder 框架的一个问题，在这里不多做叙述，有兴趣的可以参考网上的一些资料。<ul><li>早期的 Encoder-Decoder 框架中的 Encoder 通过 LSTM 提取出源句（Source） “我爱中国” 的特征信息 C，然后 Decoder 做翻译的时候，目标句（Target）“I love China” 中的任何一个单词的翻译都来源于相同特征信息 C，这种做法是极其不合理的，例如翻译 “I” 时应该着眼于 “我”，翻译 “China” 应该着眼于 “中国”，而早期的这种做法并没有体现出，然而 Transformer 却通过 Attention 的做法解决了这个问题。</li></ul></li></ul><h1>十二、GPT 模型</h1><h2 id="12-1-GPT-模型的预训练">12.1 GPT 模型的预训练</h2><p>在讲解 ELMo 的时候，我们说到 ELMo 这一类预训练的方法被称为 “Feature-based Pre-Training”。并且如果把 ELMo 这种预训练方法和图像领域的预训练方法对比，发现两者模式看上去还是有很大差异的。</p><p>除了以 ELMo 为代表的这种基于特征融合的预训练方法外，NLP 里还有一种典型做法，这种做法和图像领域的方式就是看上去一致的了，一般将这种方法称为 “基于Fine-tuning的模式”，而 GPT 就是这一模式的典型开创者，下面先让我们看看 GPT 的网络结构。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/gpt-模型.jpg" style="zoom:50%;" /><p>GPT 是 “Generative Pre-Training” 的简称，从名字看其含义是指的生成式的预训练。</p><p>GPT也采用两阶段过程：</p><ol><li>第一个阶段：利用语言模型进行预训练；</li><li>第二个阶段：通过 Fine-tuning 的模式解决下游任务。</li></ol><p>上图展示了 GPT 的预训练过程，其实和 ELMo 是类似的，主要不同在于两点：</p><ol><li>首先，特征抽取器用的不是 RNN，而是用的 Transformer，它的特征抽取能力要强于RNN，这个选择很明显是很明智的；</li><li>其次，<ol><li>GPT 的预训练虽然仍然是以语言模型作为目标任务，但是采用的是单向的语言模型，所谓 “单向” 的含义是指：语言模型训练的任务目标是根据 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 单词的上下文去正确预测单词 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 之前的单词序列Context-before称为上文，之后的单词序列Context-after称为下文。</li><li>ELMo 在做语言模型预训练的时候，预测单词 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 同时使用了上文和下文，而 GPT 则只采用 Context-before 这个单词的上文来进行预测，而抛开了下文。</li><li>GPT 这个选择现在看不是个太好的选择，原因很简单，它没有把单词的下文融合进来，这限制了其在更多应用场景的效果，比如阅读理解这种任务，在做任务的时候是可以允许同时看到上文和下文一起做决策的。如果预训练时候不把单词的下文嵌入到 Word Embedding 中，是很吃亏的，白白丢掉了很多信息。</li></ol></li></ol><h2 id="12-2-GPT-模型的-Fine-tuning">12.2 GPT 模型的 Fine-tuning</h2><p>上面讲的是 GPT 如何进行第一阶段的预训练，那么假设预训练好了网络模型，后面下游任务怎么用？它有自己的个性，和 ELMO 的方式大有不同。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/gpt-fine.jpg" style="zoom:50%;" /><p>上图展示了 GPT 在第二阶段如何使用：</p><ol><li><p>首先，对于不同的下游任务来说，本来你可以任意设计自己的网络结构，现在不行了，你要向 GPT 的网络结构看齐，把任务的网络结构改造成和 GPT 一样的网络结构。</p></li><li><p>然后，在做下游任务的时候，利用第一步预训练好的参数初始化 GPT 的网络结构，这样通过预训练学到的语言学知识就被引入到你手头的任务里来了。</p></li><li><p>再次，你可以用手头的任务去训练这个网络，对网络参数进行 Fine-tuning，使得这个网络更适合解决手头的问题。就是这样。</p></li></ol><p>这有没有让你想起最开始提到的图像领域如何做预训练的过程，对，这跟那个预训练的模式是一模一样的。</p><p>对于 NLP 各种花样的不同任务，怎么改造才能靠近 GPT 的网络结构呢？由于 GPT 对下游任务的改造过程和 BERT 对下游任务的改造极其类似，并且我们主要目的是为了讲解 BERT，所以这个问题将会在 BERT 那里得到回答。</p><h1>十三、BERT 模型</h1><h2 id="13-1-BERT：公认的里程碑">13.1 BERT：公认的里程碑</h2><p>BERT 模型可以作为公认的里程碑式的模型，但是它最大的优点不是创新，而是集大成者，并且这个集大成者有了各项突破，下面让我们看看 BERT 是怎么集大成者的。</p><ul><li>BERT 的意义在于：从大量无标记数据集中训练得到的深度模型，可以显著提高各项自然语言处理任务的准确率。</li><li>近年来优秀预训练语言模型的集大成者：参考了 ELMO 模型的双向编码思想、借鉴了 GPT 用 Transformer 作为特征提取器的思路、采用了 word2vec 所使用的 CBOW 方法</li><li>BERT 和 GPT 之间的区别：<ul><li>GPT：<strong>GPT 使用 Transformer Decoder 作为特征提取器、具有良好的文本生成能力</strong>，然而当前词的语义只能由其前序词决定，并且在语义理解上不足</li><li>BERT：使用了 Transformer Encoder 作为特征提取器，并使用了与其配套的掩码训练方法。<strong>虽然使用双向编码让 BERT 不再具有文本生成能力，但是 BERT 的语义信息提取能力更强</strong></li></ul></li><li>单向编码和双向编码的差异，以该句话举例 “今天天气很{}，我们不得不取消户外运动”，分别从单向编码和双向编码的角度去考虑 {} 中应该填什么词：<ul><li>单向编码：单向编码只会考虑 “今天天气很”，以人类的经验，大概率会从 “好”、“不错”、“差”、“糟糕” 这几个词中选择，这些词可以被划为截然不同的两类</li><li>双向编码：<strong>双向编码会同时考虑上下文的信息</strong>，即除了会考虑 “今天天气很” 这五个字，还会考虑 “我们不得不取消户外运动” 来帮助模型判断，则大概率会从 “差”、“糟糕” 这一类词中选择</li></ul></li></ul><h2 id="13-2-BERT-的结构：强大的特征提取能力">13.2 BERT 的结构：强大的特征提取能力</h2><ul><li><p>如下图所示，我们来看看 ELMo、GPT 和 BERT 三者的区别</p><ul><li><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/BERT-GPT-比较.png" style="zoom:50%;" /></li><li>ELMo 使用自左向右编码和自右向左编码的两个 LSTM 网络，分别以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(w_i|w_1,\cdots,w_{i-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(w_i|w_{i+1},\cdots,w_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 为目标函数独立训练，<strong>将训练得到的特征向量以拼接的形式实现双向编码，本质上还是单向编码，只不过是两个方向上的单向编码的拼接而成的双向编码</strong>。</li><li>GPT 使用 Transformer Decoder 作为 Transformer Block，以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(w_i|w_1,\cdots,w_{i-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 为目标函数进行训练，<strong>用 Transformer Block 取代 LSTM 作为特征提取器，实现了单向编码，是一个标准的预训练语言模型，即使用 Fine-Tuning 模式解决下游任务。</strong></li><li>BERT 也是一个标准的预训练语言模型，<strong>它以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(w_i|w_1,\cdots,w_{i-1},w_{i+1},\cdots,w_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 为目标函数进行训练，BERT 使用的编码器属于双向编码器</strong>。<ul><li>BERT 和 ELMo 的区别在于使用 Transformer Block 作为特征提取器，加强了语义特征提取的能力；</li><li>BERT 和 GPT 的区别在于使用 Transformer Encoder 作为 Transformer Block，并且将 GPT 的单向编码改成双向编码，也就是说 BERT 舍弃了文本生成能力，换来了更强的语义理解能力。</li></ul></li></ul></li></ul><p>BERT 的模型结构如下图所示：</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/bert-模型结构.jpg" style="zoom:51%;" /><p>从上图可以发现，BERT 的模型结构其实就是 Transformer Encoder 模块的堆叠。在模型参数选择上，论文给出了两套大小不一致的模型。</p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mi>E</mi><mi>R</mi><msub><mi>T</mi><mrow><mi>B</mi><mi>A</mi><mi>S</mi><mi>E</mi></mrow></msub></mrow><annotation encoding="application/x-tex">BERT_{BASE}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">BER</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">SE</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ：L = 12，H = 768，A = 12，总参数量为 1.1 亿</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mi>E</mi><mi>R</mi><msub><mi>T</mi><mrow><mi>L</mi><mi>A</mi><mi>R</mi><mi>G</mi><mi>E</mi></mrow></msub></mrow><annotation encoding="application/x-tex">BERT_{LARGE}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">BER</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">RGE</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：L = 24，H = 1024，A = 16，总参数量为 3.4 亿</p></blockquote><p>其中 L 代表 Transformer Block 的层数；H 代表特征向量的维数（此处默认 Feed Forward 层中的中间隐层的维数为 4H）；A 表示 Self-Attention 的头数，使用这三个参数基本可以定义 BERT的量级。</p><p>BERT 参数量级的计算公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>词向量参数</mtext><mo>+</mo><mn>12</mn><mo>∗</mo><mtext>（</mtext><mi>M</mi><mi>u</mi><mi>l</mi><mi>t</mi><mi>i</mi><mo>−</mo><mi>H</mi><mi>e</mi><mi>a</mi><mi>d</mi><mi>s</mi><mtext>参数</mtext><mo>+</mo><mtext>全连接层参数</mtext><mo>+</mo><mi>l</mi><mi>a</mi><mi>y</mi><mi>e</mi><mi>r</mi><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi><mtext>参数）</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mtext>（</mtext><mn>30522</mn><mo>+</mo><mn>512</mn><mo>+</mo><mn>2</mn><mtext>）</mtext><mo>∗</mo><mn>768</mn><mo>+</mo><mn>768</mn><mo>∗</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>+</mo><mn>12</mn><mo>∗</mo><mtext>（</mtext><mn>768</mn><mo>∗</mo><mn>768</mn><mi mathvariant="normal">/</mi><mn>12</mn><mo>∗</mo><mn>3</mn><mo>∗</mo><mn>12</mn><mo>+</mo><mn>768</mn><mo>∗</mo><mn>768</mn><mo>+</mo><mn>768</mn><mo>∗</mo><mn>3072</mn><mo>∗</mo><mn>2</mn><mo>+</mo><mn>768</mn><mo>∗</mo><mn>2</mn><mo>∗</mo><mn>2</mn><mtext>）</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>108808704.0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≈</mo><mn>110</mn><mi>M</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*}&amp; 词向量参数+ 12 * （Multi-Heads参数 + 全连接层参数 + layernorm参数）\\ &amp; = （30522+512 + 2）* 768 + 768 * 2 \\&amp; + 12 * （768 * 768 / 12 * 3 * 12 + 768 * 768 + 768 * 3072 * 2 + 768 * 2 * 2） \\ &amp; = 108808704.0 \\ &amp; \approx 110M\end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.5em;vertical-align:-3.5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4em;"><span style="top:-6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4em;"><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord cjk_fallback">词向量参数</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">12</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">u</span><span class="mord mathnormal">lt</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">He</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span><span class="mord cjk_fallback">参数</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord cjk_fallback">全连接层参数</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">yer</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal">m</span><span class="mord cjk_fallback">参数）</span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord cjk_fallback">（</span><span class="mord">30522</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">512</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">768</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">768</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">12</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord cjk_fallback">（</span><span class="mord">768</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">768/12</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">12</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">768</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">768</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">768</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">3072</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">768</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord cjk_fallback">）</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">108808704.0</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">110</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>训练过程也是很花费计算资源和时间的，<strong>总之表示膜拜，普通人即便有 idea 没有算力也只能跪着。</strong></p><h2 id="13-3-BERT-之无监督训练">13.3 BERT 之无监督训练</h2><p>和 GPT 一样，BERT 也采用二段式训练方法：</p><ol><li>第一阶段：使用易获取的大规模无标签余料，来训练基础语言模型；</li><li>第二阶段：根据指定任务的少量带标签训练数据进行微调训练。</li></ol><p>不同于 GPT 等标准语言模型使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(w_i|w_1,\cdots,w_{i-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 为目标函数进行训练，能看到全局信息的 BERT 使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(w_i|w_1,\cdots,w_{i-1},w_{i+1},\cdots,w_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 为目标函数进行训练。</p><p>并且 BERT 用语言掩码模型（MLM）方法训练词的语义理解能力；用下句预测（NSP）方法训练句子之间的理解能力，从而更好地支持下游任务。</p><h2 id="13-4-BERT之语言掩码模型（MLM）">13.4 BERT之语言掩码模型（MLM）</h2><p>BERT 作者认为，<strong>使用自左向右编码和自右向左编码的单向编码器拼接而成的双向编码器，在性能、参数规模和效率等方面，都不如直接使用深度双向编码器强大</strong>，这也是为什么 BERT 使用 Transformer Encoder 作为特征提取器，而不使用自左向右编码和自右向左编码的两个 Transformer Decoder作为特征提取器的原因。</p><p>由于无法使用标准语言模型的训练模式，<strong>BERT 借鉴完形填空任务和 CBOW 的思想</strong>，使用语言掩码模型（MLM ）方法训练模型。</p><p>MLM 方法也就是随机去掉句子中的部分 token（单词），然后模型来预测被去掉的 token 是什么。<strong>这样实际上已经不是传统的神经网络语言模型(类似于生成模型)了，而是单纯作为分类问题</strong>，根据这个时刻的 hidden state 来预测这个时刻的 token 应该是什么，而不是预测下一个时刻的词的概率分布了。</p><p>随机去掉的 token 被称作掩码词，在训练中，掩码词将以 15% 的概率被替换成 [MASK]，也就是说随机 mask 语料中 15% 的 token，这个操作则称为掩码操作。注意：<strong>在CBOW 模型中，每个词都会被预测一遍。</strong></p><p>但是这样设计 MLM 的训练方法会引入弊端：<strong>在模型微调训练阶段或模型推理（测试）阶段，输入的文本中将没有 [MASK]，进而导致产生由训练和预测数据偏差导致的性能损失。</strong></p><p>考虑到上述的弊端，BERT 并没有总用 [MASK] 替换掩码词，而是按照一定比例选取替换词。在选择 15% 的词作为掩码词后这些掩码词有三类替换选项：</p><ul><li>80% 练样本中：将选中的词用 [MASK] 来代替，例如：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“地球是[MASK]八大行星之一”</span><br></pre></td></tr></table></figure><ul><li>10% 的训练样本中：选中的词不发生变化，<strong>该做法是为了缓解训练文本和预测文本的偏差带来的性能损失</strong>，例如：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“地球是太阳系八大行星之一”</span><br></pre></td></tr></table></figure><ul><li>10% 的训练样本中：将选中的词用任意的词来进行代替，<strong>该做法是为了让 BERT 学会根据上下文信息自动纠错</strong>，例如：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“地球是苹果八大行星之一”</span><br></pre></td></tr></table></figure><p>作者在论文中提到这样做的好处是，编码器不知道哪些词需要预测的，哪些词是错误的，因此<strong>被迫需要学习每一个 token 的表示向量</strong>，另外作者也<strong>表示双向编码器比单项编码器训练要慢</strong>，进而导致BERT 的训练效率低了很多，但是实验也证明 MLM 训练方法可以让 BERT 获得超出同期所有预训练语言模型的语义理解能力，牺牲训练效率是值得的。</p><h2 id="13-5-BERT-之下句预测（NSP）">13.5 BERT 之下句预测（NSP）</h2><p>在很多自然语言处理的下游任务中，如问答和自然语言推断，都基于两个句子做逻辑推理，而语言模型并不具备直接捕获句子之间的语义联系的能力，或者可以说成<strong>单词预测粒度的训练到不了句子关系这个层级</strong>，为了<strong>学会捕捉句子之间的语义联系</strong>，BERT 采用了下句预测（NSP ）作为无监督预训练的一部分。</p><p>NSP 的具体做法是，BERT 输入的语句将由两个句子构成，其中，50% 的概率将语义连贯的两个连续句子作为训练文本（<strong>连续句对一般选自篇章级别的语料，以此确保前后语句的语义强相关</strong>），另外 50% 的概率将完全随机抽取两个句子作为训练文本。</p><blockquote><p>连续句对：[CLS]今天天气很糟糕[SEP]下午的体育课取消了[SEP]</p><p>随机句对：[CLS]今天天气很糟糕[SEP]鱼快被烤焦啦[SEP]</p></blockquote><p>其中 [SEP]  标签表示分隔符。 [CLS] 表示标签用于类别预测，结果为 1，表示输入为连续句对；结果为 0，表示输入为随机句对。</p><p>通过训练 [CLS] 编码后的输出标签，<strong>BERT 可以学会捕捉两个输入句对的文本语义</strong>，在连续句对的预测任务中，BERT 的正确率可以达到 97%-98%。</p><h2 id="13-6-BERT-之输入表示">13.6 BERT 之输入表示</h2><p>BERT 在预训练阶段使用了前文所述的两种训练方法，<strong>在真实训练中一般是两种方法混合使用</strong>。</p><p>由于 BERT 通过 Transformer 模型堆叠而成，所以 BERT 的输入需要两套 Embedding 操作：</p><ol><li>一套为 One-hot 词表映射编码（对应下图的 Token Embeddings）；</li><li>另一套为位置编码（对应下图的 Position Embeddings），<strong>不同于 Transformer 的位置编码用三角函数表示，BERT 的位置编码将在预训练过程中训练得到（训练思想类似于Word Embedding 的 Q 矩阵）</strong></li><li>由于在 MLM 的训练过程中，存在单句输入和双句输入的情况，因此 BERT 还需要一套区分输入语句的分割编码（对应下图的 Segment Embeddings），BERT 的分割编码也将在预训练过程中训练得到</li></ol><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/BERT-输入.jpg" style="zoom:51%;" /><p>对于分割编码，Segment Embeddings 层只有两种向量表示。前一个向量是把 0 赋给第一个句子中的各个 token，后一个向量是把 1 赋给第二个句子中的各个 token ；如果输入仅仅只有一个句子，那么它的 segment embedding 就是全 0，下面我们简单举个例子描述下：</p><blockquote><p>[CLS]I like dogs[SEP]I like cats[SEP] 对应编码 0 0 0 0 0 1 1 1 1</p><p>[SEP]I Iike dogs and cats[SEP] 对应编码 0 0 0 0 0 0 0</p></blockquote><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/segment-embeddings.jpg" style="zoom:50%;" /><h1>十四、BERT 下游任务改造</h1><p>BERT 根据自然语言处理下游任务的输入和输出的形式，将微调训练支持的任务分为四类，分别是句对分类、单句分类、文本问答和单句标注，接下来我们将简要的介绍下 BERT 如何通过微调训练适应这四类任务的要求。</p><h2 id="14-1-句对分类">14.1 句对分类</h2><p>给定两个句子，判断它们的关系，称为句对分类，例如判断句对是否相似、判断后者是否为前者的答案。</p><p>针对句对分类任务，BERT 在预训练过程中就使用了 NSP 训练方法获得了直接捕获句对语义关系的能力。</p><p><strong>如下图所示，句对用 [SEP] 分隔符拼接成文本序列，在句首加入标签 [CLS]，将句首标签所对应的输出值作为分类标签，计算预测分类标签与真实分类标签的交叉熵，将其作为优化目标，在任务数据上进行微调训练。</strong></p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/句对分类.jpg" style="zoom:80%;" /><p>针对二分类任务，BERT 不需要对输入数据和输出数据的结构做任何改动，直接使用与 NSP 训练方法一样的输入和输出结构就行。</p><p>针对多分类任务，需要在句首标签 [CLS] 的输出特征向量后接一个全连接层和 Softmax 层，保证输出维数与类别数目一致，最后通过 arg max 操作（取最大值时对应的索引序号）得到相对应的类别结果。</p><p>下面给出句对分相似性任务的实例：</p><blockquote><p>任务：判断句子 “我很喜欢你” 和句子 “我很中意你” 是否相似</p><p>输入改写：“[CLS]我很喜欢你[SEP]我很中意你”</p><p>取 “[CLS]” 标签对应输出：[0.02, 0.98]</p><p>通过 arg max 操作得到相似类别为 1（类别索引从 0 开始），即两个句子相似</p></blockquote><h2 id="14-2-单句分类">14.2 单句分类</h2><p>给定一个句子，判断该句子的类别，统称为单句分类，例如判断情感类别、判断是否为语义连贯的句子。</p><p>针对单句二分类任务，也无须对 BERT 的输入数据和输出数据的结构做任何改动。</p><p><strong>如下图所示，单句分类在句首加入标签 [CLS]，将句首标签所对应的输出值作为分类标签，计算预测分类标签与真实分类标签的交叉熵，将其作为优化目标，在任务数据上进行微调训练。</strong></p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/单句分类.jpg" style="zoom:80%;" /><p>同样，针对多分类任务，需要在句首标签 [CLS] 的输出特征向量后接一个全连接层和 Softmax 层，保证输出维数与类别数目一致，最后通过 argmax 操作得到相对应的类别结果。</p><p>下面给出语义连贯性判断任务的实例：</p><blockquote><p>任务：判断句子“海大球星饭茶吃” 是否为一句话</p><p>输入改写：“[CLS]海大球星饭茶吃”</p><p>取 “[CLS]” 标签对应输出：[0.99, 0.01]</p><p>通过 arg max 操作得到相似类别为 0，即这个句子不是一个语义连贯的句子</p></blockquote><h2 id="14-3-文本问答">14.3 文本问答</h2><p>给定一个问句和一个蕴含答案的句子，找出答案在后这种的位置，称为文本问答，例如给定一个问题（句子 A），在给定的段落（句子 B）中标注答案的其实位置和终止位置。</p><p><strong>文本问答任何和前面讲的其他任务有较大的差别，无论是在优化目标上，还是在输入数据和输出数据的形式上，都需要做一些特殊的处理。</strong></p><p>为了标注答案的起始位置和终止位置，BERT 引入两个辅助向量 s（start，判断答案的起始位置） 和 e（end，判断答案的终止位置）。</p><p><strong>如下图所示，BERT 判断句子 B 中答案位置的做法是，将句子 B 中的每一个次得到的最终特征向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>T</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">T_i&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0106em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4413em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span> 经过全连接层（利用全连接层将词的抽象语义特征转化为任务指向的特征）后，分别与向量 s 和 e 求内积，对所有内积分别进行 softmax 操作，即可得到词 Tok m（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mi>M</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">m\in [1,M]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">]</span></span></span></span>）作为答案其实位置和终止位置的概率。最后，去概率最大的片段作为最终的答案</strong>。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/文本问答.jpg" style="zoom:80%;" /><p>文本回答任务的微调训练使用了两个技巧：</p><ol><li>用全连接层把 BERT 提取后的深层特征向量转化为用于判断答案位置的特征向量</li><li>引入辅助向量 s 和 e 作为答案其实位置和终止位置的基准向量，明确优化目标的方向和度量方法</li></ol><p>下面给出文本问答任务的实例：</p><blockquote><p>任务：给定问句 “今天的最高温度是多少”，在文本 “天气预报显示今天最高温度 37 摄氏度” 中标注答案的起始位置和终止位置</p><p>输入改写：“[CLS]今天的最高温度是多少[SEP]天气预报显示今天最高温度 37 摄氏度”</p><p>BERT Softmax 结果：</p><table><thead><tr><th style="text-align:center">篇章文本</th><th style="text-align:center">天气</th><th style="text-align:center">预报</th><th style="text-align:center">显示</th><th style="text-align:center">今天</th><th style="text-align:center">最高温</th><th style="text-align:center">37</th><th style="text-align:center">摄氏度</th></tr></thead><tbody><tr><td style="text-align:center">起始位置概率</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.04</td><td style="text-align:center">0.10</td><td style="text-align:center">0.80</td><td style="text-align:center">0.03</td></tr><tr><td style="text-align:center">终止位置概率</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.03</td><td style="text-align:center">0.04</td><td style="text-align:center">0.10</td><td style="text-align:center">0.80</td></tr></tbody></table><p>对 Softmax 的结果取 arg max，得到答案的起始位置为 6，终止位置为 7，即答案为 “37 摄氏度”</p></blockquote><h2 id="14-4-单句标注">14.4 单句标注</h2><p>给定一个句子，标注每个次的标签，称为单句标注。例如给定一个句子，标注句子中的人名、地名和机构名。</p><p>单句标注任务和 BERT 预训练任务具有较大差异，但与文本问答任务较为相似。</p><p><strong>如下图所示，在进行单句标注任务时，需要在每个词的最终语义特征向量之后添加全连接层，将语义特征转化为序列标注任务所需的特征，单句标注任务需要对每个词都做标注，因此不需要引入辅助向量，直接对经过全连接层后的结果做 Softmax 操作，即可得到各类标签的概率分布。</strong></p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/单句标注.jpg" style="zoom:50%;" /><p>由于 BERT 需要对输入文本进行分词操作，独立词将会被分成若干子词，因此 BERT 预测的结果将会是 5 类（细分为 13 小类）：</p><ul><li>O（非人名地名机构名，O 表示 Other）</li><li>B-PER/LOC/ORG（人名/地名/机构名初始单词，B 表示 Begin）</li><li>I-PER/LOC/ORG（人名/地名/机构名中间单词，I 表示 Intermediate）</li><li>E-PER/LOC/ORG（人名/地名/机构名终止单词，E 表示 End）</li><li>S-PER/LOC/ORG（人名/地名/机构名独立单词，S 表示 Single）</li></ul><p>将 5 大类的首字母结合，可得 IOBES，这是序列标注最常用的标注方法。</p><p>下面给出命名实体识别（NER）任务的示例：</p><blockquote><p>任务：给定句子 “爱因斯坦在柏林发表演讲”，根据 IOBES 标注 NER 结果</p><p>输入改写：“[CLS]爱 因 斯坦 在 柏林 发表 演讲”</p><p>BERT Softmax 结果：</p><table><thead><tr><th style="text-align:center">BOBES</th><th style="text-align:center">爱</th><th style="text-align:center">因</th><th style="text-align:center">斯坦</th><th style="text-align:center">在</th><th style="text-align:center">柏林</th><th style="text-align:center">发表</th><th style="text-align:center">演讲</th></tr></thead><tbody><tr><td style="text-align:center">O</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.90</td><td style="text-align:center">0.01</td><td style="text-align:center">0.90</td><td style="text-align:center">0.90</td></tr><tr><td style="text-align:center">B-PER</td><td style="text-align:center">0.90</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td></tr><tr><td style="text-align:center">I-PER</td><td style="text-align:center">0.01</td><td style="text-align:center">0.90</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td></tr><tr><td style="text-align:center">E-PER</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.90</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td></tr><tr><td style="text-align:center">S-LOC</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td></tr></tbody></table><p>对 Softmax 的结果取 arg max，得到最终地 NER 标注结果为：“爱因斯坦” 是人名；“柏林” 是地名</p></blockquote><h2 id="14-5-BERT效果展示">14.5 BERT效果展示</h2><p>无论如何，从上述讲解可以看出，NLP 四大类任务都可以比较方便地改造成 Bert 能够接受的方式，总之不同类型的任务需要对模型做不同的修改，但是修改都是非常简单的，最多加一层神经网络即可。这其实是 Bert 的非常大的优点，这意味着它几乎可以做任何NLP的下游任务，具备普适性，这是很强的。</p><p>但是讲了这么多，**一个新模型好不好，效果才是王道。**那么Bert 采用这种两阶段方式解决各种 NLP 任务效果如何？</p><p>在 11 个各种类型的 NLP 任务中达到目前最好的效果，某些任务性能有极大的提升。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/bert-效果.jpg" style="zoom:50%;" /><h1>十五、预训练语言模型总结</h1><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/总结.jpg" style="zoom:50%;" /><p>到这里我们可以再梳理下几个模型之间的演进关系。</p><p>从上图可见，Bert 其实和 ELMO 及 GPT 存在千丝万缕的关系，比如如果我们把 GPT 预训练阶段换成双向语言模型，那么就得到了 Bert；而如果我们把 ELMO 的特征抽取器换成 Transformer，那么我们也会得到Bert。</p><p>所以你可以看出：Bert最关键两点，一点是特征抽取器采用 Transformer；第二点是预训练的时候采用双向语言模型。</p><p>那么新问题来了：对于 Transformer 来说，怎么才能在这个结构上做双向语言模型任务呢？乍一看上去好像不太好搞。我觉得吧，其实有一种很直观的思路，怎么办？看看 ELMO 的网络结构图，只需要把两个 LSTM 替换成两个 Transformer，一个负责正向，一个负责反向特征提取，其实应该就可以。</p><p>当然这是我自己的改造，Bert 没这么做。那么 Bert 是怎么做的呢？我们前面不是提过 Word2Vec 吗？我前面肯定不是漫无目的地提到它，提它是为了在这里引出那个 CBOW 训练方法，所谓写作时候埋伏笔的 “草蛇灰线，伏脉千里”，大概就是这个意思吧？</p><p>前面提到了 CBOW 方法，它的核心思想是：在做语言模型任务的时候，我把要预测的单词抠掉，然后根据它的上文 Context-Before 和下文 Context-afte r去预测单词。</p><p>其实 Bert 怎么做的？Bert 就是这么做的。从这里可以看到方法间的继承关系。当然 Bert 作者没提 Word2Vec 及 CBOW 方法，这是我的判断，Bert 作者说是受到完形填空任务的启发，这也很可能，但是我觉得他们要是没想到过 CBOW 估计是不太可能的。</p><p>从这里可以看出，在文章开始我说过 Bert 在模型方面其实没有太大创新，更像一个最近几年 NLP 重要技术的集大成者，原因在于此，当然我不确定你怎么看，是否认同这种看法，而且我也不关心你怎么看。其实 Bert 本身的效果好和普适性强才是最大的亮点。</p><p><strong>最后，我讲讲我对Bert的评价和看法</strong>，我觉得 Bert 是 NLP 里里程碑式的工作，对于后面 NLP 的研究和工业应用会产生长久的影响，这点毫无疑问。但是从上文介绍也可以看出，从模型或者方法角度看，Bert 借鉴了 ELMO，GPT 及 CBOW，主要提出了 Masked 语言模型及 Next Sentence Prediction，但是这里 Next Sentence Prediction 基本不影响大局，而 Masked LM 明显借鉴了 CBOW 的思想。所以说 Bert 的模型没什么大的创新，更像最近几年 NLP 重要进展的集大成者，这点如果你看懂了上文估计也没有太大异议，如果你有大的异议，杠精这个大帽子我随时准备戴给你。</p><p>如果归纳一下这些进展就是：首先是两阶段模型，第一阶段双向语言模型预训练，这里注意要用双向而不是单向，第二阶段采用具体任务 Fine-tuning 或者做特征集成；第二是特征抽取要用Transformer 作为特征提取器而不是 RNN 或者 CNN；第三，双向语言模型可以采取 CBOW 的方法去做（当然我觉得这个是个细节问题，不算太关键，前两个因素比较关键）。Bert 最大的亮点在于效果好及普适性强，几乎所有 NLP 任务都可以套用 Bert 这种两阶段解决思路，而且效果应该会有明显提升。可以预见的是，未来一段时间在 NLP 应用领域，Transformer 将占据主导地位，而且这种两阶段预训练方法也会主导各种应用。</p><p>另外，我们应该弄清楚预训练这个过程本质上是在做什么事情，本质上预训练是通过设计好一个网络结构来做语言模型任务，然后把大量甚至是无穷尽的无标注的自然语言文本利用起来，预训练任务把大量语言学知识抽取出来编码到网络结构中，当手头任务带有标注信息的数据有限时，这些先验的语言学特征当然会对手头任务有极大的特征补充作用，因为当数据有限的时候，很多语言学现象是覆盖不到的，泛化能力就弱，集成尽量通用的语言学知识自然会加强模型的泛化能力。如何引入先验的语言学知识其实一直是 NLP 尤其是深度学习场景下的 NLP 的主要目标之一，不过一直没有太好的解决办法，而 ELMO/GPT/Bert 的这种两阶段模式看起来无疑是解决这个问题自然又简洁的方法，这也是这些方法的主要价值所在。</p><p>对于当前 NLP 的发展方向，我个人觉得有两点非常重要：</p><ol><li>一个是需要更强的特征抽取器，目前看 Transformer 会逐渐担当大任，但是肯定还是不够强的，需要发展更强的特征抽取器；</li><li>第二个就是如何优雅地引入大量无监督数据中包含的语言学知识，注意我这里强调地是优雅，而不是引入，此前相当多的工作试图做各种语言学知识的嫁接或者引入，但是很多方法看着让人牙疼，就是我说的不优雅。</li></ol><p>目前看预训练这种两阶段方法还是很有效的，也非常简洁，当然后面肯定还会有更好的模型出现。</p><p>完了，这就是预训练语言模型的前世今生。</p><p>由于个人刚入门 NLP 方向，就不妄自总结，上述总结全部来自知乎文章：<a href='https://zhuanlan.zhihu.com/p/49271699' target='_blank'>从Word Embedding到Bert模型—自然语言处理中的预训练技术发展史-<a href="https://www.zhihu.com/people/zhang-jun-lin-76">张俊林</a></a></p><h1>十六、参考资料</h1><p>我只是知识的搬运工，想详细了解各个知识点的读者可以自行选择参考下列资料。</p><blockquote><ul><li><p>参考书籍：</p><ul><li><p>《预训练语言模型》- 卲浩、刘一烽</p></li><li><p>《基于 BERT 模型的自然语言处理实战》- 李金洪</p></li></ul></li><li><p>参考论文：</p><ul><li><a href='https://arxiv.org/abs/1706.03762' target='_blank'>Attention Is All You Need</a></li><li><a href='https://tooob.com/api/objs/read/noteid/28717995/' target='_blank'>BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding</a></li></ul></li><li><p>参考博客：</p><ul><li><a href='https://zhuanlan.zhihu.com/p/37601161' target='_blank'>深度学习中的注意力模型（2017版）</a></li><li><a href='https://mp.weixin.qq.com/s/RLxWevVWHXgX-UcoxDS70w' target='_blank'>细讲 | Attention Is All You Need</a></li><li><a href='https://zhuanlan.zhihu.com/p/49271699' target='_blank'>从Word Embedding到Bert模型—自然语言处理中的预训练技术发展史</a></li><li><a href='https://www.cnblogs.com/nickchen121/p/15071844.html' target='_blank'>Attention和Transformer详解</a></li><li><a href='https://zhuanlan.zhihu.com/p/44121378' target='_blank'>【NLP】Transformer模型原理详解</a></li><li><a href='https://zhuanlan.zhihu.com/p/136223550' target='_blank'>LSTM如何解决RNN带来的梯度消失问题</a></li><li><a href='http://jalammar.github.io/illustrated-transformer/' target='_blank'>The Illustrated Transformer</a></li></ul></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>预训练语言模型的下游任务改造简介（如何使用词向量）</title>
      <link href="/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/07%20%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%8B%E6%B8%B8%E4%BB%BB%E5%8A%A1%E6%94%B9%E9%80%A0%E7%AE%80%E4%BB%8B%EF%BC%88%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%AF%8D%E5%90%91%E9%87%8F%EF%BC%89/"/>
      <url>/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/07%20%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%8B%E6%B8%B8%E4%BB%BB%E5%8A%A1%E6%94%B9%E9%80%A0%E7%AE%80%E4%BB%8B%EF%BC%88%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%AF%8D%E5%90%91%E9%87%8F%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>Word2Vec --》 是一个神经网络语言模型，其次他的主要任务是做（生成词向量，Q）</h1><p>Word2Vec 模型是不是预训练模型？（是）</p><p>一定是</p><p>什么是预训练？</p><p>给出两个任务 A 和 B，任务 A 已经做出了模型 A，任务 B 无法解决（通过使用模型 A，加快任务的解决）</p><p>给你一个 NLP 里面的任务，给一个问题 X（Ni+ck），给出一个回答 Y（handsome）</p><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/we%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84%E9%A2%84%E8%AE%AD%E7%BB%83.jpg" alt="img"></p><p>预训练语言模型终于出来（给出一句话，我们先使用独热编码（一一对应的一种表查询），再使用Word2Vec 预训练好的 Q 矩阵直接得到词向量，然后进行接下来的任务）</p><ol><li>冻结：可以不改变 Q 矩阵</li><li>微调：随着任务的改变，改变 Q 矩阵</li></ol>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神经网络语言模型（独热编码+词向量的起源）</title>
      <link href="/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/05%20%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%EF%BC%88%E7%8B%AC%E7%83%AD%E7%BC%96%E7%A0%81+%E8%AF%8D%E5%90%91%E9%87%8F%E7%9A%84%E8%B5%B7%E6%BA%90%EF%BC%89/"/>
      <url>/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/05%20%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%EF%BC%88%E7%8B%AC%E7%83%AD%E7%BC%96%E7%A0%81+%E8%AF%8D%E5%90%91%E9%87%8F%E7%9A%84%E8%B5%B7%E6%BA%90%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>统计语言模型</h1><p>统计+语言模型–》用统计的方法去完成以下两个和人说的话相关的任务</p><p>语言模型 = 语言（人说的话） + 模型（去完成两个任务）</p><ol><li>比较，“词性”，“磁性”</li><li>预测下一个单词（填空）</li></ol><h2 id="n-元语言模型">n 元语言模型</h2><p>取 a（2，3，4） 个词</p><h1>神经网络语言模型</h1><p>神经网络+语言模型–》用神经网络的方法去完成以下两个和人说的话相关的任务。</p><p>第二个任务：</p><p>“判断”，“一个”，“词”，“的”，“<code>___</code>”</p><p>假设词库里有“词性”和“火星”</p><p>P(<code>__</code>|“判断”，“一个”，“词”，“的”)</p><p>词性</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B.jpg" alt="img" style="zoom:67%;" /><p>w1,w2,w3,w4（上述 4 个单词的独热编码）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">w1*Q=c1,</span><br><span class="line">w2*Q=c2,</span><br><span class="line">w3*Q=c3,</span><br><span class="line">w4*Q=c4,</span><br><span class="line"></span><br><span class="line">C=[c1,c2,c3,c4]</span><br><span class="line">Q就是一个随机矩阵，是一个参数（可学习）</span><br></pre></td></tr></table></figure><p>“判断”，“这个”，“词”，“的”，“词性”</p><p>softmax（U[tanh(WC+b1)]+b2）== [0.1, 0.1, 0.2, 0.2, 0.4] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∈</mo><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>V</mi><mi>L</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\in[1,V_L]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></p><h2 id="独热编码-（one-hot-编码）">独热编码 （one-hot 编码）</h2><p>独热编码：让计算机认识单词</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E5%8D%95%E8%AF%8D%E7%9A%84%E7%8B%AC%E7%83%AD%E8%A1%A8%E7%A4%BA.jpg" alt="img" style="zoom:50%;" /><p>词典 V（新华字典里面把所有词集合成一个集合 V）</p><p>假设词典里面只有 8 个单词</p><p>计算机不认识单词的</p><p>但是我们要计算机认识单词</p><p>“fruit”</p><p>独热编码：给出一个 8*8 的矩阵</p><p>“time” --》 10000000</p><p>“fruit” --》 01000000</p><p>“banana” --》 00000001</p><p>余弦相似度 去计算两者的相似度（0）–词向量（矩阵乘法）</p><h1>词向量（神经网络语言模型的副产品 Q）</h1><p>给我任何一个词，</p><p>“判断” --》 独热编码w1 [1,0,0,0,0]</p><p>w1*Q =c1  （“判断”这个词的词向量）</p><p>词向量：就是用一个向量来表示一个单词</p><p>可以控制词向量的维度（大小）</p><p>如果我们得到的词向量，第一个问题也被解决了，（下游任务）</p><h1>总结</h1><p>神经网络语言模型：通过神经网络解决两个人说的话的问题</p><p>有一个副产品：Q 矩阵–》新的词向量（词向量可以选择词向量的维度，可以求两个词之间的相似程度）</p><p>下游任务</p>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ELMo模型（双向LSTM模型解决词向量多义问题）</title>
      <link href="/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/08%20ELMo%E6%A8%A1%E5%9E%8B%EF%BC%88%E5%8F%8C%E5%90%91LSTM%E6%A8%A1%E5%9E%8B%E8%A7%A3%E5%86%B3%E8%AF%8D%E5%90%91%E9%87%8F%E5%A4%9A%E4%B9%89%E9%97%AE%E9%A2%98%EF%BC%89/"/>
      <url>/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/08%20ELMo%E6%A8%A1%E5%9E%8B%EF%BC%88%E5%8F%8C%E5%90%91LSTM%E6%A8%A1%E5%9E%8B%E8%A7%A3%E5%86%B3%E8%AF%8D%E5%90%91%E9%87%8F%E5%A4%9A%E4%B9%89%E9%97%AE%E9%A2%98%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>Word2Vec 模型</h1><p>NNLM 模型（是不是在预测下一个词，副产品是词向量）</p><p>Word2Vec 模型：专门做词向量</p><ol><li>CBOW</li><li>Skip-gram</li></ol><h1>ELMo</h1><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/we%E5%A4%9A%E4%B9%89%E8%AF%8D%E9%97%AE%E9%A2%98.jpg" alt="img"></p><p>elmo 解决多义词问题</p><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/word2vec.jpg" alt="img"></p><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E5%9F%BA%E4%BA%8E%E4%B8%8A%E4%B8%8B%E6%96%87%E7%9A%84emedding.jpg" alt="img"></p><p>ELMo（专门做词向量，通过预训练）</p><p>不只是训练一个 Q 矩阵，我还可以把这个次的上下文信息融入到这个 Q 矩阵中</p><p>左边的 LSTM 获取 E2 的上文信息，右边就是下文信息</p><p>x1,x2, x4,x5 --&gt; Word2Vec x1+x2+x4+x5 —&gt; 预测那一个词</p><p>获取上下文信息后，把三层的信息进行一个叠加</p><p>E1+E2+E3 = K1 一个新的词向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≈</mo></mrow><annotation encoding="application/x-tex">\approx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4831em;"></span><span class="mrel">≈</span></span></span></span> E1</p><p>E2,E3 相当于两个上下文信息</p><p>E1+E2+E3+E4</p><p>K1 包含了第一个词的词向量包含单词特征、句法特征、语义特征</p><p>怎么用</p><p>E2，E3 不同，E1+E2+E3 不同</p><p>apple --》 我吃了一个 苹果 – 》 [1,20,10]</p><p>apple --》我在用苹果手机 --》[1,10,20]</p><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/elmo%E8%AE%AD%E7%BB%83%E5%90%8E%E7%9A%84%E4%BD%BF%E7%94%A8.jpg" alt="img"></p><p>LSTM 无法并行，长期依赖</p><p>Attention</p>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Transformer</title>
      <link href="/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/Transformer/"/>
      <url>/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/Transformer/</url>
      
        <content type="html"><![CDATA[<h1>框架概述</h1><p>1000*0.04=40–&gt;10</p><p>5000*0.04=200–&gt;20</p><p>预训练–》NNLM–》word2Vec–》ELMo–》Attention</p><p>NLP 中预训练的目的，其实就是为了生成词向量</p><p>顺水推舟，transformer 其实就是 attention 的一个堆叠</p><p>从一个宏观的角度，去看 transformer 到底在干嘛，然后在细分，再作总结</p><p>总分总</p><p>seq2seq</p><p>一句话，一个视频</p><p>序列（编码器）到序列（解码器）</p><p>分成两部分，编码器和解码器</p><h2 id="整体框架">整体框架</h2><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-%E6%95%B4%E4%BD%93%E6%A1%86%E6%9E%B6.jpg" alt="img" style="zoom:33%;" /><h2 id="机器翻译流程（Transformer）">机器翻译流程（Transformer）</h2><p>通过机器翻译来做解释</p><p>给一个输入，给出一个输出（输出是输入的翻译的结果）</p><p>“我是一个学生”  --》（通过 Transformer） I am a student</p><p>流程 1</p><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-%E6%A1%86%E6%9E%B6%E7%AE%80%E5%8C%96.jpg" alt="img"></p><p>编码器和解码器</p><p>编码器：把输入变成一个词向量（Self-Attetion）</p><p>解码器：得到编码器输出的词向量后，生成翻译的结果</p><p>流程 2</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-ed-%E6%A1%86%E6%9E%B6.jpg" alt="img" style="zoom:80%;" /><p>Nx 的意思是，编码器里面又有 N 个小编码器（默认 N=6）</p><p>通过 6 个编码器，对词向量一步又一步的强化（增强）</p><p>流程 3</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-ed-%E5%A4%8D%E6%9D%82.jpg" alt="img" style="zoom:80%;" /><p>说了这么多，了解 Transformer 就是了解 Transformer 里的小的编码器（Encoder）和小的解码器（Decoder）</p><p>FFN（Feed Forward）：w2(（w1x+b1）)+b2</p><p>流程 4</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed-%E7%BB%86%E5%88%86.jpg" alt="img" style="zoom:80%;" /><h1>Transformer 的编码器（Encodes）——我在做更优秀的词向量</h1><h2 id="Transformer-框架">Transformer 框架</h2><p>seq（编码器）2seq（解码器）</p><ol><li>通过编码器对序列进行向量化（词向量）</li><li>把词向量输入到解码器，得到结果（生成单词）</li></ol><h2 id="编码器概略图">编码器概略图</h2><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed-%E7%BB%86%E5%88%86.jpg" alt="img" style="zoom:80%;" /><p>编码器包括两个子层，Self-Attention、Feed Forward</p><p>每一个子层的传输过程中都会有一个（残差网络+归一化）</p><h2 id="编码器详细图">编码器详细图</h2><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/encoder-%E8%AF%A6%E7%BB%86%E5%9B%BE.png" alt="img" style="zoom:80%;" /><p>Thinking</p><p>–》得到绿色的 x1（词向量，可以通过 one-hot、word2vec 得到）+ 叠加位置编码（给 x1 赋予位置属性）得到黄色的 x1</p><p>–》输入到 Self-Attention 子层中，做注意力机制（x1、x2 拼接起来的一句话做），得到 z1（x1 与 x1，x2拼接起来的句子做了自注意力机制的词向量，表征的仍然是 thinking），也就是说 z1 拥有了位置特征、句法特征、语义特征的词向量</p><p>–》残差网络（避免梯度消失，w3(w2(w1x+b1)+b2)+b3，如果 w1，w2，w3 特别小，0.0000000000000000……1，x 就没了，【w3(w2(w1x+b1)+b2)+b3+x】），归一化（LayerNorm），做标准化（避免梯度爆炸），得到了深粉色的 z1</p><p>–》Feed Forward，Relu（w2(w1x+b1)+b2），（前面每一步都在做线性变换，wx+b，线性变化的叠加永远都是线性变化（线性变化就是空间中平移和扩大缩小），通过 Feed Forward中的 Relu 做一次非线性变换，这样的空间变换可以无限拟合任何一种状态了），得到 r1（是 thinking 的新的表征）</p><p>总结下（这是重点，上面听不懂都没关系）：做词向量，只不过这个词向量更加优秀，让这个词向量能够更加精准的表示这个单词、这句话。</p><h1>Transformer 的解码器（Decoders）——我要生成一个又一个单词</h1><h2 id="Transformer-编码器">Transformer 编码器</h2><p>编码器在干吗：词向量、图片向量，总而言之，编码器就是让计算机能够更合理地（不确定性的）认识人类世界客观存在的一些东西</p><h2 id="Transformer-解码器">Transformer 解码器</h2><p>解码器会接收编码器生成的词向量，然后通过这个词向量去生成翻译的结果。</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed-%E7%BB%86%E5%88%86.jpg" alt="img" style="zoom:80%;" /><p>解码器的 Self-Attention 在编码已经生成的单词</p><p>假如目标词“我是一个学生”—》masked Self-Attention</p><p>训练阶段：目标词“我是一个学生”是已知的，然后 Self-Attention 是对“我是一个学生” 做计算</p><p>如果不做 masked，每次训练阶段，都会获得全部的信息</p><p>如果做 masked，Self-Attention 第一次对“我”做计算</p><p>Self-Attention 第二次对“我是”做计算</p><p>……</p><p>测试阶段：</p><ol><li>目标词未知，假设目标词是“我是一个学生”（未知），Self-Attention 第一次对“我”做计算</li><li>第二次对“我是”做计算</li><li>……</li></ol><p>而测试阶段，没生成一点，获得一点</p><h2 id="生成词">生成词</h2><img src="../../ed-交互.jpg" alt="img" style="zoom:80%;" /><p>Linear 层转换成词表的维度</p><p>softmax 得到最大词的概率</p><p>softmax 细话</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-%E6%9C%80%E5%90%8E%E8%BE%93%E5%87%BA.jpg" alt="img" style="zoom:80%;" /><p>单词表</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-%E6%9C%80%E7%BB%88%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C.jpg" alt="img" style="zoom:80%;" /><h1>Transformer 的动态流程</h1><p>机器翻译：德语（中文）翻译成英文</p><h2 id="生成一个词">生成一个词</h2><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90.gif" alt="img"></p><h2 id="生成所有词">生成所有词</h2><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-%E5%8A%A8%E6%80%81%E7%BB%93%E6%9E%9C-2.gif" alt="img"></p><h2 id="Transformer-框架-2">Transformer 框架</h2><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-%E6%95%B4%E4%BD%93%E6%A1%86%E6%9E%B6.jpg" alt="img"></p><h1>Transformer 解码器的两个为什么（为什么做掩码、为什么用编码器-解码器注意力）</h1><h2 id="Transformer-的编码器和解码器">Transformer 的编码器和解码器</h2><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-%E6%95%B4%E4%BD%93%E6%A1%86%E6%9E%B6.jpg" alt="img" style="zoom:50%;" /><h2 id="问题一：为什么-Decoder-需要做-Mask">问题一：为什么 Decoder 需要做 Mask</h2><p>机器翻译：源语句（我爱中国），目标语句（I love China）</p><p>为了解决训练阶段和测试阶段的 gap（不匹配）</p><p>训练阶段：解码器会有输入，这个输入是目标语句，就是 I love China，通过已经生成的词，去让解码器更好的生成（每一次都会把所有信息告诉解码器）</p><p>测试阶段：解码器也会有输入，但是此时，测试的时候是不知道目标语句是什么的，这个时候，你每生成一个词，就会有多一个词放入目标语句中，每次生成的时候，都是已经生成的词（测试阶段只会把已经生成的词告诉解码器）</p><p>为了匹配，为了解决这个 gap，masked Self-Attention 就登场了，我在训练阶段，我就做一个 masked，当你生成第一个词，我啥也不告诉你，当你生成第二个词，我告诉第一个词</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/mask-attention-map.jpg" alt="img" style="zoom:50%;" /><h2 id="问题二：为什么-Encoder-给予-Decoders-的是-K、V-矩阵">问题二：为什么 Encoder 给予 Decoders 的是 K、V 矩阵</h2><p>Q来源解码器，K=V来源于编码器</p><p>Q是查询变量，Q 是已经生成的词</p><p>K=V 是源语句</p><p>当我们生成这个词的时候，通过已经生成的词和源语句做自注意力，就是确定源语句中哪些词对接下来的词的生成更有作用，首先他就能找到当前生成词</p><p>我爱中国</p><p>通过部分（生成的词）去全部（源语句）的里面挑重点</p><p>Q 是源语句，K，V 是已经生成的词，源语句去已经生成的词里找重点 ，找信息，已经生成的词里面压根就没有下一个词</p><p>解决了以前的 seq2seq 框架的问题</p><p>lstm 做编码器（得到词向量 C），再用 lstm 做解码器做生成</p><p>用这种方法去生成词，每一次生成词，都是通过 C 的全部信息去生成</p><p>很多信息对于当前生成词而言都是没有意义的</p><p>用 Pytorch 去构建 Transformer 的源码（）</p><h1>位置编码公式详细理解补充</h1><p>Self-Attention：对于每个词而言都是无位置关系，把每个词的顺序打乱，得到的注意力值依然不变</p><p>通过 t1 告诉你，x1 是在前面，x2 在 x1 的后面</p><ul><li>位置编码</li></ul><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E4%BD%8D%E7%BD%AE%E5%90%91%E9%87%8F.jpg" alt="img" style="zoom:50%;" /><ul><li>位置编码公式</li></ul><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E4%BD%8D%E7%BD%AE%E7%BC%96%E7%A0%81%E5%85%AC%E5%BC%8F.png" alt="img" style="zoom:50%;" /><p>位置编码怎么用</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E4%BD%8D%E7%BD%AE%E7%BC%96%E7%A0%81%E5%92%8C%E8%AF%8D%E5%90%91%E9%87%8F%E4%B9%8B%E5%92%8C.png" alt="img" style="zoom:50%;" /><ul><li>位置编码底层解释</li></ul><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E4%BD%8D%E7%BD%AE%E5%B5%8C%E5%85%A5%E8%A7%A3%E9%87%8A.png" alt="img" style="zoom:50%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sin(pos+k) = sin(pos)*cos(k) + cos(pos)*sin(k)  # sin 表示的是偶数维度</span><br><span class="line">cos(pos+k) = cos(pos)cos(k) - sin(pos)*sin(k)  # cos 表示的是奇数维度</span><br><span class="line"></span><br><span class="line">他特别在 pos+k 是 pos 和 k 的线性组合</span><br><span class="line"></span><br><span class="line">我爱你 ，现在我做第三个词 “你” 的位置编码</span><br><span class="line"></span><br><span class="line">pos = 3 = 1+2</span><br><span class="line">pos + k = 3 =  1+2 = 1*2+1*2</span><br><span class="line"></span><br><span class="line">pos = 10</span><br><span class="line">1+9，2+8，3+7</span><br><span class="line"></span><br><span class="line">这句话变成 “你爱我”，现在我们仍然做第三个词 “我” 的位置编码</span><br><span class="line"></span><br><span class="line">pos = 3 = 1+2</span><br><span class="line">pos + k = 3 =  1+2 = 1*2+1*2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>注意力机制（Attention ）</title>
      <link href="/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%9C%BA%E5%88%B6%EF%BC%88Attention%20%EF%BC%89/"/>
      <url>/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%9C%BA%E5%88%B6%EF%BC%88Attention%20%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>Attention（注意力机制）</h1><p>你会注意什么？</p><p>大数据（什么数据都有，重要的，不重要的）</p><p>对于重要的数据，我们要使用</p><p>对于不重要的数据，我们不太想使用</p><p>但是，对于一个模型而言（CNN、LSTM），很难决定什么重要，什么不重要</p><p>由此，注意力机制诞生了（有人发现了如何去在深度学习的模型上做注意力）</p><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E4%BA%BA%E7%B1%BB%E7%9A%84%E8%A7%86%E8%A7%89%E6%B3%A8%E6%84%8F%E5%8A%9B.jpg" alt="img"></p><p>红色的是科学家们发现，如果给你一张这个图，你眼睛的重点会聚焦在红色区域</p><p>人–》看脸</p><p>文章看标题</p><p>段落看开头</p><p>后面的落款</p><p>这些红色区域可能包含更多的信息，更重要的信息</p><p>注意力机制：我们会把我们的焦点聚焦在比较重要的事物上</p><h1>怎么做注意力</h1><p>我（查询对象 Q），这张图（被查询对象 V）</p><p>我看这张图，第一眼，我就会去判断哪些东西对我而言更重要，哪些对我而言又更不重要（去计算 Q 和 V 里的事物的重要度）</p><p>重要度计算，其实是不是就是相似度计算（更接近），点乘其实是求内积（不要关心为什么可以）</p><p>Q，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>=</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>k</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">K =k_1,k_2,\cdots,k_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，我们一般使用点乘的方式</p><p>通过点乘的方法计算Q 和 K 里的每一个事物的相似度，就可以拿到 Q 和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">k_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的相似值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">s_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，Q 和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">k_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的相似值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">s_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，Q 和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">k_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的相似值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">s_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>做一层 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>s</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>s</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">softmax(s_1,s_2,\cdots,s_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">so</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 就可以得到概率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a_1,a_2,\cdots,a_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>进而就可以找出哪个对Q 而言更重要了</p><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/attention-%E8%AE%A1%E7%AE%97%E5%9B%BE.png" alt="img"></p><p>我们还得进行一个汇总，当你使用 Q 查询结束了后，Q 已经失去了它的使用价值了，我们最终还是要拿到这张图片的，只不过现在的这张图片，它多了一些信息（多了于我而言更重要，更不重要的信息在这里）</p><p>V = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>v</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(v_1,v_2,\cdots,v_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>∗</mo><mo>+</mo><mo stretchy="false">(</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>v</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>v</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>v</mi><mn>2</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub><mo>∗</mo><msub><mi>v</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a_1,a_2,\cdots,a_n)*+(v_1,v_2,\cdots,v_n)=(a_1*v_1+a_2*v_2+\cdots+a_n*v_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">+</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6153em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6153em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> = V’</p><p>这样的话，就得到了一个新的 V’，这个新的 V’ 就包含了，哪些更重要，哪些不重要的信息在里面，然后用 V’ 代替 V</p><p>一般 K=V，在 Transformer 里，K!=V 可不可以，可以的，但是 K 和 V 之间一定具有某种联系，这样的 QK 点乘才能指导 V 哪些重要，哪些不重要</p><p>51， 49—》 0.51，0.49</p><p>80/8，20/8 --》 0.9999999999， 0.0000000001</p><h3 id="10-3-0-9-0-1">10 / 3 --&gt; 0.9, 0.1</h3><p>a1 和 a2 之间的差额越大，这个概率就越离谱</p><h1>Self-Attention（自注意力机制）</h1><h2 id="注意力机制">注意力机制</h2><p>看一个物体的时候，我们倾向于一些重点，把我们的焦点放到更重要的信息上</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E4%BA%BA%E7%B1%BB%E7%9A%84%E8%A7%86%E8%A7%89%E6%B3%A8%E6%84%8F%E5%8A%9B.jpg" alt="img" style="zoom:50%;" /><p>第一眼看到这个图，不会说把所有的信息全部看完</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention.jpg" alt="img" style="zoom:50%;" /><p>QK 相乘求相似度，做一个 scale（未来做 softmax 的时候避免出现极端情况）</p><p>然后做 Softmax 得到概率</p><p>新的向量表示了K 和 V（K==V），然后这种表示还暗含了 Q 的信息（于 Q 而言，K 里面重要的信息），也就是说，挑出了 K 里面的关键点</p><h2 id="自-注意力机制（Self-Attention）（向量）">自-注意力机制（Self-Attention）（向量）</h2><p>Self-Attention 的关键点再于，不仅仅是 K<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≈</mo></mrow><annotation encoding="application/x-tex">\approx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4831em;"></span><span class="mrel">≈</span></span></span></span>V<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≈</mo></mrow><annotation encoding="application/x-tex">\approx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4831em;"></span><span class="mrel">≈</span></span></span></span>Q 来源于同一个 X，这三者是同源的</p><p>通过 X 找到 X 里面的关键点</p><p>并不是 K=V=Q=X，而是通过三个参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>Q</mi></msub><mo separator="true">,</mo><msub><mi>W</mi><mi>K</mi></msub><mo separator="true">,</mo><msub><mi>W</mi><mi>V</mi></msub></mrow><annotation encoding="application/x-tex">W_Q,W_K,W_V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>接下来的步骤和注意力机制一模一样</p><ol><li><p>Q、K、V的获取</p><ol><li><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qkv.jpg" alt="img" style="zoom:50%;" /></li></ol></li><li><p>Matmul：</p></li><li><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/Q-K%E4%B9%98%E7%A7%AF.jpg" alt="img" style="zoom:50%;" /></li><li><p>Scale+Softmax：</p></li><li><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qk-scale.jpg" alt="img" style="zoom:50%;" /></li><li><h3 id="Matmul：">Matmul：</h3><ol><li><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qk-softmax.jpg" alt="img" style="zoom:50%;" /></li></ol></li></ol><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示的就是 thinking 的新的向量表示</p><p>对于 thinking，初始词向量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>现在我通过 thinking  machines 这句话去查询这句话里的每一个单词和 thinking 之间的相似度</p><p>新的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>依然是 thinking 的词向量表示，只不过这个词向量的表示蕴含了 thinking machines 这句话对于 thinking 而言哪个更重要的信息</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention-%E5%A5%BD%E5%A4%842.jpg" alt="img" style="zoom:67%;" /><p>不做注意力，its 的词向量就是单纯的 its，没有任何附加信息</p><blockquote><p>也就是说 its 有 law 这层意思，而通过自注意力机制得到新的 its 的词向量，则会包含一定的 laws 和 application 的信息</p></blockquote><h2 id="自注意力机制（矩阵）">自注意力机制（矩阵）</h2><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/QKV-%E7%9F%A9%E9%98%B5%E8%A1%A8%E7%A4%BA.jpg" alt="img" style="zoom:50%;" /><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/QKVZ-%E7%BB%93%E6%9E%9C.jpg" alt="img" style="zoom:50%;" /><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%9C%BA%E5%88%B6%E7%9F%A9%E9%98%B5%E5%9B%BE.jpg" alt="img" style="zoom:50%;" /><h1>Self-Attention相比较 RNN和LSTM的优缺点</h1><h2 id="RNN">RNN</h2><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/RNN-unrolled.png" alt="img"></p><p>无法做长序列，当一段话达到 50 个字，效果很差了</p><h2 id="LSTM">LSTM</h2><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/LSTM%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84.jpg" alt="img"></p><p>LSTM 通过各种门，遗忘门，选择性的可以记忆之前的信息（200 词）</p><h2 id="Self-Attention-和-RNNs-的区别">Self-Attention 和 RNNs 的区别</h2><p>RNNs 长序列依赖问题，无法做并行</p><p>Self-Attention 得到的新的词向量具有句法特征和语义特征（词向量的表征更完善）</p><h3 id="句法特征">句法特征</h3><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention-%E5%A5%BD%E5%A4%841.jpg" alt="img" style="zoom:67%;" /><h3 id="语义特征">语义特征</h3><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention-%E5%A5%BD%E5%A4%842.jpg" alt="img" style="zoom:50%;" /><h2 id="并行计算">并行计算</h2><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qk-softmax.jpg" alt="img" style="zoom:50%;" /><h1>Masked Self-Attention（掩码自注意力机制）</h1><h2 id="Masked（掩码）-Self-Attention–》在自注意力模型上面做了改进">Masked（掩码） Self-Attention–》在自注意力模型上面做了改进</h2><p>为什么要做这个改进：生成模型，生成单词，一个一个生成的</p><p>当我们做生成任务的时候，我们也想对生成的这个单词做注意力计算，但是，生成的句子是一个一个单词生成的</p><p>I have a dream</p><ol><li><p>I  第一次注意力计算，只有 I</p></li><li><p>I have 第二次，只有 I 和 have</p></li><li><p>I have a</p></li><li><p>I have a dream</p></li><li><p>I have a dream &lt;eos&gt;</p></li></ol><p>掩码自注意力机制应运而生</p><p>掩码后 1</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/mask-attention-map.jpg" alt="img" style="zoom:50%;" /><p>掩码后2</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/mask-attention-map-softmax.jpg" alt="img" style="zoom:50%;" /><p>未来我们讲 Transformer 的时候会详细讲！</p><p>Multi-head Self-Attention。</p><h1>Multi-Head Self-Attention（从空间角度解释为什么做多头）</h1><h2 id="Multi-Head-Self-Attention（多头自注意力）">Multi-Head Self-Attention（多头自注意力）</h2><p>Z 相比较 X 有了提升，通过 Multi-Head Self-Attention，得到的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">Z{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mord"><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span> 相比较 Z 又有了进一步提升</p><p>多头自注意力，问题来了，多头是什么，多头的个数用 h 表示，一般<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">h=8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">8</span></span></span></span>，我们通常使用的是 8 头自注意力</p><p>什么是多头</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/multi-head-attention.png" alt="img" style="zoom:50%;" /><p>如何多头 1</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/8-head-attention.jpg" alt="img" style="zoom:50%;" /><p>对于 X，我们不是说，直接拿 X 去得到 Z，而是把 X 分成了 8 块（8 头），得到 Z0-Z7</p><p>如何多头 2</p><p>然后把 Z0-Z7 拼接起来，再做一次线性变换（改变维度）得到 Z</p><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/8-z-%E6%8B%BC%E6%8E%A5.jpg" alt="img"></p><p>有什么作用？</p><p>机器学习的本质是什么：y=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>(wx+b)，在做一件什么事情，非线性变换（把一个看起来不合理的东西，通过某个手段（训练模型），让这个东西变得合理）</p><p>非线性变换的本质又是什么？改变空间上的位置坐标，任何一个点都可以在维度空间上找到，通过某个手段，让一个不合理的点（位置不合理），变得合理</p><p>这就是词向量的本质</p><p>one-hot 编码（0101010）</p><p>word2vec（11，222，33）</p><p>emlo（15，3，2）</p><p>attention（124，2，32）</p><p>multi-head attention（1231，23，3），把 X 切分成 8 块（8 个子空间），这样一个原先在一个位置上的 X，去了空间上 8 个位置，通过对 8 个点进行寻找，找到更合适的位置</p><p>词向量的大小是 512</p><p>假设你的任务，视频向量是 5120，80</p><p>对计算机的性能提出了要求</p><h2 id="多头流程图">多头流程图</h2><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/multi-head-%E6%8B%BC%E6%8E%A5.jpg" alt="img" style="zoom:50%;" /><h1>Positional Encoding （为什么 Self-Attention 需要位置编码）</h1><h2 id="Attention">Attention</h2><p>优点：</p><ol><li>解决了长序列依赖问题</li><li>可以并行</li></ol><p>缺点：</p><ol><li><p>开销变大了</p></li><li><p>既然可以并行，也就是说，词与词之间不存在顺序关系（打乱一句话，这句话里的每个词的词向量依然不会变），即无位置关系（既然没有，我就加一个，通过位置编码的形式加）</p></li></ol><p>位置编码的问题</p><h2 id="为什么需要位置编码">为什么需要位置编码</h2><h2 id="位置编码怎么做的">位置编码怎么做的</h2><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E4%BD%8D%E7%BD%AE%E5%90%91%E9%87%8F.jpg" alt="img" style="zoom:50%;" /><h2 id="具体做法">具体做法</h2><ul><li>做法 1</li></ul><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E4%BD%8D%E7%BD%AE%E7%BC%96%E7%A0%81%E5%85%AC%E5%BC%8F.png" alt="img" style="zoom:50%;" /><ul><li>做法 2</li></ul><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E4%BD%8D%E7%BD%AE%E7%BC%96%E7%A0%81%E5%92%8C%E8%AF%8D%E5%90%91%E9%87%8F%E4%B9%8B%E5%92%8C.png" alt="img" style="zoom:50%;" /><h2 id="为什么这么做有用">为什么这么做有用</h2><p>pos+K=5，我在计算第 5 个单词的位置编码的时候</p><p>pos=1，k=4</p><p>pos=2，k=3</p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E4%BD%8D%E7%BD%AE%E5%B5%8C%E5%85%A5%E8%A7%A3%E9%87%8A.png" alt="img" style="zoom:50%;" />]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word2Vec模型</title>
      <link href="/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/06%20Word2Vec%E6%A8%A1%E5%9E%8B%EF%BC%88%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%93%E9%97%A8%E5%81%9A%E8%AF%8D%E5%90%91%E9%87%8F%E7%9A%84%E6%A8%A1%E5%9E%8B%EF%BC%8CCBOW%E5%92%8CSkip-gram%EF%BC%89/"/>
      <url>/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/06%20Word2Vec%E6%A8%A1%E5%9E%8B%EF%BC%88%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%93%E9%97%A8%E5%81%9A%E8%AF%8D%E5%90%91%E9%87%8F%E7%9A%84%E6%A8%A1%E5%9E%8B%EF%BC%8CCBOW%E5%92%8CSkip-gram%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>神经网络语言模型（NNLM）–》为了预测下一个词</h1><p>NNLM（）–》预测下一个词</p><p>神经网络+语言模型：用神经网络去解决和人说话有关的两个任务的一个东西</p><p>softmax(w2(tanh(（w1x+b1）))+b2)</p><p>得到一个副产品（词向量）</p><p>Q 矩阵，对于任何一个独热编码的词向量都可以通过 Q 矩阵得到新的词向量</p><ol><li>可以转换维度</li><li>相似词之间的词向量之间也有了关系</li></ol><h1>Word2Vec --》 为了得到词向量</h1><p>神经网络语言模型–》主要目的就是为了得到词向量</p><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B.jpg" alt="img"></p><p><img src="https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/word2vec.jpg" alt="img"></p><p>NNLM 和 Word2Vec 基本一致（一模一样），不考虑细节，网络架构就是一模一样</p><h2 id="CBOW">CBOW</h2><p>给出一个词的==上下文==，得到这个词</p><p>“我是最<code>_</code>的Nick”</p><p>“帅” <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">w_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><h2 id="Skip-gram">Skip-gram</h2><p>给出一个词，得到这个词的上下文</p><p>“帅”</p><p>“我是<code>_</code>的Nick”</p><h1>NNLM 和 Word2Vec 的区别</h1><p>NNNL --》 重点是预测下一词，双层感知机softmax(w2(tanh(（w1(xQ)+b1）))+b2)</p><p>Word2Vec --》 CBOW 和 Skip-gram 的两种架构的重点都是得到一个 Q 矩阵，softmax(w1 (xQ) +b1)</p><ol><li>CBOW：一个老师告诉多个学生，Q 矩阵怎么变</li><li>Skip：多个老师告诉一个学生，Q 矩阵怎么变</li></ol><h1>Word2Vec的缺点</h1><p>Q 矩阵的设计</p><p>00010 代表 apple × Q = 10，12，19</p><p>apple（苹果，）</p><p>假设数据集里面的 apple 只有苹果这个意思，没有这个意思（训练）</p><p>（测试，应用）10，12，19 apple, 无法表示这个意思</p><p>词向量不能进行多意 —》 ELMO</p>]]></content>
      
      
      <categories>
          
          <category> NER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大创命题清单（2024）</title>
      <link href="/2023/11/23/jike/%E5%A4%A7%E5%88%9B%E9%A1%B9%E7%9B%AE%E5%90%88%E9%9B%86/"/>
      <url>/2023/11/23/jike/%E5%A4%A7%E5%88%9B%E9%A1%B9%E7%9B%AE%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p>慧试遗产~内有各老师联系方式，可以踊跃联系！</p><p>【腾讯文档】2024年度西电大学生创新创业训练计划命题清单<br><a href="https://docs.qq.com/sheet/DVWRVRWFKU0FwYlpS?tab=BB08J2">https://docs.qq.com/sheet/DVWRVRWFKU0FwYlpS?tab=BB08J2</a></p>]]></content>
      
      
      <categories>
          
          <category> 计科资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计科 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
